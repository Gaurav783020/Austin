{"version":3,"sources":["assets/common/base-url.js","login/OTPLogin.js","login/login.js","register/register.js","components/loader.js","components/toast.js","components/header.js","patients-profile/tab-pages/patient-tab-headers.js","assets/common/countries.js","patients-profile/tab-pages/contact.js","patients-profile/tab-pages/personal.js","patients-profile/tab-pages/medical.js","components/image-dialog.js","assets/common/file-to-base64.js","patients-profile/tab-pages/others/past-prescriptions-dialog.js","patients-profile/tab-pages/medical-history.js","patients-profile/tab-pages/lifestyle.js","assets/common/operations.js","appointments/doctors-dialog.js","appointments/schedule-appointment.js","patients-profile/patients.js","doctors-profile/tab-pages/doctors-tab-headers.js","doctors-profile/tab-pages/personal.js","doctors-profile/tab-pages/contact.js","doctors-profile/tab-pages/portfolio.js","doctors-profile/doctors.js","login/doctors-login.js","admin/dashboard/cards.js","admin/dashboard/cards-values.js","admin/dashboard/cardbox.js","admin/dashboard/doctors-list-item.js","admin/dashboard/doctors.js","admin/dashboard/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["ApiPath","OTPLogin","props","history","useHistory","useState","countdownTimer","setCountdownTimer","input1","setInput1","input2","setInput2","input3","setInput3","input4","setInput4","input5","setInput5","input6","setInput6","useEffect","setInterval","value","displayClasss","showDialog","className","id","onClick","hideDialog","phoneNumber","type","maxLength","onChange","e","target","keyCode","document","getElementById","focus","data","loginId","role","validatedbyotp","options","JSON","stringify","setIsLoaderVisible","fetch","then","response","json","statusCode","showToast","sessionStorage","setItem","token","uidNo","push","message","catch","err","Login","setValue","displayOTP","setDisplayOTP","style","minHeight","src","defaultCountry","placeholder","to","display","Register","name","setName","setRole","phone","setPhone","password","setPassword","verifyPassword","setVerifyPassword","marginTop","marginBottom","autoComplete","substring","width","Loader","displayClass","isVisible","Toast","visStatus","toastVisibility","toastMessage","setTimeout","setToastVisibility","iconSrc","contentStyle","headerStyle","msgBoxType","borderLeft","color","innerText","alt","Header","background","outline","border","cursor","fontFamily","marginRight","PatientTabHeaders","selectedTab","setSelectedTab","countriesList","code","Contact","setShowDialog","address","houseNumber","street","city","state","district","postalCode","showPhone","contactPerson","length","contactDetails","relationship","country","emailId","contact","setResetData","ContactDialog","addressData","txtPhone","setTxtPhone","addressType","setAddressType","txtHouseNo","setTxtHouseNo","txtStreet","setTxtStreet","txtCity","setTxtCity","txtDistrict","setTxtDistrict","txtState","setTxtState","txtPostalCode","setTxtPostalCode","txtCountry","setTxtCountry","txtEmail","setTxtEmail","txtContactPerson","setTxtContactPerson","txtRelationship","setTxtRelationship","txtContactPhone","setTxtContactPhone","displayDialog","countryList","map","item","index","rows","getItem","error","Personal","gender","maritalStatus","birthDate","communicationLang","languagePref","deceased","deceasedBoolean","deceasedDateTime","PersonalDialog","showDeceased","setShowDeceased","cbxDeceased","setCbxDeceased","fullName","setFullName","cbxGender","setCbxGender","cbxMaritalStatus","setCbxMaritalStatus","txtBirthDate","setTxtBirthDate","txtLanguage","setTxtLanguage","txtDeceasedDate","setTxtDeceasedDate","Medical","allergies","managingOrganization","general","bloodGroup","height","weight","bmi","chestExpansion","vision","bp","pulse","oxygenSaturation","MedicalDialog","boxContent","setBoxContent","txtAllergies","setTxtAllergies","txtManagingOrg","setTxtManagingOrg","setBloodGroup","setHeight","setWeight","setVision","setChestExpansion","bloodPressure","setBloodPressure","setPulse","setOxygenSaturation","setBmi","createItems","content","Array","isArray","split","trim","onBlur","ImageDialog","imageContainerDisplay","embedContainer","imageSource","imageExtension","toString","indexOf","dialogClass","setImageDisplay","hideImageDialog","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","PastPrescriptionsDialog","pastPrescriptions","txtPastPrescriptions","setTxtPastPrescriptions","cbxMedicines","setCbxMedicines","txtAddMedication","setTxtAddMedication","txtMedicationDescription","setTxtMedicationDescription","borderRadius","padding","transform","fileUpload","querySelector","files","size","setTxtCurrentMedications","saveImageToBase64","accept","medication","description","uploads","MedicalHistory","showPrescriptionsDialog","setShowPrescriptionsDialog","showImageDialog","setShowImageDialog","setImageSource","currentMedications","diagnosisReport","mandateExtension","isURL","MedicalHistoryDialog","txtCurrentMedications","txtDiagnosisReport","setTxtDiagnosisReport","cbxIsOnMedications","setCbxIsOnMedications","val","Lifestyle","lifeStyle","smokingHabbit","alcoholConsumption","activityLevel","foodPreference","LifestyleDialog","txtSmokingHabits","setTxtSmokingHabits","txtAlcohol","setTxtAlcohol","txtActivityLevel","setTxtActivityLevel","txtFoodPreference","setTxtFoodPreference","toTimestamp","year","month","day","hour","minute","second","Date","UTC","getTime","DoctorsDialog","cbxSpeciality","setCbxSpeciality","doctorsData","setDoctorsData","selectedDoctor","setSelectedDoctor","txtDate","setTxtDate","spanValue","setSpanValue","timeOfCommenement","setTimeOfCommencement","params","splitDate","dateArray","res","fetchUsersData","doctorsArray","photo","specialization","certification","status","verification","rating","disabled","thisDoctor","find","payLoad","doctor_id","doctor_name","doctor_email_id","email","patient_id","patient_name","patient_email_id","starttime","duration","alert","hideDoctorsDialog","DoctorsListItem","selDoctor","setSelDoctor","randomValue","useRef","Math","floor","random","float","current","ScheduleAppointment","doctorSelected","setDoctorSelected","showDoctorDialog","setShowDoctorDialog","txtPatientsInstruction","setTxtPatientsInstruction","txtSupportingInfo","setTxtSupportingInfo","fileConsent","setFileConsent","specialObject","setSpecialObject","borderBottom","meetingID","speciality","startTime","hideAppointmentDialog","Patients","patientsData","setPatientsData","resetData","outputText","setOutputText","picture","setPicture","appointmentBooked","setAppointmentBooked","showAppointmentDialog","setShowAppointmentDialog","idValue","refPicture","dropZone","fileInput","addEventListener","preventDefault","dataTransfer","removeEventListener","console","log","method","obj","Object","entries","reduce","str","p","DoctorsTabHeaders","emailAddress","txtAddress","setTxtAddress","updateContact","Portfolio","license","issueDate","qualification","PortfolioDialog","txtQualification","setTxtQualification","txtSpecialization","setTxtSpecialization","txtSpecializationType","setTxtSpecializationType","txtLicense","setTxtLicense","txtLicenseIssueDate","setTxtLicenseIssueDate","Doctors","DoctorsLogin","txtDoctorsID","setTxtDoctorsID","txtPassword","setTxtPassword","Cards","numbers","totalCases","icofontClass","lastUpdatedTime","cardsValues","cases","CardBox","vals","toLowerCase","displayActivate","Dashboard","txtSearch","setTxtSearch","doctorsList","setDoctorsList","headers","fetchDoctors","output","filter","listItems","_id","App","isLoaderVisible","toastVis","setToastVis","toastMsg","setToastMsg","setMsgBoxType","ShowToast","messageBoxType","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.860f6b88.chunk.js","sourcesContent":["export const ApiPath = \"http://122.176.120.160:4000/\";","import { useState, useEffect } from \"react\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst OTPLogin = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [countdownTimer, setCountdownTimer] = useState(45);\r\n\r\n    const [input1, setInput1] = useState('')\r\n    const [input2, setInput2] = useState('')\r\n    const [input3, setInput3] = useState('')\r\n    const [input4, setInput4] = useState('')\r\n    const [input5, setInput5] = useState('')\r\n    const [input6, setInput6] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (countdownTimer <= 0) {\r\n            setInterval(() => {\r\n                setCountdownTimer(value => (value - 1));\r\n            }, 1000)\r\n        }\r\n\r\n    }, [countdownTimer])\r\n\r\n    const postLogin = () => {\r\n        const OTP = input1 + input2 + input3 + input4 + input5 + input6;\r\n\r\n        //Remember, patient login...\r\n        if (OTP !== \"203040\") {\r\n            //This value will be replaced later from generated value...\r\n            props.showToast(\"Invalid OTP. Check the registered phone number displayed above, or click 'Resend OTP' to resend.\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            loginId: props.phoneNumber,\r\n            role: \"Patient\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response =>  (response.json()))\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200) {\r\n                    props.showToast(\"Login successful!\", 'success');\r\n\r\n                    //Remember to store the bearer token\r\n                    sessionStorage.setItem(\"token\", response.token);\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo);\r\n\r\n                    history.push(\"/patients/profile\")\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    const displayClasss = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayClasss}>\r\n            <div className=\"dialog-container otp\">\r\n                <div className=\"dialog-content\">\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\">Confirm your phone number</h2>\r\n                        <span id=\"close_toast\" onClick={props.hideDialog}>&times;</span>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <h4>To complete your login, please enter the 6-digit OTP sent to\r\n\r\n                        </h4>\r\n                        <h2 className=\"phone-no\">{props.phoneNumber}</h2>\r\n                        <div className=\"input-array\">\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input1\"\r\n                                value={input1}\r\n                                onChange={e => {\r\n                                    setInput1(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input2\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input2\"\r\n                                value={input2}\r\n                                onChange={e => {\r\n                                    setInput2(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input3\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input3\"\r\n                                value={input3}\r\n                                onChange={e => {\r\n                                    setInput3(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input4\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input4\"\r\n                                value={input4}\r\n                                onChange={e => {\r\n                                    setInput4(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input5\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input5\"\r\n                                value={input5}\r\n                                onChange={e => {\r\n                                    setInput5(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input6\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input6\"\r\n                                value={input6}\r\n                                onChange={e => {\r\n                                    setInput6(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input1\").focus();\r\n                                }}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"resend-group\">\r\n                            <div>\r\n                                <p>Didn't receive the OTP?</p>\r\n                                <button>Resend</button>\r\n                            </div>\r\n                            <div>00:{countdownTimer}</div>\r\n                        </div>\r\n\r\n                        <div className=\"otp-call\">\r\n                            <button>Get OTP on call</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button className=\"btn-continue\" onClick={postLogin}>Continue</button>\r\n                        <button className=\"btn-cancel\" onClick={props.hideDialog}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OTPLogin;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport OTPLogin from './OTPLogin';\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [displayOTP, setDisplayOTP] = useState(false);\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            loginId: value,\r\n            role: \"Patient\",\r\n            validatedbyotp: \"false\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode !== 200) {\r\n                    showToast(response.message, 'exclamation');\r\n                } else {\r\n                    //Else, proceed... show the 2fa page...\r\n                    setDisplayOTP(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"./mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Let's get started!</h2>\r\n\r\n                            <h4>Enter your mobile number</h4>\r\n                            <div className=\"phone-input-container\">\r\n                                <input\r\n                                    id=\"value\"\r\n                                    value={value}\r\n                                    onChange={e => setValue(e.target.value)}\r\n                                    defaultCountry='IN'\r\n                                    className=\"login-control\"\r\n                                    placeholder=\"Mobile Number\"\r\n                                    maxLength={14}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Continue</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Returning Doctor? <Link to=\"/doctors/login\">Login here</Link></h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"./doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                displayOTP && <OTPLogin\r\n                    showDialog={displayOTP}\r\n                    phoneNumber={value}\r\n                    hideDialog={() => setDisplayOTP(false)}\r\n                    showToast={showToast}\r\n                    setIsLoaderVisible={setIsLoaderVisible}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\nexport const Register = ({ setIsLoaderVisible, showToast }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const register = () => {\r\n        //Connect to the api after validation...\r\n        if (name === \"\" || role === \"\" || phone === \"\" || password === \"\") {\r\n            showToast(\"Complete all fields to proceed!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        if (password !== verifyPassword) {\r\n            showToast(\"Password and verify password fields must match!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            name: name,\r\n            role: role,\r\n            phoneNumber: phone,\r\n            password: password\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"register\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    showToast(\"Registration successful! Now login with the new credentials...\", 'success');\r\n\r\n                    if (response.data.uidNo.substring(0, 1) === \"P\") {\r\n                        history.push(\"/\");\r\n                    } else {\r\n                        history.push(\"/doctors/login\")\r\n                    }\r\n\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-divider\">\r\n                <div className=\"left-sidebar\">\r\n                    <img src=\"./mah-logo.png\" />\r\n\r\n                    <div className=\"left-text\" style={{ marginTop: -5 }}>\r\n                        <h2 style={{ marginBottom: 25 }}>Registration</h2>\r\n\r\n                        {/* Form for details entry... */}\r\n                        <div className=\"form-data\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Name (Firstname and Lastname)</label>\r\n                                    <input\r\n                                        id=\"name\"\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Role</label>\r\n                                    <select\r\n                                        id=\"role\"\r\n                                        value={role}\r\n                                        onChange={e => setRole(e.target.value)}\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Patient\">Patient</option>\r\n                                        <option value=\"Doctor\">Doctor</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        id=\"phone\"\r\n                                        value={phone}\r\n                                        onChange={e => setPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Password</label>\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={e => setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Verify Password</label>\r\n                                    <input\r\n                                        id=\"verifyPasword\"\r\n                                        value={verifyPassword}\r\n                                        onChange={e => setVerifyPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={register}\r\n                            >Register</button>\r\n                        </div>\r\n\r\n                        <div className=\"doctor-register\">\r\n                            <h4>Already a user? <Link to=\"/\">Login here</Link></h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-sidebar\">\r\n                    <img src=\"./access-account.svg\" style={{ width: '50%' }} />\r\n                    <div className=\"image-text\">\r\n                        <p>India's top doctors to guide you to better health everyday...</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","const Loader = ({ isVisible }) => {\r\n\r\n    const displayClass = !isVisible ? \"d-none\" : \"new-loader-bg\";\r\n\r\n    return (\r\n        <div className={displayClass}>\r\n            <div className=\"new-loader-container\">\r\n                <span style={{ '--i': 0 }}></span>\r\n                <span style={{ '--i': 1 }}></span>\r\n                <span style={{ '--i': 2 }}></span>\r\n                <span style={{ '--i': 3 }}></span>\r\n                <span style={{ '--i': 4 }}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nconst Toast = (props) => {\r\n\r\n    const visStatus = (props.toastVisibility) ? \"toast\" : \"toast d-none\";\r\n    const message = props.toastMessage === \"Failed to fetch\" ? \"Failed to retrieve data. Check your internet connection and try again.\" : props.toastMessage;\r\n\r\n    function closeToast() {\r\n        props.setToastVisibility(false)\r\n    }\r\n\r\n    if (props.toastVisibility) {\r\n        setTimeout(() => {\r\n            props.setToastVisibility(false)\r\n        }, 8000)\r\n    }\r\n\r\n    let iconSrc = \"\"\r\n    const contentStyle = {}\r\n    const headerStyle = {}\r\n\r\n    switch (props.msgBoxType) {\r\n        case \"success\":\r\n            iconSrc = \"/success.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--main-green)\"\r\n\r\n            headerStyle.color = \"var(--main-green)\"\r\n            headerStyle.innerText = \"Success\"\r\n\r\n            break;\r\n\r\n        case \"information\":\r\n            iconSrc = \"/info.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--bluish)\";\r\n\r\n            headerStyle.color = \"var(--bluish)\"\r\n            headerStyle.innerText = \"Information\"\r\n\r\n            break;\r\n\r\n        case \"exclamation\":\r\n            iconSrc = \"/warning.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--golden-rod)\";\r\n\r\n            headerStyle.color = \"var(--golden-rod)\"\r\n            headerStyle.innerText = \"Error\"\r\n\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        // This returns the basic\r\n        //Frame setup for the custom message box\r\n        // and based on the above props\r\n        // the state values can be changed\r\n        // depending on the values\r\n        // of the\r\n        // 1. Message\r\n        // 2. Box style (information, exclamation or success)\r\n        // 3. The message box visibility (true or false)\r\n        <div className={visStatus}>\r\n            <div className=\"logo\">\r\n                <img id=\"toastIcon\" src={iconSrc} alt=\"\" />\r\n            </div>\r\n            <div className=\"content\" style={contentStyle}>\r\n                <div className=\"content-header\">\r\n                    <h4 id=\"headerText\" style={headerStyle}>MAH Health Care</h4>\r\n                    <span id=\"close_toast\" onClick={closeToast}>&times;</span>\r\n                </div>\r\n                <p id=\"toast_message\">{(message === \"Unauthenticated user\" || message === \"No user found\") ? \"Access Denied!\" : message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast;\r\n","import { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n\r\n    const history = useHistory();\r\n    const buttonStyle = {\r\n        display: 'block',\r\n        background: 'transparent',\r\n        color: 'white',\r\n        outline: 'none',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        fontFamily: 'Poppins',\r\n        marginRight: '40px',\r\n    }\r\n\r\n    const signOut = () => {\r\n        //Reset the other variables....\r\n        sessionStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"id_val\", null);\r\n\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"header-bar\">\r\n            <div className=\"header-bar-image\">\r\n                <Link to=\"/\" ><img src=\"/mah-logo.png\" width=\"60\" />MAH Health Care</Link>\r\n            </div>\r\n            <button style={buttonStyle} onClick={signOut}>Sign Out</button>\r\n        </div>\r\n    );\r\n}\r\n","\r\nexport const PatientTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-ui-user\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Medical\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-history\"></i>History\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 5 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(5)}\r\n            >\r\n                <i className=\"icofont-glass\"></i>Lifestyle\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export const countriesList = [\r\n    {name: 'Afghanistan', code: 'AF'},\r\n    {name: 'Åland Islands', code: 'AX'},\r\n    {name: 'Albania', code: 'AL'},\r\n    {name: 'Algeria', code: 'DZ'},\r\n    {name: 'American Samoa', code: 'AS'},\r\n    {name: 'AndorrA', code: 'AD'},\r\n    {name: 'Angola', code: 'AO'},\r\n    {name: 'Anguilla', code: 'AI'},\r\n    {name: 'Antarctica', code: 'AQ'},\r\n    {name: 'Antigua and Barbuda', code: 'AG'},\r\n    {name: 'Argentina', code: 'AR'},\r\n    {name: 'Armenia', code: 'AM'},\r\n    {name: 'Aruba', code: 'AW'},\r\n    {name: 'Australia', code: 'AU'},\r\n    {name: 'Austria', code: 'AT'},\r\n    {name: 'Azerbaijan', code: 'AZ'},\r\n    {name: 'Bahamas', code: 'BS'},\r\n    {name: 'Bahrain', code: 'BH'},\r\n    {name: 'Bangladesh', code: 'BD'},\r\n    {name: 'Barbados', code: 'BB'},\r\n    {name: 'Belarus', code: 'BY'},\r\n    {name: 'Belgium', code: 'BE'},\r\n    {name: 'Belize', code: 'BZ'},\r\n    {name: 'Benin', code: 'BJ'},\r\n    {name: 'Bermuda', code: 'BM'},\r\n    {name: 'Bhutan', code: 'BT'},\r\n    {name: 'Bolivia', code: 'BO'},\r\n    {name: 'Bosnia and Herzegovina', code: 'BA'},\r\n    {name: 'Botswana', code: 'BW'},\r\n    {name: 'Bouvet Island', code: 'BV'},\r\n    {name: 'Brazil', code: 'BR'},\r\n    {name: 'British Indian Ocean Territory', code: 'IO'},\r\n    {name: 'Brunei Darussalam', code: 'BN'},\r\n    {name: 'Bulgaria', code: 'BG'},\r\n    {name: 'Burkina Faso', code: 'BF'},\r\n    {name: 'Burundi', code: 'BI'},\r\n    {name: 'Cambodia', code: 'KH'},\r\n    {name: 'Cameroon', code: 'CM'},\r\n    {name: 'Canada', code: 'CA'},\r\n    {name: 'Cape Verde', code: 'CV'},\r\n    {name: 'Cayman Islands', code: 'KY'},\r\n    {name: 'Central African Republic', code: 'CF'},\r\n    {name: 'Chad', code: 'TD'},\r\n    {name: 'Chile', code: 'CL'},\r\n    {name: 'China', code: 'CN'},\r\n    {name: 'Christmas Island', code: 'CX'},\r\n    {name: 'Cocos (Keeling) Islands', code: 'CC'},\r\n    {name: 'Colombia', code: 'CO'},\r\n    {name: 'Comoros', code: 'KM'},\r\n    {name: 'Congo', code: 'CG'},\r\n    {name: 'Congo, The Democratic Republic of the', code: 'CD'},\r\n    {name: 'Cook Islands', code: 'CK'},\r\n    {name: 'Costa Rica', code: 'CR'},\r\n    {name: 'Cote D\\'Ivoire', code: 'CI'},\r\n    {name: 'Croatia', code: 'HR'},\r\n    {name: 'Cuba', code: 'CU'},\r\n    {name: 'Cyprus', code: 'CY'},\r\n    {name: 'Czech Republic', code: 'CZ'},\r\n    {name: 'Denmark', code: 'DK'},\r\n    {name: 'Djibouti', code: 'DJ'},\r\n    {name: 'Dominica', code: 'DM'},\r\n    {name: 'Dominican Republic', code: 'DO'},\r\n    {name: 'Ecuador', code: 'EC'},\r\n    {name: 'Egypt', code: 'EG'},\r\n    {name: 'El Salvador', code: 'SV'},\r\n    {name: 'Equatorial Guinea', code: 'GQ'},\r\n    {name: 'Eritrea', code: 'ER'},\r\n    {name: 'Estonia', code: 'EE'},\r\n    {name: 'Ethiopia', code: 'ET'},\r\n    {name: 'Falkland Islands (Malvinas)', code: 'FK'},\r\n    {name: 'Faroe Islands', code: 'FO'},\r\n    {name: 'Fiji', code: 'FJ'},\r\n    {name: 'Finland', code: 'FI'},\r\n    {name: 'France', code: 'FR'},\r\n    {name: 'French Guiana', code: 'GF'},\r\n    {name: 'French Polynesia', code: 'PF'},\r\n    {name: 'French Southern Territories', code: 'TF'},\r\n    {name: 'Gabon', code: 'GA'},\r\n    {name: 'Gambia', code: 'GM'},\r\n    {name: 'Georgia', code: 'GE'},\r\n    {name: 'Germany', code: 'DE'},\r\n    {name: 'Ghana', code: 'GH'},\r\n    {name: 'Gibraltar', code: 'GI'},\r\n    {name: 'Greece', code: 'GR'},\r\n    {name: 'Greenland', code: 'GL'},\r\n    {name: 'Grenada', code: 'GD'},\r\n    {name: 'Guadeloupe', code: 'GP'},\r\n    {name: 'Guam', code: 'GU'},\r\n    {name: 'Guatemala', code: 'GT'},\r\n    {name: 'Guernsey', code: 'GG'},\r\n    {name: 'Guinea', code: 'GN'},\r\n    {name: 'Guinea-Bissau', code: 'GW'},\r\n    {name: 'Guyana', code: 'GY'},\r\n    {name: 'Haiti', code: 'HT'},\r\n    {name: 'Heard Island and Mcdonald Islands', code: 'HM'},\r\n    {name: 'Holy See (Vatican City State)', code: 'VA'},\r\n    {name: 'Honduras', code: 'HN'},\r\n    {name: 'Hong Kong', code: 'HK'},\r\n    {name: 'Hungary', code: 'HU'},\r\n    {name: 'Iceland', code: 'IS'},\r\n    {name: 'India', code: 'IN'},\r\n    {name: 'Indonesia', code: 'ID'},\r\n    {name: 'Iran, Islamic Republic Of', code: 'IR'},\r\n    {name: 'Iraq', code: 'IQ'},\r\n    {name: 'Ireland', code: 'IE'},\r\n    {name: 'Isle of Man', code: 'IM'},\r\n    {name: 'Israel', code: 'IL'},\r\n    {name: 'Italy', code: 'IT'},\r\n    {name: 'Jamaica', code: 'JM'},\r\n    {name: 'Japan', code: 'JP'},\r\n    {name: 'Jersey', code: 'JE'},\r\n    {name: 'Jordan', code: 'JO'},\r\n    {name: 'Kazakhstan', code: 'KZ'},\r\n    {name: 'Kenya', code: 'KE'},\r\n    {name: 'Kiribati', code: 'KI'},\r\n    {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'},\r\n    {name: 'Korea, Republic of', code: 'KR'},\r\n    {name: 'Kuwait', code: 'KW'},\r\n    {name: 'Kyrgyzstan', code: 'KG'},\r\n    {name: 'Lao People\\'S Democratic Republic', code: 'LA'},\r\n    {name: 'Latvia', code: 'LV'},\r\n    {name: 'Lebanon', code: 'LB'},\r\n    {name: 'Lesotho', code: 'LS'},\r\n    {name: 'Liberia', code: 'LR'},\r\n    {name: 'Libyan Arab Jamahiriya', code: 'LY'},\r\n    {name: 'Liechtenstein', code: 'LI'},\r\n    {name: 'Lithuania', code: 'LT'},\r\n    {name: 'Luxembourg', code: 'LU'},\r\n    {name: 'Macao', code: 'MO'},\r\n    {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'},\r\n    {name: 'Madagascar', code: 'MG'},\r\n    {name: 'Malawi', code: 'MW'},\r\n    {name: 'Malaysia', code: 'MY'},\r\n    {name: 'Maldives', code: 'MV'},\r\n    {name: 'Mali', code: 'ML'},\r\n    {name: 'Malta', code: 'MT'},\r\n    {name: 'Marshall Islands', code: 'MH'},\r\n    {name: 'Martinique', code: 'MQ'},\r\n    {name: 'Mauritania', code: 'MR'},\r\n    {name: 'Mauritius', code: 'MU'},\r\n    {name: 'Mayotte', code: 'YT'},\r\n    {name: 'Mexico', code: 'MX'},\r\n    {name: 'Micronesia, Federated States of', code: 'FM'},\r\n    {name: 'Moldova, Republic of', code: 'MD'},\r\n    {name: 'Monaco', code: 'MC'},\r\n    {name: 'Mongolia', code: 'MN'},\r\n    {name: 'Montserrat', code: 'MS'},\r\n    {name: 'Morocco', code: 'MA'},\r\n    {name: 'Mozambique', code: 'MZ'},\r\n    {name: 'Myanmar', code: 'MM'},\r\n    {name: 'Namibia', code: 'NA'},\r\n    {name: 'Nauru', code: 'NR'},\r\n    {name: 'Nepal', code: 'NP'},\r\n    {name: 'Netherlands', code: 'NL'},\r\n    {name: 'Netherlands Antilles', code: 'AN'},\r\n    {name: 'New Caledonia', code: 'NC'},\r\n    {name: 'New Zealand', code: 'NZ'},\r\n    {name: 'Nicaragua', code: 'NI'},\r\n    {name: 'Niger', code: 'NE'},\r\n    {name: 'Nigeria', code: 'NG'},\r\n    {name: 'Niue', code: 'NU'},\r\n    {name: 'Norfolk Island', code: 'NF'},\r\n    {name: 'Northern Mariana Islands', code: 'MP'},\r\n    {name: 'Norway', code: 'NO'},\r\n    {name: 'Oman', code: 'OM'},\r\n    {name: 'Pakistan', code: 'PK'},\r\n    {name: 'Palau', code: 'PW'},\r\n    {name: 'Palestinian Territory, Occupied', code: 'PS'},\r\n    {name: 'Panama', code: 'PA'},\r\n    {name: 'Papua New Guinea', code: 'PG'},\r\n    {name: 'Paraguay', code: 'PY'},\r\n    {name: 'Peru', code: 'PE'},\r\n    {name: 'Philippines', code: 'PH'},\r\n    {name: 'Pitcairn', code: 'PN'},\r\n    {name: 'Poland', code: 'PL'},\r\n    {name: 'Portugal', code: 'PT'},\r\n    {name: 'Puerto Rico', code: 'PR'},\r\n    {name: 'Qatar', code: 'QA'},\r\n    {name: 'Reunion', code: 'RE'},\r\n    {name: 'Romania', code: 'RO'},\r\n    {name: 'Russian Federation', code: 'RU'},\r\n    {name: 'RWANDA', code: 'RW'},\r\n    {name: 'Saint Helena', code: 'SH'},\r\n    {name: 'Saint Kitts and Nevis', code: 'KN'},\r\n    {name: 'Saint Lucia', code: 'LC'},\r\n    {name: 'Saint Pierre and Miquelon', code: 'PM'},\r\n    {name: 'Saint Vincent and the Grenadines', code: 'VC'},\r\n    {name: 'Samoa', code: 'WS'},\r\n    {name: 'San Marino', code: 'SM'},\r\n    {name: 'Sao Tome and Principe', code: 'ST'},\r\n    {name: 'Saudi Arabia', code: 'SA'},\r\n    {name: 'Senegal', code: 'SN'},\r\n    {name: 'Serbia and Montenegro', code: 'CS'},\r\n    {name: 'Seychelles', code: 'SC'},\r\n    {name: 'Sierra Leone', code: 'SL'},\r\n    {name: 'Singapore', code: 'SG'},\r\n    {name: 'Slovakia', code: 'SK'},\r\n    {name: 'Slovenia', code: 'SI'},\r\n    {name: 'Solomon Islands', code: 'SB'},\r\n    {name: 'Somalia', code: 'SO'},\r\n    {name: 'South Africa', code: 'ZA'},\r\n    {name: 'South Georgia and the South Sandwich Islands', code: 'GS'},\r\n    {name: 'Spain', code: 'ES'},\r\n    {name: 'Sri Lanka', code: 'LK'},\r\n    {name: 'Sudan', code: 'SD'},\r\n    {name: 'Suriname', code: 'SR'},\r\n    {name: 'Svalbard and Jan Mayen', code: 'SJ'},\r\n    {name: 'Swaziland', code: 'SZ'},\r\n    {name: 'Sweden', code: 'SE'},\r\n    {name: 'Switzerland', code: 'CH'},\r\n    {name: 'Syrian Arab Republic', code: 'SY'},\r\n    {name: 'Taiwan, Province of China', code: 'TW'},\r\n    {name: 'Tajikistan', code: 'TJ'},\r\n    {name: 'Tanzania, United Republic of', code: 'TZ'},\r\n    {name: 'Thailand', code: 'TH'},\r\n    {name: 'Timor-Leste', code: 'TL'},\r\n    {name: 'Togo', code: 'TG'},\r\n    {name: 'Tokelau', code: 'TK'},\r\n    {name: 'Tonga', code: 'TO'},\r\n    {name: 'Trinidad and Tobago', code: 'TT'},\r\n    {name: 'Tunisia', code: 'TN'},\r\n    {name: 'Turkey', code: 'TR'},\r\n    {name: 'Turkmenistan', code: 'TM'},\r\n    {name: 'Turks and Caicos Islands', code: 'TC'},\r\n    {name: 'Tuvalu', code: 'TV'},\r\n    {name: 'Uganda', code: 'UG'},\r\n    {name: 'Ukraine', code: 'UA'},\r\n    {name: 'United Arab Emirates', code: 'AE'},\r\n    {name: 'United Kingdom', code: 'GB'},\r\n    {name: 'United States', code: 'US'},\r\n    {name: 'United States Minor Outlying Islands', code: 'UM'},\r\n    {name: 'Uruguay', code: 'UY'},\r\n    {name: 'Uzbekistan', code: 'UZ'},\r\n    {name: 'Vanuatu', code: 'VU'},\r\n    {name: 'Venezuela', code: 'VE'},\r\n    {name: 'Viet Nam', code: 'VN'},\r\n    {name: 'Virgin Islands, British', code: 'VG'},\r\n    {name: 'Virgin Islands, U.S.', code: 'VI'},\r\n    {name: 'Wallis and Futuna', code: 'WF'},\r\n    {name: 'Western Sahara', code: 'EH'},\r\n    {name: 'Yemen', code: 'YE'},\r\n    {name: 'Zambia', code: 'ZM'},\r\n    {name: 'Zimbabwe', code: 'ZW'}\r\n  ]","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { countriesList } from '../../assets/common/countries';\r\n\r\nexport const Contact = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const address = props.data?.address;\r\n    const houseNumber = address[0]?.houseNumber ? address[0]?.houseNumber + \", \" : \"\";\r\n    const street = address[0]?.street ? address[0]?.street + \", \" : \"\";\r\n    const city = address[0]?.city ? address[0]?.city + \", \" : \"\";\r\n    const state = address[0]?.state ? address[0]?.state + \", \" : \"\";\r\n    const district = address[0]?.district ? address[0]?.district + \", \" : \"\";\r\n    const postalCode = address[0]?.postalCode ? address[0]?.postalCode + \" - \" : \"\";\r\n\r\n\r\n    const showPhone = props.data?.contactPerson.length > 0 ? \"icofont-phone\" : \"\";\r\n    const contactDetails = props.data?.contactPerson.length > 0\r\n        && `${props.data?.contactPerson && props.data?.contactPerson[0]?.name} (${props.data?.contactPerson && props.data?.contactPerson[0]?.relationship})`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{address && address === []\r\n                                    ? \"\"\r\n                                    : `${houseNumber}${street}${city}${district}${state}${postalCode}`}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Country</td>\r\n                                <td>{address ? address[0]?.country : \"-\"}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailId}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Contact Person</td>\r\n                                <td>\r\n                                    { contactDetails }<br />\r\n                                    <i className={showPhone}></i>{props.data?.contactPerson && props.data?.contactPerson[0]?.contact?.value}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const addressData = props.data.address[0] || {};\r\n    const contactPerson = props.data.contactPerson[0] || {};\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [addressType, setAddressType] = useState(addressData?.type);\r\n    const [txtHouseNo, setTxtHouseNo] = useState(addressData?.houseNumber);\r\n    const [txtStreet, setTxtStreet] = useState(addressData?.street);\r\n    const [txtCity, setTxtCity] = useState(addressData?.city);\r\n    const [txtDistrict, setTxtDistrict] = useState(addressData?.district);\r\n    const [txtState, setTxtState] = useState(addressData?.state);\r\n    const [txtPostalCode, setTxtPostalCode] = useState(addressData.postalCode);\r\n    const [txtCountry, setTxtCountry] = useState(addressData?.country);\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailId);\r\n    const [txtContactPerson, setTxtContactPerson] = useState(contactPerson?.name);\r\n    const [txtRelationship, setTxtRelationship] = useState(contactPerson?.relationship)\r\n    const [txtContactPhone, setTxtContactPhone] = useState(contactPerson?.contact?.value)\r\n\r\n    const updateContactDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            emailId: txtEmail,\r\n            address: [{\r\n                \"type\": addressType,\r\n                \"houseNumber\": txtHouseNo,\r\n                \"street\": txtStreet,\r\n                \"city\": txtCity,\r\n                \"district\": txtDistrict,\r\n                \"state\": txtState,\r\n                \"postalCode\": txtPostalCode,\r\n            }],\r\n            contactPerson: [{\r\n                \"relationship\": txtRelationship,\r\n                \"name\": txtContactPerson,\r\n                \"contact\": {\r\n                    \"system\": \"Phone\",\r\n                    \"value\": txtContactPhone,\r\n                }\r\n            }],\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n    const countryList =  countriesList.map((item, index) => {\r\n        return (<option key={index} value={item.name}>{item.name} ({item.code})</option>)\r\n    })\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row-3\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Type</label>\r\n                            <select\r\n                                id=\"addressType\"\r\n                                value={addressType}\r\n                                onChange={e => setAddressType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"Home\">Home</option>\r\n                                <option value=\"Work\">Work</option>\r\n                                <option value=\"Office\">Office</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>House Number</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtHouseNo\"\r\n                                value={txtHouseNo}\r\n                                onChange={e => setTxtHouseNo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className=\"input-group\">\r\n                            <label>Street</label>\r\n                            <textarea\r\n                                rows={2}\r\n                                className=\"form-control\"\r\n                                id=\"txtStreet\"\r\n                                value={txtStreet}\r\n                                onChange={e => setTxtStreet(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>City</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtCity\"\r\n                                value={txtCity}\r\n                                onChange={e => setTxtCity(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>District</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtDistrict\"\r\n                                value={txtDistrict}\r\n                                onChange={e => setTxtDistrict(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>State</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtState\"\r\n                                value={txtState}\r\n                                onChange={e => setTxtState(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Postal Code</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPostalCode\"\r\n                                value={txtPostalCode}\r\n                                onChange={e => setTxtPostalCode(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className=\"input-group\">\r\n                            <label>Country</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtCountry\"\r\n                                value={txtCountry}\r\n                                onChange={e => setTxtCountry(e.target.value)}\r\n                            >\r\n                                {countryList}\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Contact Person (Name)</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPerson\"\r\n                                value={txtContactPerson}\r\n                                onChange={e => setTxtContactPerson(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Relationship</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtRelationship\"\r\n                                value={txtRelationship}\r\n                                onChange={e => setTxtRelationship(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPhone\"\r\n                                value={txtContactPhone}\r\n                                onChange={e => setTxtContactPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateContactDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Marital Status</td>\r\n                            <td>{props.data?.maritalStatus}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Is Deceased?</td>\r\n                            <td>{props.data?.deceased?.deceasedBoolean || \"No\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Deceased Date</td>\r\n                            <td>{props.data?.deceased?.deceasedDateTime || \"-\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [showDeceased, setShowDeceased] = useState('none');\r\n    const [cbxDeceased, setCbxDeceased] = useState(props.data.deceased?.deceasedBoolean)\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [cbxMaritalStatus, setCbxMaritalStatus] = useState(props.data.maritalStatus)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n    const [txtDeceasedDate, setTxtDeceasedDate] = useState(props.data?.deceased?.deceasedDateTime);\r\n\r\n    useEffect(() => {\r\n        if (cbxDeceased === \"Yes\") {\r\n            setShowDeceased('block')\r\n        } else {\r\n            setShowDeceased('none');\r\n        }\r\n    }, [cbxDeceased])\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n            \"deceased\": {\r\n                deceasedBoolean: cbxDeceased === \"Yes\" ? true : false,\r\n                deceasedDateTime: txtDeceasedDate,\r\n            },\r\n            maritalStatus: cbxMaritalStatus,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)'}}><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Marital Status</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxMaritalStatus\"\r\n                                value={cbxMaritalStatus}\r\n                                onChange={e => setCbxMaritalStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Maried\">Maried</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Do not wish to disclose\">Do not wish to disclose</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Is Deceased?</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxIsDeceased\"\r\n                                value={cbxDeceased}\r\n                                onChange={e => setCbxDeceased(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group' style={{ display: showDeceased }}>\r\n                            <label>Deceased Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtDeceasedDate\"\r\n                                value={txtDeceasedDate}\r\n                                onChange={e => setTxtDeceasedDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url'\r\n\r\nexport const Medical = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical Details</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Allergies</td>\r\n                            <td>{props.data?.allergies !== [] && props.data?.allergies?.value[0]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Managing Organization (Hospital)</td>\r\n                            <td>{props.data.managingOrganization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Blood Group</td>\r\n                            <td>{props.data.general?.bloodGroup}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Height</td>\r\n                            <td>{props.data.general?.height}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Weight</td>\r\n                            <td>{props.data.general?.weight}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BMI</td>\r\n                            <td>{props.data.general?.bmi}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Chest Expansion</td>\r\n                            <td>{props.data.general?.chestExpansion}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Vision</td>\r\n                            <td>{props.data.general?.vision}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BP</td>\r\n                            <td>{props.data.general?.bp}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pulse</td>\r\n                            <td>{props.data.general?.pulse}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Oxygen Saturation</td>\r\n                            <td>{props.data.general?.oxygenSaturation}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <MedicalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalDialog = props => {\r\n\r\n    const [boxContent, setBoxContent] = useState('')\r\n    const [txtAllergies, setTxtAllergies] = useState(props.data?.allergies?.value[0] || \"\")\r\n    const [txtManagingOrg, setTxtManagingOrg] = useState(props.data.managingOrganization)\r\n\r\n    const [bloodGroup, setBloodGroup] = useState(props.data?.general?.bloodGroup);\r\n    const [height, setHeight] = useState(props.data?.general?.height);\r\n    const [weight, setWeight] = useState(props.data?.general?.weight);\r\n    const [vision, setVision] = useState(props.data?.general?.vision);\r\n    const [chestExpansion, setChestExpansion] = useState(props.data?.general?.chestExpansion);\r\n    const [bloodPressure, setBloodPressure] = useState(props.data?.general?.bp);\r\n    const [pulse, setPulse] = useState(props.data?.general?.pulse);\r\n    const [oxygenSaturation, setOxygenSaturation] = useState(props.data?.general?.oxygenSaturation);\r\n    const [bmi, setBmi] = useState(props.data?.general?.bmi);\r\n\r\n    const createItems = () => {\r\n        /** as the textbox blurs,\r\n         * create a list of\r\n         * emails with special colorizing\r\n         * and close items...\r\n\r\n        After clearing the container, fix the emails...*/\r\n        const allergies = Array.isArray(txtAllergies) ? txtAllergies.split(\",\") : [];\r\n        const content = allergies.map((item, index) => {\r\n            return (\r\n                <span key={index}>{item.trim()}</span>\r\n            )\r\n        })\r\n\r\n        setBoxContent(content || \"Selected Allergies\")\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        createItems();\r\n    }, [])\r\n\r\n    const updateMedicalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            allergies: { value: [txtAllergies] },\r\n            general: {\r\n                \"bloodGroup\": bloodGroup,\r\n                \"height\": height,\r\n                \"weight\": weight,\r\n                \"bmi\": bmi,\r\n                \"chestExpansion\": chestExpansion,\r\n                \"vision\": vision,\r\n                \"bp\": bloodPressure,\r\n                \"pulse\": pulse,\r\n                \"oxygenSaturation\": oxygenSaturation\r\n            },\r\n            managingOrganization: txtManagingOrg\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)'}}><i className=\"icofont-ui-edit\"></i> Edit Medical Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Allergies</label>\r\n                            <input\r\n                                id=\"txtAllergies\"\r\n                                className=\"form-control mb-1\"\r\n                                value={txtAllergies}\r\n                                onChange={e => {\r\n                                    setTxtAllergies(e.target.value)\r\n                                    if (e.keyCode === 13) createItems();\r\n                                }}\r\n                                onBlur={createItems}\r\n                                placeholder='Enter comma-separated values'\r\n                            />\r\n                            <div className=\"emails-box\">{boxContent}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Managing Organization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtManagingOrg\"\r\n                                value={txtManagingOrg}\r\n                                onChange={e => setTxtManagingOrg(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"ABC Healthcare\">ABC Healthcare</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>Blood Group</label>\r\n                            <select\r\n                                id=\"bloodGroup\"\r\n                                className=\"form-control\"\r\n                                value={bloodGroup}\r\n                                onChange={e => setBloodGroup(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"A+\">A+</option>\r\n                                <option value=\"A-\">A-</option>\r\n                                <option value=\"B+\">B+</option>\r\n                                <option value=\"B-\">B-</option>\r\n                                <option value=\"AB+\">AB+</option>\r\n                                <option value=\"AB-\">AB-</option>\r\n                                <option value=\"O+\">O+</option>\r\n                                <option value=\"O-\">O-</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Height</label>\r\n                            <input\r\n                                id=\"height\"\r\n                                className=\"form-control\"\r\n                                value={height}\r\n                                onChange={e => setHeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Weight</label>\r\n                            <input\r\n                                id=\"weight\"\r\n                                className=\"form-control\"\r\n                                value={weight}\r\n                                onChange={e => setWeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BMI</label>\r\n                            <input\r\n                                id=\"bmi\"\r\n                                className=\"form-control\"\r\n                                value={bmi}\r\n                                onChange={e => setBmi(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Chest Expansion</label>\r\n                            <input\r\n                                id=\"chestExpansion\"\r\n                                className=\"form-control\"\r\n                                value={chestExpansion}\r\n                                onChange={e => setChestExpansion(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Vision</label>\r\n                            <input\r\n                                id=\"vision\"\r\n                                className=\"form-control\"\r\n                                value={vision}\r\n                                onChange={e => setVision(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BP</label>\r\n                            <input\r\n                                id=\"bloodPressure\"\r\n                                className=\"form-control\"\r\n                                value={bloodPressure}\r\n                                onChange={e => setBloodPressure(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Pulse</label>\r\n                            <input\r\n                                id=\"pulse\"\r\n                                className=\"form-control\"\r\n                                value={pulse}\r\n                                onChange={e => setPulse(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Oxygen Saturation</label>\r\n                            <input\r\n                                id=\"oxygenSaturation\"\r\n                                className=\"form-control\"\r\n                                value={oxygenSaturation}\r\n                                onChange={e => setOxygenSaturation(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const ImageDialog = props => {\r\n\r\n    const imageSource = props.src;\r\n\r\n    //Find the image components...\r\n    const imageExtension = imageSource.toString().indexOf(\"pdf\") > -1 ? \"pdf\" : \"other\";\r\n\r\n    const dialogClass = props.setImageDisplay\r\n        ? \"dialog-background image-dialog fade\"\r\n        : \"dialog-background image-dialog\";\r\n\r\n\r\n    const extension = imageExtension;\r\n    let imageContainerDisplay;\r\n    let embedContainer;\r\n\r\n    if (extension === \"pdf\") {\r\n        embedContainer = \"embed-container\";\r\n        imageContainerDisplay = \"image-container d-none\";\r\n\r\n    } else {\r\n        embedContainer = \"embed-container d-none\";\r\n        imageContainerDisplay = \"image-container\";\r\n    }\r\n\r\n    const closeMe = () => {\r\n        props.hideImageDialog(false);\r\n    }\r\n\r\n    return (\r\n        <div className={dialogClass}>\r\n            <div className={imageContainerDisplay}>\r\n                <div className=\"image-viewer\">\r\n                    <span className=\"close\">&times;</span>\r\n                    <img\r\n                        id=\"full-image\"\r\n                        alt=\"\"\r\n                        src={imageSource}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={embedContainer}>\r\n                <embed\r\n                    src={imageSource}\r\n                    width=\"100%\"\r\n                    height=\"95%\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-row-3-1\">\r\n                <div></div>\r\n                <button\r\n                    className=\"btn-main\"\r\n                    id=\"btnClose\"\r\n                    onClick={closeMe}\r\n                    style={{ width: 300 }}\r\n                >Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// Convert file to base64 string\r\nexport const fileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../../assets/common/base-url';\r\n\r\nexport const PastPrescriptionsDialog = props => {\r\n\r\n    const [txtPastPrescriptions, setTxtPastPrescriptions] = useState(props.data.pastPrescriptions && props.data?.pastPrescriptions[0])\r\n    const [cbxMedicines, setCbxMedicines] = useState('')\r\n    const [txtAddMedication, setTxtAddMedication] = useState('')\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState('')\r\n\r\n    const updatePastPrescriptions = () => {\r\n        const data = {\r\n            pastPrescriptions: [{\r\n                value: cbxMedicines,\r\n                medication: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                uploads: txtPastPrescriptions || []\r\n            }],\r\n\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = () => {\r\n\r\n        const fileUpload = document.querySelector(\"#txtPastPrescriptions\")\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    setTxtPastPrescriptions(response.toString());\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Add/Edit Past Prescriptions</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div\r\n                        className=\"form-row\"\r\n                        style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label\r\n                            style={{ transform: 'translateY(-10px)', color: '#999' }}>\r\n                            <i className=\"icofont-drug\"></i> Past Prescriptions / Medications\r\n                        </label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>Have you taken any medicines in past?</label>\r\n                                <select\r\n                                    id=\"cbxMedicines\"\r\n                                    value={cbxMedicines}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxMedicines(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxMedicines === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                        <div className=\"input-group\">\r\n                                <label>Add Medication</label>\r\n                                <input\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Upload File (.pdf) (optional)</label>\r\n                                <input\r\n                                    id=\"txtPastPrescriptions\"\r\n                                    onChange={() => saveImageToBase64()}\r\n                                    className=\"form-control\"\r\n                                    accept=\".pdf\"\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxMedicines === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePastPrescriptions}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ImageDialog } from \"../../components/image-dialog\"\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { PastPrescriptionsDialog } from './others/past-prescriptions-dialog';\r\n\r\nexport const MedicalHistory = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [showPrescriptionsDialog, setShowPrescriptionsDialog] = useState(false);\r\n    const [showImageDialog, setShowImageDialog] = useState(false);\r\n    const [imageSource, setImageSource] = useState('');\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical History</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Current Medications</td>\r\n                            <td>{(props.data.currentMedications.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.currentMedications)\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Diagnosis Reports</td>\r\n                            <td>{(props.data.diagnosisReport.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.diagnosisReport)\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Past prescriptions</td>\r\n                            <td>{(props.data.pastPrescriptions.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.pastPrescriptions)\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td onClick={() => setShowPrescriptionsDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <MedicalHistoryDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setImageSource={setImageSource}\r\n                setResetData={props.setResetData}\r\n                setShowImageDialog={setShowImageDialog}\r\n            />\r\n\r\n            <PastPrescriptionsDialog\r\n                showDialog={showPrescriptionsDialog}\r\n                hideDialog={() => setShowPrescriptionsDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setImageSource={setImageSource}\r\n                setResetData={props.setResetData}\r\n                setShowImageDialog={setShowImageDialog}\r\n            />\r\n\r\n            {showImageDialog &&\r\n                <ImageDialog\r\n                    mandateExtension=\"pdf\"\r\n                    src={imageSource}\r\n                    setImageDisplay={showImageDialog}\r\n                    isURL={true}\r\n                    hideImageDialog={() => setShowImageDialog(false)}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalHistoryDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState(props.data.currentMedications?.uploads && [...props.data.currentMedications?.uploads])\r\n    const [txtDiagnosisReport, setTxtDiagnosisReport] = useState(props.data.diagnosisReport && props.data?.diagnosisReport[0])\r\n\r\n    const [txtAddMedication, setTxtAddMedication] = useState(props.data?.currentMedications?.medication || '');\r\n    const [cbxIsOnMedications, setCbxIsOnMedications] = useState(props.data?.currentMedications?.value ? \"Yes\" : \"No\");\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState(props.data?.currentMedications?.description || '');\r\n\r\n    const updateMedicalHistoryDetails = () => {\r\n        const data = {\r\n            currentMedications: [{\r\n                value: cbxIsOnMedications === \"Yes\" ? true : false,\r\n                medication: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                uploads: txtCurrentMedications || []\r\n            }],\r\n            diagnosisReport: [txtDiagnosisReport]\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = (val) => {\r\n\r\n        let fileUpload;\r\n\r\n        if (val === \"curr\") {\r\n            fileUpload = document.querySelector(\"#txtCurrentMedications\")\r\n        } else if (val === \"pp\") {\r\n            fileUpload = document.querySelector(\"#txtPastPrescriptions\")\r\n        } else {\r\n            fileUpload = document.querySelector(\"#txtDiagnosisReport\")\r\n        }\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    switch (val) {\r\n                        case \"curr\":\r\n                            setTxtCurrentMedications(response.toString());\r\n                            break;\r\n                        case \"pp\":\r\n                            setTxtPastPrescriptions(response.toString());\r\n                            break;\r\n                        default:\r\n                            setTxtDiagnosisReport(response.toString());\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div className=\"form-row\" style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label style={{ transform: 'translateY(-10px)', color: '#999' }}><i className=\"icofont-drug\"></i> Current Medications</label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>Are you taking any medicines at the moment?</label>\r\n                                <select\r\n                                    id=\"cbxIsOnMedications\"\r\n                                    value={cbxIsOnMedications}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxIsOnMedications(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                        <div className=\"input-group\">\r\n                                <label>Add Medication</label>\r\n                                <input\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Select File (optional)</label>\r\n                                <input\r\n                                    id=\"txtCurrentMedications\"\r\n                                    onChange={() => saveImageToBase64(\"curr\")}\r\n                                    className=\"form-control\"\r\n                                    accept=\".pdf\"\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-row mt-2\">\r\n                        <div className='input-group'>\r\n                            <label>Diagnosis Report (.pdf)</label>\r\n                            <input\r\n                                id=\"txtDiagnosisReport\"\r\n                                onChange={() => saveImageToBase64(\"diag\")}\r\n                                className=\"form-control\"\r\n                                accept=\".pdf\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalHistoryDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Lifestyle = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Lifestyle</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Smoking Habit</td>\r\n                            <td>{props.data?.lifeStyle?.smokingHabbit}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Alcohol Consumption</td>\r\n                            <td>{props.data?.lifeStyle?.alcoholConsumption}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Activity Level</td>\r\n                            <td>{props.data?.lifeStyle?.activityLevel}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Food Preference</td>\r\n                            <td>{props.data?.lifeStyle?.foodPreference}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <LifestyleDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LifestyleDialog = props => {\r\n\r\n    const [txtSmokingHabits, setTxtSmokingHabits] = useState(props.data.lifeStyle?.smokingHabbit)\r\n    const [txtAlcohol, setTxtAlcohol] = useState(props.data.lifeStyle?.alcoholConsumption)\r\n    const [txtActivityLevel, setTxtActivityLevel] = useState(props.data.lifeStyle?.activityLevel)\r\n    const [txtFoodPreference, setTxtFoodPreference] = useState(props.data.lifeStyle?.foodPreference)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            lifeStyle: {\r\n                \"smokingHabbit\": txtSmokingHabits,\r\n                \"alcoholConsumption\": txtAlcohol,\r\n                \"activityLevel\": txtActivityLevel,\r\n                \"foodPreference\": txtFoodPreference\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Smoking Habits</label>\r\n                            <select\r\n                                id=\"txtSmokingHabits\"\r\n                                value={txtSmokingHabits}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtSmokingHabits(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"I don't smoke\">I don't smoke</option>\r\n                                <option value=\"I used to, but I quit\">I used to, but I quit</option>\r\n                                <option value=\"1-2/day\">1-2/day</option>\r\n                                <option value=\"3-5/day\">3-5/day</option>\r\n                                <option value=\"5-10/day\">5-10/day</option>\r\n                                <option value=\"> 10/day\">{'> 10/day'}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Alcohol Consumption</label>\r\n                            <select\r\n                                id=\"txtAlcohol\"\r\n                                value={txtAlcohol}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtAlcohol(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Non-Drinker\">Non-Drinker</option>\r\n                                <option value=\"Rare\">Rare</option>\r\n                                <option value=\"Social\">Social</option>\r\n                                <option value=\"Regular\">Regular</option>\r\n                                <option value=\"Heavy\">Heavy</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Activity Level</label>\r\n                            <select\r\n                                id=\"txtActivityLevel\"\r\n                                value={txtActivityLevel}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtActivityLevel(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Sedentary (Low)\">Sedentary (Low)</option>\r\n                                <option value=\"Moderately Active (Normal)\">Moderately Active (Normal)</option>\r\n                                <option value=\"Active (High)\">Active (High)</option>\r\n                                <option value=\"Athletic (Very High)\">Athletic (Very High)</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Food Preference</label>\r\n                            <select\r\n                                id=\"txtFoodPreference\"\r\n                                value={txtFoodPreference}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtFoodPreference(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Vegetarian\">Vegetarian</option>\r\n                                <option value=\"Non-Vegetarian\">Non-Vegetarian</option>\r\n                                <option value=\"Eggetarian\">Eggetarian</option>\r\n                                <option value=\"Vegan\">Vegan</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const toTimestamp = (year,month,day,hour,minute,second) => {\r\n    var datum = new Date(Date.UTC(year,month-1,day,hour,minute,second));\r\n    return datum.getTime()/1000;\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport { toTimestamp } from '../assets/common/operations';\r\n\r\n\r\nexport const DoctorsDialog = props => {\r\n\r\n    const [cbxSpeciality, setCbxSpeciality] = useState('')\r\n    const [doctorsData, setDoctorsData] = useState('')\r\n    const [selectedDoctor, setSelectedDoctor] = useState('')\r\n    const [txtDate, setTxtDate] = useState('');\r\n    const [spanValue, setSpanValue] = useState(1);\r\n    const [timeOfCommenement, setTimeOfCommencement] = useState([])\r\n\r\n    //The componentDidMount equivalent...\r\n    //Fetch the doctors list...\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        //To set the actual timing for the time of commencement\r\n        const splitDate = txtDate.split(\"-\")\r\n        const dateArray = [splitDate[0], splitDate[1], splitDate[2]]\r\n\r\n        switch (spanValue) {\r\n            case 1:\r\n                setTimeOfCommencement([...dateArray, '11', '00', '00'])\r\n                break;\r\n            case 2:\r\n                setTimeOfCommencement([...dateArray, '14', '00', '00'])\r\n                break;\r\n            default:\r\n                setTimeOfCommencement([...dateArray, '20', '00', '00'])\r\n                break;\r\n        }\r\n    }, [spanValue])\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    const selectDoctor = () => {\r\n        //Call api to schedule appointment...\r\n        //Get the details of the doctor in question...\r\n        const thisDoctor = doctorsData.find(item => item.uidNo === selectedDoctor)\r\n\r\n        const payLoad = {\r\n            doctor_id: thisDoctor.uidNo,\r\n            doctor_name: thisDoctor.name,\r\n            doctor_email_id: thisDoctor.email,\r\n            patient_id: props.data.uidNo,\r\n            patient_name: props.data.name,\r\n            patient_email_id: props.data.emailId,\r\n            starttime: toTimestamp(...timeOfCommenement),\r\n            duration: 0.75 * 60 * 60,\r\n\r\n        }\r\n\r\n        alert(JSON.stringify(payLoad));\r\n\r\n        return;\r\n        const params = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(payLoad),\r\n        }\r\n\r\n        fetch(\"https://crypto.webshrine.in/api/scheduleAppointment\", params)\r\n            .then(response = (response.json()))\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    //Did a proper scheduling...\r\n                    //Get the parameters...\r\n                    props.setSpecialObject({\r\n                        speciality: cbxSpeciality,\r\n                        startTime: toTimestamp(...timeOfCommenement),\r\n                        duration: 0.75 * 60,\r\n                        meetingID: response.result?.meeting_id,\r\n                        doctor_id: thisDoctor.uidNo\r\n                    })\r\n\r\n                    //Set other parameters...\r\n                    props.setDoctorSelected(selectedDoctor)\r\n                    props.hideDoctorsDialog();\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const doctorsArray = doctorsData && doctorsData.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                key={index}\r\n                selectedDoctor={selectedDoctor}\r\n                setSelectedDoctor={setSelectedDoctor}\r\n                id={item.uidNo}\r\n                src={item.photo}\r\n                name={item.name}\r\n                specialization={item.specialization.certification}\r\n                status={item.verification.status}\r\n                rating={4.3}\r\n                spanValue={spanValue}\r\n                setSpanValue={setSpanValue}\r\n\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"dialog-background fade\">\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}>\r\n                        <i className='icofont-doctor-alt'></i> Select a Doctor\r\n                    </h2>\r\n                </div>\r\n                <div className=\"dialog-body mb-2\">\r\n                    <div className='form-row-3'>\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxSpeciality\"\r\n                                value={cbxSpeciality}\r\n                                onChange={e => setCbxSpeciality(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Allergist\">Allergist</option>\r\n                                <option value=\"Cardiologist\">Cardiologist</option>\r\n                                <option value=\"Dermatologist\">Dermatologist</option>\r\n                                <option value=\"Endocrinologist\">Endocrinologist</option>\r\n                                <option value=\"Gastroenterologist\">Gastroenterologist</option>\r\n                                <option value=\"Geriatrician\">Geriatrician</option>\r\n                                <option value=\"Nephrologist\">Nephrologist</option>\r\n                                <option value=\"Neurologist\">Neurologist</option>\r\n                                <option value=\"OB/GYN\">OB/GYN</option>\r\n                                <option value=\"Ophthalmologist\">Ophthalmologist</option>\r\n                                <option value=\"Pediatrician\">Pediatrician</option>\r\n                                <option value=\"Psychiatrist\">Psychiatrist</option>\r\n                                <option value=\"Urologist\">Urologist</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Choose Date</label>\r\n                            <input\r\n                                className='form-control'\r\n                                type='date'\r\n                                id='txtDate'\r\n                                value={txtDate}\r\n                                onChange={e => setTxtDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Wallet Balance</label>\r\n                            <input\r\n                                className='form-control'\r\n                                value=\"123 HTRAX\"\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='doctors-list-container'>\r\n                            {doctorsArray}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        onClick={selectDoctor}\r\n                        className=\"btn-main mr-1\"\r\n                    ><i className=\"icofont-doctor\"></i> Choose Doctor\r\n                    </button>\r\n                    <button\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDoctorsDialog()}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n            Doctors Dialog\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DoctorsListItem = props => {\r\n\r\n    const [spanValue, setSpanValue] = useState(1);\r\n    const [selDoctor, setSelDoctor] = useState('');\r\n\r\n    const randomValue = useRef(Math.floor(Math.random() * 9))\r\n\r\n    return (\r\n        <div className={selDoctor === props.id ? 'doctor-area selected' : 'doctor-area'}>\r\n            <div className=\"chosen-doctor\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                {/* <p><span>♥</span>{props.rating}</p> */}\r\n                <div className=\"details\">\r\n                    <h3>{props.name}</h3>\r\n                    <p>{props.specialization}</p>\r\n                    <div>\r\n                        <span className={spanValue === 1 ? 'blue' : ''} onClick={() => setSpanValue(1)}>\r\n                            11:00 - 11:45\r\n                        </span>\r\n                        <span className={spanValue === 2 ? 'blue' : ''} onClick={() => setSpanValue(2)}>\r\n                            14:00 - 14:45\r\n                        </span>\r\n                        <span className={spanValue === 3 ? 'blue' : ''} onClick={() => setSpanValue(3)}>\r\n                            20:00 - 20:45\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"schedule\">\r\n                        <p><i className='icofont-clock-time'></i>{' Choose Schedule (UTC)'}</p>\r\n                        <button\r\n                            style={{ float: 'right', marginTop: '10px' }}\r\n                            className=\"btn-main\"\r\n                            onClick={() => {\r\n                                setSelDoctor(props.id)\r\n                                props.setSelectedDoctor(props.id)\r\n                                props.setSpanValue(spanValue)\r\n\r\n                            }}\r\n                        ><i className='icofont-check-circled' /> Select Doctor\r\n                        </button>\r\n\r\n                    </div>\r\n                    <div className='costing'>\r\n                        <p><i className='icofont-bitcoin'></i> 1.{randomValue.current} HTRAX</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { DoctorsDialog } from './doctors-dialog';\r\n\r\nconst ScheduleAppointment = props => {\r\n\r\n    const [doctorSelected, setDoctorSelected] = useState(false)\r\n    const [showDoctorDialog, setShowDoctorDialog] = useState(false);\r\n    const [doctorsData, setDoctorsData] = useState({})\r\n\r\n    const [txtPatientsInstruction, setTxtPatientsInstruction] = useState('')\r\n    const [txtSupportingInfo, setTxtSupportingInfo] = useState('')\r\n    const [fileConsent, setFileConsent] = useState('')\r\n    const [specialObject, setSpecialObject] = useState({})\r\n\r\n    const scheduleAppointment = () => {\r\n        //Use the endpoint for the appointment scheduling\r\n        const payLoad = {\r\n            \"meetingId\": specialObject.meetingID,\r\n            \"speciality\": specialObject.speciality,\r\n            \"startTIme\": specialObject.startTime,\r\n            \"duration\": specialObject.duration,\r\n            \"patientInstruction\": txtPatientsInstruction,\r\n            \"patientId\": props.data.uidNo,\r\n            \"doctorId\": specialObject.doctor_id,\r\n            \"supportingInfo\": {\r\n                \"filesConsent\": fileConsent\r\n            }\r\n        }\r\n\r\n        alert(JSON.stringify(payLoad));\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Use the selected doctor to reload the doctor's profile and hsow data here...\r\n\r\n        if (doctorSelected) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + doctorSelected, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n\r\n            //Alwasy remember to reset this so that we dont have an infinite loop\r\n            setDoctorSelected(false);\r\n        }\r\n\r\n    }, [doctorSelected])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dialog-background fade\">\r\n                <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-stopwatch\"></i> Schedule Appointment</h2>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n\r\n                        <div className='form-row-1-2'>\r\n                            <div className='input-group'>\r\n                                <label>Choose Doctor</label>\r\n                                <button\r\n                                    className=\"btn-main-outline\"\r\n                                    onClick={() => setShowDoctorDialog(true)}\r\n                                >Browse for Doctor...\r\n                                </button>\r\n                            </div>\r\n                            <div className='doctor-area'>\r\n                                <div className={doctorSelected ? 'chosen-doctor' : 'd-none'}>\r\n                                    <img src='/portfolio/team-4.jpg' alt='' />\r\n                                    <div className=\"details\">\r\n                                        <h3>{doctorsData && \"Dr.\" + doctorsData.name}</h3>\r\n                                        <p>{doctorsData?.specialization?.certification}</p>\r\n                                        <div>\r\n                                            <span>2021-10-15</span>\r\n                                            <span>11:00 - 12:45</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={!doctorSelected ? 'no-doctor-yet' : 'd-none'}>\r\n                                    <img src='/res/doctor.png' alt='' width={50} />\r\n                                    <h2>No Doctor Chosen yet...</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row mb-2 mt-2\" style={{ borderBottom: '2px solid var(--light-golden-rod)' }}>\r\n\r\n                        </div>\r\n                        <div className='form-row'>\r\n                            <div className='input-group'>\r\n                                <label>Allow Doctor to view my files?</label>\r\n                                <select\r\n                                    id=\"fileConsent\"\r\n                                    value={fileConsent}\r\n                                    className='form-control'\r\n                                    onChange={e => setFileConsent(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-row-2'>\r\n                            <div className='input-group'>\r\n                                <label>Patients Instructions</label>\r\n                                <textarea\r\n                                    id='txtPatientsInstruction'\r\n                                    value={txtPatientsInstruction}\r\n                                    onChange={e => setTxtPatientsInstruction(e.target.value)}\r\n                                    rows={3}\r\n                                    className='form-control'\r\n                                />\r\n                            </div>\r\n                            <div className='input-group'>\r\n                                <label>Supporting Info</label>\r\n                                <textarea\r\n                                    id='txtSupportingInfo'\r\n                                    value={txtSupportingInfo}\r\n                                    onChange={e => setTxtSupportingInfo(e.target.value)}\r\n                                    rows={3}\r\n                                    className='form-control'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer main\">\r\n                        <button\r\n                            id=\"btnUpdate\"\r\n                            onClick={scheduleAppointment}\r\n                            className=\"btn-main mr-1\"\r\n                        ><i className=\"icofont-checked\"></i> Schedule\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-main-outline\"\r\n                            onClick={() => props.hideAppointmentDialog()}\r\n                        >Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                showDoctorDialog && <DoctorsDialog\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    hideDoctorsDialog={() => setShowDoctorDialog(false)}\r\n                    setDoctorSelected={setDoctorSelected}\r\n                    data={props.data}\r\n                    setSpecialObject={setSpecialObject}\r\n\r\n                />\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScheduleAppointment;\r\n","import { Header } from \"../components/header\";\r\nimport { PatientTabHeaders } from \"./tab-pages/patient-tab-headers\";\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Contact } from \"./tab-pages/contact\";\r\nimport { Personal } from \"./tab-pages/personal\"\r\nimport { Medical } from \"./tab-pages/medical\";\r\nimport { MedicalHistory } from \"./tab-pages/medical-history\";\r\nimport { Lifestyle } from \"./tab-pages/lifestyle\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport ScheduleAppointment from \"../appointments/schedule-appointment\";\r\n\r\nconst Patients = props => {\r\n\r\n    const [patientsData, setPatientsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n    const [picture, setPicture] = useState();\r\n    const [appointmentBooked, setAppointmentBooked] = useState(false);\r\n    const [showAppointmentDialog, setShowAppointmentDialog] = useState(false)\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const refPicture = useRef();\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        //Set loading at this point...\r\n        props.setIsLoaderVisible(true);\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err, \"exclamation\");\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    function objToString(obj) {\r\n        return Object.entries(obj).reduce((str, [p, val]) => {\r\n            return `${str}${p}::${val}\\n`;\r\n        }, '');\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        resetData && setTimeout(() => {\r\n\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setPatientsData(res.data);\r\n\r\n                        //Make another fetch for the photo\r\n                        fetch(res.data.photo, { method: 'GET' })\r\n                            .then(response =>  (objToString(response)) )\r\n                            .then(response => {\r\n                                setPicture(response)\r\n                                console.log(response);\r\n                            })\r\n                            .catch(error => {\r\n                                alert(error)\r\n                            });\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }, 5000)\r\n\r\n    }, [resetData])\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n                    refPicture.current = picture;\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={picture || \"/portfolio/avatar.png\"}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Patient</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{patientsData.name}</h2>\r\n                        <h4 className=\"d-none\"><i className=\"icofont-location-pin\"></i>{props.data?.address && props.data.address[0]?.city}, {props.data?.address && props.data.address[0]?.state}</h4>\r\n                    </div>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Upcoming Appointment</h4>\r\n                        </div>\r\n                        {appointmentBooked ? <div className=\"appointment\">\r\n                            <div className=\"details\">\r\n                                <h2>Dr. Andrews Collins</h2>\r\n                                <h3>Available</h3>\r\n                                <h4><i className=\"icofont-phone\" /> +01 555 1020</h4>\r\n                            </div>\r\n                            <img src=\"/portfolio/team-3.jpg\" />\r\n                        </div>\r\n                            : <div className=\"book-appointment\">\r\n                                <h4>You do not have any upcoming appointment!</h4>\r\n                                <button\r\n                                    className=\"btn-main\"\r\n                                    onClick={() => {\r\n                                        setShowAppointmentDialog(true)\r\n                                    }}\r\n                                >Book an Appointment...\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <PatientTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 3 && <Medical\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 4 && <MedicalHistory\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 5 && <Lifestyle\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                showAppointmentDialog && <ScheduleAppointment\r\n                    data={patientsData}\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    setAppointmentBooked={() => setAppointmentBooked(true)}\r\n                    hideAppointmentDialog={() => setShowAppointmentDialog(false)}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;","\r\nexport const DoctorsTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-karate\"></i>Portfolio\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{props.data.address}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailAddress}</td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [txtAddress, setTxtAddress] = useState(props.data.address ? [...props.data.address] : \"\");\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailAddress);\r\n\r\n    const updateContact = () => {\r\n        const data = {\r\n            address: [txtAddress],\r\n            emailAddress: txtEmail,\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Address</label>\r\n                            <textarea\r\n                                id=\"txtAddress\"\r\n                                value={txtAddress}\r\n                                onChange={e => setTxtAddress(e.target.value)}\r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={() => updateContact()}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Portfolio = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const specialization = props.data.specialization.certification\r\n        ? `${props.data?.specialization?.certification}, ${props.data?.specialization?.type}`\r\n        : \"\";\r\n\r\n    const license = props.data.license.certification\r\n        ? `${props.data?.license?.certification} - ${props.data?.license?.issueDate}`\r\n        : \"\";\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Qualifications and Specializations</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Qualification</td>\r\n                            <td>{props.data?.qualification && [...props.data?.qualification]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Specialization</td>\r\n                            <td>{specialization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>License</td>\r\n                            <td>{license}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <PortfolioDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PortfolioDialog = props => {\r\n    const [txtQualification, setTxtQualification] = useState(props.data.qualification ? [...props.data?.qualification] : '')\r\n    const [txtSpecialization, setTxtSpecialization] = useState(props.data?.specialization?.certification)\r\n    const [txtSpecializationType, setTxtSpecializationType] = useState(props.data?.specialization?.type)\r\n    const [txtLicense, setTxtLicense] = useState(props.data?.license?.certification)\r\n    const [txtLicenseIssueDate, setTxtLicenseIssueDate] = useState(props.data?.license?.issueDate)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            qualification: [txtQualification],\r\n            license: {\r\n                certification: txtLicense,\r\n                issueDate: txtLicenseIssueDate\r\n            },\r\n            specialization: {\r\n                certification: txtSpecialization,\r\n                type: txtSpecializationType\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Portfolio</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Qualification</label>\r\n                            <textarea\r\n                                id=\"txtQualification\"\r\n                                value={txtQualification}\r\n                                onChange={e => setTxtQualification(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <textarea\r\n                                id=\"txtSpecialization\"\r\n                                value={txtSpecialization}\r\n                                onChange={e => setTxtSpecialization(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Specialization - Type</label>\r\n                            <input\r\n                                id=\"txtSpecializationType\"\r\n                                value={txtSpecializationType}\r\n                                onChange={e => setTxtSpecializationType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>License</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"txtLicense\"\r\n                                value={txtLicense}\r\n                                onChange={e => setTxtLicense(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Issue Date</label>\r\n                            <input\r\n                                id=\"txtLicenseIssueDate\"\r\n                                value={txtLicenseIssueDate}\r\n                                onChange={e => setTxtLicenseIssueDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../components/header\";\r\nimport { DoctorsTabHeaders } from \"./tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport { Portfolio } from \"./tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [picture, setPicture] = useState(doctorsData.photo);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (resetData) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n                        setPicture(res.data.photo);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }\r\n\r\n    }, [resetData])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo === \"\" ? \"/portfolio/team-4.jpg\" : picture}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Doctor</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{doctorsData.name}</h2>\r\n                        <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4>\r\n                    </div>\r\n                    <h3>{doctorsData.specialization?.certification}</h3>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\n\r\nexport const DoctorsLogin = props => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [txtDoctorsID, setTxtDoctorsID] = useState(\"\");\r\n    const [txtPhone, setTxtPhone] = useState(\"\");\r\n    const [txtPassword, setTxtPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            loginId: txtPhone,\r\n            role: \"Doctor\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200 && response.uidNo === txtDoctorsID) {\r\n                    //Proceed to the doctors page...\r\n                    sessionStorage.setItem('token', response.token)\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo)\r\n                    history.push(\"/doctors/profile\");\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"../mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Doctors' Login!</h2>\r\n\r\n                            <h4>Enter your details</h4>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtDoctorsID\"\r\n                                        value={txtDoctorsID}\r\n                                        onChange={e => setTxtDoctorsID(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                        placeholder='Doctor ID'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtPhone\"\r\n                                        value={txtPhone}\r\n                                        onChange={e => setTxtPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                        placeholder='Registered Phone Number'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtPassword\"\r\n                                        value={txtPassword}\r\n                                        onChange={e => setTxtPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        placeholder='Password'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Login</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"../doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","export const Cards = (props) => {\r\n    return (\r\n        <div className=\"s-card\">\r\n            <div>\r\n                <div className=\"numbers\">{props.numbers}</div>\r\n                <div className=\"cardName\">{props.totalCases}</div>\r\n            </div>\r\n            <div className=\"iconBox\">\r\n                <i className={props.icofontClass} aria-hidden=\"true\"></i>\r\n                <span>{props.lastUpdatedTime}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const cardsValues = [\r\n    {\r\n      id: 1,\r\n      numbers: 364,\r\n      cases: \"Total Cases\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-medicine\",\r\n    },\r\n    {\r\n      id: 2,\r\n      numbers: 241,\r\n      cases: \"Patients\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-patient-file\",\r\n    },\r\n    {\r\n      id: 3,\r\n      numbers: 82,\r\n      cases: \"Doctors\",\r\n      lastUpdatedTime: \"7 hours ago\",\r\n      icofontClass: \"icofont-doctor\",\r\n    },\r\n    {\r\n      id: 4,\r\n      numbers: 43,\r\n      cases: \"Schedules\",\r\n      lastUpdatedTime: \"12 hours ago\",\r\n      icofontClass: \"icofont-delivery-time\",\r\n    },\r\n  ];\r\n\r\n  export default cardsValues;\r\n","import { Cards } from './cards'\r\nimport cardsValues from './cards-values'\r\n\r\nexport const CardBox = () => {\r\n    const vals = cardsValues.map(item => {\r\n        return (<Cards\r\n            key={item.id}\r\n            numbers={item.numbers}\r\n            totalCases={item.cases}\r\n            lastUpdatedTime={item.lastUpdatedTime}\r\n            icofontClass={item.icofontClass}\r\n        />)\r\n    })\r\n\r\n    return (\r\n        \r\n        <div className=\"cardBox\">\r\n            {vals}\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const DoctorsListItem = props => {\r\n    return (\r\n        <div\r\n            className={props.selectedDoctor === props.id ? \"d-list-item active\" : \"d-list-item\"}\r\n            onClick={() => props.setItem(props.id)}\r\n        >\r\n            <div className=\"image-part\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                <p><span>♥</span>{props.rating}</p>\r\n            </div>\r\n            <div className=\"name-part\">\r\n                <h3>{props.name}</h3>\r\n                <h4>{props.specialization}</h4>\r\n                <span className={props.status?.toLowerCase()}>\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { DoctorsTabHeaders } from \"../../doctors-profile/tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../../assets/common/base-url\";\r\nimport { Portfolio } from \"../../doctors-profile/tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = props.selectedDoctor;\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/search/\" + idValue, params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n        //Always remember to reset the data...\r\n        setResetData(false);\r\n\r\n    }\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n\r\n    }, [resetData, props.selectedDoctor])\r\n\r\n    const activateProfile = () => {\r\n        //Simply make the verification status of the particular individual Active...\r\n        const data = {\r\n            verification: {\r\n                status: \"Active\",\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n    const displayActivate = doctorsData.verification?.status !== \"Pending\" ? \"d-none\" : \"btn-main\";\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"dash-body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo || \"/portfolio/avatar.png\"}\r\n                            alt=\"\"\r\n                        />\r\n                        <div className=\"title\">\r\n                            <h2>{doctorsData.name}</h2>\r\n                            {/* <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4> */}\r\n                        </div>\r\n                        <h3>{doctorsData.specialization?.certification}</h3>\r\n                        <button\r\n                            id=\"btnActivate\"\r\n                            className={displayActivate}\r\n                            onClick={activateProfile}\r\n                        >\r\n                            Activate Profile\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { Header } from \"../../components/header\";\r\nimport { CardBox } from './cardbox';\r\nimport { DoctorsListItem } from './doctors-list-item';\r\nimport Doctors from './doctors'\r\n\r\nconst Dashboard = props => {\r\n\r\n    const [txtSearch, setTxtSearch] = useState(\"\");\r\n    const [doctorsList, setDoctorsList] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n\r\n    const fetchDoctors = () => {\r\n        const params = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            method: 'GET'\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsList(res.data);\r\n                    setSelectedDoctor(res.data[0]?.id)\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Load a doctors' list immediately the form loads...\r\n        fetchDoctors();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const output = doctorsList.filter(item => item.name === txtSearch)\r\n        if (txtSearch !== \"\") {\r\n            setDoctorsList(output)\r\n        } else if (txtSearch === \"\") {\r\n            setDoctorsList(doctorsList);\r\n        }\r\n\r\n        setSelectedDoctor(doctorsList[0]?.id)\r\n\r\n    }, [txtSearch])\r\n\r\n    const listItems = doctorsList.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                id={item._id}\r\n                name={item.name}\r\n                src={item.photo}\r\n                rating={`4.${Math.floor(Math.random() * 9)}`}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                key={index}\r\n                setItem={value => setSelectedDoctor(value)}\r\n                selectedDoctor={selectedDoctor}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='main'>\r\n                <CardBox />\r\n                <div className='main-content'>\r\n                    <div className=\"left-main mt-2\">\r\n                        <div className=\"input-group d-none\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtSearch\"\r\n                                type=\"text\"\r\n                                value={txtSearch}\r\n                                onChange={e => setTxtSearch(e.target.value)}\r\n                                placeholder='Search for Doctor'\r\n\r\n                            />\r\n                            <i className=\"icofont-search\"></i>\r\n                        </div>\r\n                        <div className='doctors-list'>\r\n                            {listItems}\r\n                        </div>\r\n                    </div>\r\n                    <div className='right-main'>\r\n                        {selectedDoctor && <Doctors\r\n                            setIsLoaderVisible={props.setIsLoaderVisible}\r\n                            showToast={props.showToast}\r\n                            selectedDoctor={selectedDoctor}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { Login } from './login/login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Register } from './register/register';\nimport Loader from './components/loader';\nimport { useState } from 'react';\nimport Toast from './components/toast';\nimport Patients from './patients-profile/patients';\nimport Doctors from './doctors-profile/doctors';\nimport { DoctorsLogin } from './login/doctors-login';\nimport Dashboard from './admin/dashboard/dashboard';\n\nfunction App() {\n\n  const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n  const [toastVis, setToastVis] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [msgBoxType, setMsgBoxType] = useState(\"success\");\n\n  const ShowToast = (message, messageBoxType) => {\n    setToastMsg(message);\n    setMsgBoxType(messageBoxType);\n    setToastVis(true);\n  }\n\n  return (\n    <>\n      <Loader isVisible={isLoaderVisible} />\n      <Toast\n        toastMessage={toastMsg}\n        msgBoxType={msgBoxType}\n        toastVisibility={toastVis}\n        setToastVisibility={setToastVis}\n      />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Login showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/patients/profile\">\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/profile\">\n            <Doctors showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/login\">\n            <DoctorsLogin showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/admin/dashboard\">\n            <Dashboard showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"*\">\n            {/* Re-route to the patient's main page... */}\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/dashboard.css'\nimport './assets/css/new-loader.css'\nimport './assets/css/main.css'\nimport './assets/css/toast.css'\nimport './assets/css/dialog.css'\nimport './assets/css/tab-pages.css'\nimport './assets/200/icofont/icofont.min.css'\nimport './assets/200/boxicons/css/boxicons.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}