{"version":3,"sources":["assets/common/base-url.js","login/OTPLogin.js","login/login.js","register/register.js","components/loader.js","components/toast.js","components/header.js","patients-profile/tab-pages/patient-tab-headers.js","patients-profile/tab-pages/contact.js","patients-profile/tab-pages/personal.js","patients-profile/tab-pages/medical.js","patients-profile/tab-pages/lifestyle.js","assets/common/file-to-base64.js","patients-profile/patients.js","App.js","reportWebVitals.js","index.js"],"names":["ApiPath","OTPLogin","props","history","useHistory","useState","countdownTimer","setCountdownTimer","input1","setInput1","input2","setInput2","input3","setInput3","input4","setInput4","input5","setInput5","input6","setInput6","useEffect","setInterval","value","displayClasss","showDialog","className","id","onClick","hideDialog","phoneNumber","type","maxLength","onChange","e","target","keyCode","document","getElementById","focus","data","loginId","role","validatedbyotp","options","JSON","stringify","setIsLoaderVisible","fetch","then","response","json","statusCode","showToast","sessionStorage","setItem","token","uidNo","push","message","catch","err","Login","setValue","displayOTP","setDisplayOTP","style","minHeight","src","defaultCountry","placeholder","to","display","Register","name","setName","setRole","phone","setPhone","password","setPassword","verifyPassword","setVerifyPassword","marginTop","marginBottom","autoComplete","statusText","width","Loader","displayClass","isVisible","Toast","visStatus","toastVisibility","toastMessage","setTimeout","setToastVisibility","iconSrc","contentStyle","headerStyle","msgBoxType","borderLeft","color","innerText","alt","Header","PatientTabHeaders","selectedTab","setSelectedTab","Contact","setShowDialog","emailAddress","ContactDialog","displayDialog","rows","Personal","gender","maritalStatus","birthDate","communicationLang","languagePref","deceased","deceasedBoolean","deceasedDateTime","setResetData","PersonalDialog","showDeceased","setShowDeceased","cbxDeceased","setCbxDeceased","fullName","setFullName","cbxGender","setCbxGender","cbxMaritalStatus","setCbxMaritalStatus","txtBirthDate","setTxtBirthDate","txtLanguage","setTxtLanguage","txtDeceasedDate","setTxtDeceasedDate","getItem","error","Medical","allergies","managingOrganization","general","bloodGroup","height","weight","bmi","chestExpansion","vision","bp","pulse","oxygenSaturation","MedicalDialog","boxContent","setBoxContent","txtAllergies","setTxtAllergies","txtManagingOrg","setTxtManagingOrg","setBloodGroup","setHeight","setWeight","setVision","setChestExpansion","bloodPressure","setBloodPressure","setPulse","setOxygenSaturation","setBmi","createItems","content","split","map","item","index","trim","onBlur","Lifestyle","LifestyleDialog","txtCurrentMedications","setTxtCurrentMedications","txtPastPrescriptions","setTxtPastPrescriptions","txtDiagnosisReport","setTxtDiagnosisReport","saveImageToBase64","val","fileUpload","file","querySelector","files","size","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","toString","accept","window","alert","currentMedications","pastPrescriptions","diagnosisReport","Patients","patientsData","setPatientsData","resetData","idValue","params","res","App","isLoaderVisible","toastVis","setToastVis","toastMsg","setToastMsg","setMsgBoxType","ShowToast","messageBoxType","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b71cac4.chunk.js","sourcesContent":["export const ApiPath = \"http://122.176.120.160:4000/\";","import { useState, useEffect } from \"react\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst OTPLogin = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [countdownTimer, setCountdownTimer] = useState(45);\r\n\r\n    const [input1, setInput1] = useState('')\r\n    const [input2, setInput2] = useState('')\r\n    const [input3, setInput3] = useState('')\r\n    const [input4, setInput4] = useState('')\r\n    const [input5, setInput5] = useState('')\r\n    const [input6, setInput6] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (countdownTimer <= 0) {\r\n            setInterval(() => {\r\n                setCountdownTimer(value => (value - 1));\r\n            }, 1000)\r\n        }\r\n\r\n    }, [countdownTimer])\r\n\r\n    const postLogin = () => {\r\n        const OTP = input1 + input2 + input3 + input4 + input5 + input6;\r\n\r\n        //Remember, patient login...\r\n        if (OTP !== \"203040\") {\r\n            //This value will be replaced later from generated value...\r\n            props.showToast(\"Invalid OTP. Check the registered phone number displayed above, or click 'Resend OTP' to resend.\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            loginId: props.phoneNumber,\r\n            role: \"Patient\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response =>  (response.json()))\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200) {\r\n                    props.showToast(\"Login successful!\", 'success');\r\n\r\n                    //Remember to store the bearer token\r\n                    sessionStorage.setItem(\"token\", response.token);\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo);\r\n\r\n                    history.push(\"/patients/profile\")\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    const displayClasss = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayClasss}>\r\n            <div className=\"dialog-container otp\">\r\n                <div className=\"dialog-content\">\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\">Confirm your phone number</h2>\r\n                        <span id=\"close_toast\" onClick={props.hideDialog}>&times;</span>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <h4>To complete your login, please enter the 6-digit OTP sent to\r\n\r\n                        </h4>\r\n                        <h2 className=\"phone-no\">{props.phoneNumber}</h2>\r\n                        <div className=\"input-array\">\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input1\"\r\n                                value={input1}\r\n                                onChange={e => {\r\n                                    setInput1(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input2\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input2\"\r\n                                value={input2}\r\n                                onChange={e => {\r\n                                    setInput2(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input3\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input3\"\r\n                                value={input3}\r\n                                onChange={e => {\r\n                                    setInput3(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input4\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input4\"\r\n                                value={input4}\r\n                                onChange={e => {\r\n                                    setInput4(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input5\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input5\"\r\n                                value={input5}\r\n                                onChange={e => {\r\n                                    setInput5(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input6\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input6\"\r\n                                value={input6}\r\n                                onChange={e => {\r\n                                    setInput6(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input1\").focus();\r\n                                }}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"resend-group\">\r\n                            <div>\r\n                                <p>Didn't receive the OTP?</p>\r\n                                <button>Resend</button>\r\n                            </div>\r\n                            <div>00:{countdownTimer}</div>\r\n                        </div>\r\n\r\n                        <div className=\"otp-call\">\r\n                            <button>Get OTP on call</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button className=\"btn-continue\" onClick={postLogin}>Continue</button>\r\n                        <button className=\"btn-cancel\" onClick={props.hideDialog}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OTPLogin;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport OTPLogin from './OTPLogin';\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [displayOTP, setDisplayOTP] = useState(false);\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            loginId: value,\r\n            role: \"Patient\",\r\n            validatedbyotp: \"false\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode !== 200) {\r\n                    showToast(response.message, 'exclamation');\r\n                } else {\r\n                    //Else, proceed... show the 2fa page...\r\n                    setDisplayOTP(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"./mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Let's get started!</h2>\r\n\r\n                            <h4>Enter your mobile number</h4>\r\n                            <div className=\"phone-input-container\">\r\n                                <input\r\n                                    id=\"value\"\r\n                                    value={value}\r\n                                    onChange={e => setValue(e.target.value)}\r\n                                    defaultCountry='IN'\r\n                                    className=\"login-control\"\r\n                                    placeholder=\"Mobile Number\"\r\n                                    maxLength={14}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Continue</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Returning Doctor? <Link to=\"/\">Login here</Link></h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"./doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                displayOTP && <OTPLogin\r\n                    showDialog={displayOTP}\r\n                    phoneNumber={value}\r\n                    hideDialog={() => setDisplayOTP(false)}\r\n                    showToast={showToast}\r\n                    setIsLoaderVisible={setIsLoaderVisible}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\nexport const Register = ({ setIsLoaderVisible, showToast }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const register = () => {\r\n        //Connect to the api after validation...\r\n        if (name === \"\" || role === \"\" || phone === \"\" || password === \"\") {\r\n            showToast(\"Complete all fields to proceed!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        if (password !== verifyPassword) {\r\n            showToast(\"Password and verify password fields must match!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            name: name,\r\n            role: role,\r\n            phoneNumber: phone,\r\n            password: password\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"register\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoaderVisible(false);\r\n                if (response && response.statusText === 200) {\r\n                    showToast(\"Registration successful! Now login with the new credentials...\", 'success');\r\n                    history.push(\"/\");\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-divider\">\r\n                <div className=\"left-sidebar\">\r\n                    <img src=\"./mah-logo.png\" />\r\n\r\n                    <div className=\"left-text\" style={{ marginTop: -5 }}>\r\n                        <h2 style={{ marginBottom: 25 }}>Registration</h2>\r\n\r\n                        {/* Form for details entry... */}\r\n                        <div className=\"form-data\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Name (Firstname and Lastname)</label>\r\n                                    <input\r\n                                        id=\"name\"\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Role</label>\r\n                                    <select\r\n                                        id=\"role\"\r\n                                        value={role}\r\n                                        onChange={e => setRole(e.target.value)}\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Patient\">Patient</option>\r\n                                        <option value=\"Doctor\">Doctor</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        id=\"phone\"\r\n                                        value={phone}\r\n                                        onChange={e => setPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Password</label>\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={e => setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Verify Password</label>\r\n                                    <input\r\n                                        id=\"verifyPasword\"\r\n                                        value={verifyPassword}\r\n                                        onChange={e => setVerifyPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={register}\r\n                            >Register</button>\r\n                        </div>\r\n\r\n                        <div className=\"doctor-register\">\r\n                            <h4>Already a user? <Link to=\"/\">Login here</Link></h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-sidebar\">\r\n                    <img src=\"./access-account.svg\" style={{ width: '50%'}} />\r\n                    <div className=\"image-text\">\r\n                        <p>India's top doctors to guide you to better health everyday...</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","const Loader = ({ isVisible }) => {\r\n\r\n    const displayClass = !isVisible ? \"d-none\" : \"new-loader-bg\";\r\n\r\n    return (\r\n        <div className={displayClass}>\r\n            <div className=\"new-loader-container\">\r\n                <span style={{ '--i': 0 }}></span>\r\n                <span style={{ '--i': 1 }}></span>\r\n                <span style={{ '--i': 2 }}></span>\r\n                <span style={{ '--i': 3 }}></span>\r\n                <span style={{ '--i': 4 }}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nconst Toast = (props) => {\r\n\r\n    const visStatus = (props.toastVisibility) ? \"toast\" : \"toast d-none\";\r\n    const message = props.toastMessage === \"Failed to fetch\" ? \"Failed to retrieve data. Check your internet connection and try again.\" : props.toastMessage;\r\n\r\n    function closeToast() {\r\n        props.setToastVisibility(false)\r\n    }\r\n\r\n    if (props.toastVisibility) {\r\n        setTimeout(() => {\r\n            props.setToastVisibility(false)\r\n        }, 8000)\r\n    }\r\n\r\n    let iconSrc = \"\"\r\n    const contentStyle = {}\r\n    const headerStyle = {}\r\n\r\n    switch (props.msgBoxType) {\r\n        case \"success\":\r\n            iconSrc = \"/success.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--main-green)\"\r\n\r\n            headerStyle.color = \"var(--main-green)\"\r\n            headerStyle.innerText = \"Success\"\r\n\r\n            break;\r\n\r\n        case \"information\":\r\n            iconSrc = \"/info.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--bluish)\";\r\n\r\n            headerStyle.color = \"var(--bluish)\"\r\n            headerStyle.innerText = \"Information\"\r\n\r\n            break;\r\n\r\n        case \"exclamation\":\r\n            iconSrc = \"/warning.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--golden-rod)\";\r\n\r\n            headerStyle.color = \"var(--golden-rod)\"\r\n            headerStyle.innerText = \"Error\"\r\n\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        // This returns the basic\r\n        //Frame setup for the custom message box\r\n        // and based on the above props\r\n        // the state values can be changed\r\n        // depending on the values\r\n        // of the\r\n        // 1. Message\r\n        // 2. Box style (information, exclamation or success)\r\n        // 3. The message box visibility (true or false)\r\n        <div className={visStatus}>\r\n            <div className=\"logo\">\r\n                <img id=\"toastIcon\" src={iconSrc} alt=\"\" />\r\n            </div>\r\n            <div className=\"content\" style={contentStyle}>\r\n                <div className=\"content-header\">\r\n                    <h4 id=\"headerText\" style={headerStyle}>MAH Health Care</h4>\r\n                    <span id=\"close_toast\" onClick={closeToast}>&times;</span>\r\n                </div>\r\n                <p id=\"toast_message\">{(message === \"Unauthenticated user\" || message === \"No user found\") ? \"Access Denied!\" : message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header-bar\">\r\n            <div className=\"header-bar-image\">\r\n                <Link to=\"/\" ><img src=\"/logo.png\" width=\"60\" />MAH Health Care</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","\r\nexport const PatientTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-ui-user\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Medical\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-history\"></i>History\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Contact Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Phone</td>\r\n                            <td>{props.data?.phoneNumber}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Address</td>\r\n                            <td>123 Derie Ans Boulevard, Check Avenue, PA, Porthsmouth, USA</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>E-mail</td>\r\n                            <td>{props.data.emailAddress}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Contact Person</td>\r\n                            <td>Jerry Wiliams<br />\r\n                                Forth Avenue, PA North, PA, USA\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n            />\r\n            </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Address</label>\r\n                            <textarea\r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Contact Person</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Marital Status</td>\r\n                            <td>{props.data?.maritalStatus}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Preferred Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Is Deceased?</td>\r\n                            <td>{props.data?.deceased?.deceasedBoolean || \"No\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Deceased Date</td>\r\n                            <td>{props.data?.deceased?.deceasedDateTime || \"-\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [showDeceased, setShowDeceased] = useState('none');\r\n    const [cbxDeceased, setCbxDeceased] = useState(props.data.deceased?.deceasedBoolean)\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [cbxMaritalStatus, setCbxMaritalStatus] = useState(props.data.maritalStatus)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n    const [txtDeceasedDate, setTxtDeceasedDate] = useState(props.data?.deceased?.deceasedDateTime);\r\n\r\n    useEffect(() => {\r\n        if (cbxDeceased === \"Yes\") {\r\n            setShowDeceased('block')\r\n        } else {\r\n            setShowDeceased('none');\r\n        }\r\n    }, [cbxDeceased])\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n            \"deceased\": {\r\n                deceasedBoolean: cbxDeceased === \"Yes\" ? true : false,\r\n                deceasedDateTime: txtDeceasedDate,\r\n            },\r\n            maritalStatus: cbxMaritalStatus,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Marital Status</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxMaritalStatus\"\r\n                                value={cbxMaritalStatus}\r\n                                onChange={e => setCbxMaritalStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Maried\">Maried</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Do not wish to disclose\">Do not wish to disclose</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Is Deceased?</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxIsDeceased\"\r\n                                value={cbxDeceased}\r\n                                onChange={e => setCbxDeceased(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group' style={{ display: showDeceased }}>\r\n                            <label>Deceased Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtDeceasedDate\"\r\n                                value={txtDeceasedDate}\r\n                                onChange={e => setTxtDeceasedDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url'\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64';\r\n\r\nexport const Medical = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical Details</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Allergies</td>\r\n                            <td>{[...props.data.allergies.value]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Managing Organization (Hospital)</td>\r\n                            <td>{props.data.managingOrganization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Blood Group</td>\r\n                            <td>{props.data.general?.bloodGroup}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Height</td>\r\n                            <td>{props.data.general?.height}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Weight</td>\r\n                            <td>{props.data.general?.weight}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BMI</td>\r\n                            <td>{props.data.general?.bmi}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Chest Expansion</td>\r\n                            <td>{props.data.general?.chestExpansion}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Vision</td>\r\n                            <td>{props.data.general?.vision}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BP</td>\r\n                            <td>{props.data.general?.bp}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pulse</td>\r\n                            <td>{props.data.general?.pulse}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Oxygen Saturation</td>\r\n                            <td>{props.data.general?.oxygenSaturation}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <MedicalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalDialog = props => {\r\n\r\n    const [boxContent, setBoxContent] = useState('')\r\n    const [txtAllergies, setTxtAllergies] = useState(props.data.allergies?.value)\r\n    const [txtManagingOrg, setTxtManagingOrg] = useState(props.data.managingOrganization)\r\n\r\n    const [bloodGroup, setBloodGroup] = useState(props.data?.general?.bloodGroup);\r\n    const [height, setHeight] = useState(props.data?.general?.height);\r\n    const [weight, setWeight] = useState(props.data?.general?.weight);\r\n    const [vision, setVision] = useState(props.data?.general?.vision);\r\n    const [chestExpansion, setChestExpansion] = useState(props.data?.general?.chestExpansion);\r\n    const [bloodPressure, setBloodPressure] = useState(props.data?.general?.bp);\r\n    const [pulse, setPulse] = useState(props.data?.general?.pulse);\r\n    const [oxygenSaturation, setOxygenSaturation] = useState(props.data?.general?.oxygenSaturation);\r\n    const [bmi, setBmi] = useState(props.data?.general?.bmi);\r\n\r\n    const createItems = () => {\r\n        /** as the textbox blurs,\r\n         * create a list of\r\n         * emails with special colorizing\r\n         * and close items...\r\n\r\n        After clearing the container, fix the emails...*/\r\n        const allergies = txtAllergies.split(\",\");\r\n\r\n        const content = allergies.map((item, index) => {\r\n            return (\r\n                <span key={index}>{item.trim()}</span>\r\n            )\r\n        })\r\n\r\n        setBoxContent(content || \"Selected Allergies\")\r\n\r\n    }\r\n\r\n    const updateMedicalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            allergies: { value: [txtAllergies] },\r\n            general: {\r\n                \"bloodGroup\": bloodGroup,\r\n                \"height\": height,\r\n                \"weight\": weight,\r\n                \"bmi\": bmi,\r\n                \"chestExpansion\": chestExpansion,\r\n                \"vision\": vision,\r\n                \"bp\": bloodPressure,\r\n                \"pulse\": pulse,\r\n                \"oxygenSaturation\": oxygenSaturation\r\n            },\r\n            managingOrganization: txtManagingOrg\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Medical Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Allergies</label>\r\n                            <input\r\n                                id=\"txtAllergies\"\r\n                                className=\"form-control mb-1\"\r\n                                value={txtAllergies}\r\n                                onChange={e => {\r\n                                    setTxtAllergies(e.target.value)\r\n                                    if (e.keyCode === 13) createItems();\r\n                                }}\r\n                                onBlur={createItems}\r\n                                placeholder='Enter comma-separated values'\r\n                            />\r\n                            <div className=\"emails-box\">{boxContent}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Managing Organization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtManagingOrg\"\r\n                                value={txtManagingOrg}\r\n                                onChange={e => setTxtManagingOrg(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"ABC Healthcare\">ABC Healthcare</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>Blood Group</label>\r\n                            <input\r\n                                id=\"bloodGroup\"\r\n                                className=\"form-control\"\r\n                                value={bloodGroup}\r\n                                onChange={e => setBloodGroup(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Height</label>\r\n                            <input\r\n                                id=\"height\"\r\n                                className=\"form-control\"\r\n                                value={height}\r\n                                onChange={e => setHeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Weight</label>\r\n                            <input\r\n                                id=\"weight\"\r\n                                className=\"form-control\"\r\n                                value={weight}\r\n                                onChange={e => setWeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BMI</label>\r\n                            <input\r\n                                id=\"bmi\"\r\n                                className=\"form-control\"\r\n                                value={bmi}\r\n                                onChange={e => setBmi(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Chest Expansion</label>\r\n                            <input\r\n                                id=\"chestExpansion\"\r\n                                className=\"form-control\"\r\n                                value={chestExpansion}\r\n                                onChange={e => setChestExpansion(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Vision</label>\r\n                            <input\r\n                                id=\"vision\"\r\n                                className=\"form-control\"\r\n                                value={vision}\r\n                                onChange={e => setVision(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BP</label>\r\n                            <input\r\n                                id=\"bloodPressure\"\r\n                                className=\"form-control\"\r\n                                value={bloodPressure}\r\n                                onChange={e => setBloodPressure(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Pulse</label>\r\n                            <input\r\n                                id=\"pulse\"\r\n                                className=\"form-control\"\r\n                                value={pulse}\r\n                                onChange={e => setPulse(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Oxygen Saturation</label>\r\n                            <input\r\n                                id=\"oxygenSaturation\"\r\n                                className=\"form-control\"\r\n                                value={oxygenSaturation}\r\n                                onChange={e => setOxygenSaturation(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Lifestyle = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical History</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Current Medication</td>\r\n                            <td>[File...]</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Past prescriptions</td>\r\n                            <td>[File...]</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Diagnosis Report</td>\r\n                            <td>[File...]</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <LifestyleDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LifestyleDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState('')\r\n    const [txtPastPrescriptions, setTxtPastPrescriptions] = useState('')\r\n    const [txtDiagnosisReport, setTxtDiagnosisReport] = useState('')\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            currentMedications: [txtCurrentMedications],\r\n            pastPrescriptions: [txtPastPrescriptions],\r\n            diagnosisReport: [txtDiagnosisReport],\r\n\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = (val) => {\r\n\r\n        let fileUpload;\r\n\r\n        if (val === \"curr\") {\r\n            fileUpload = document.querySelector(\"#txtCurrentMedications\")\r\n        } else if (val === \"pp\") {\r\n            fileUpload = document.querySelector(\"#txtPastPrescriptions\")\r\n        } else {\r\n            fileUpload = document.querySelector(\"#txtDiagnosisReport\")\r\n        }\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    switch (val) {\r\n                        case \"curr\":\r\n                            setTxtCurrentMedications(response.toString());\r\n                            break;\r\n                        case \"pp\":\r\n                            setTxtPastPrescriptions(response.toString());\r\n                            break;\r\n                        default:\r\n                            setTxtDiagnosisReport(response.toString());\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Current Medications</label>\r\n                            <input\r\n                                id=\"txtCurrentMedications\"\r\n                                onChange={() => saveImageToBase64(\"curr\")}\r\n                                className=\"form-control\"\r\n                                accept=\"image/*, .pdf, .doc, .docx\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"input-group\" style={{ marginTop: 40 }}>\r\n                            <button\r\n                                id=\"btnCurrentMedication\"\r\n                                className=\"btn-main\"\r\n                                onClick={() => window.alert(\"Displays a preview of the saved document. To be conpleted later...\")}>\r\n                                Preview Saved...\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Past Prescriptions</label>\r\n                            <input\r\n                                id=\"txtPastPrescriptions\"\r\n                                onChange={() => saveImageToBase64(\"pp\")}\r\n                                className=\"form-control\"\r\n                                accept=\"image/*, .pdf, .doc, .docx\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"input-group\" style={{ marginTop: 40 }}>\r\n                            <button\r\n                                id=\"btnPastPrescriptions\"\r\n                                className=\"btn-main\"\r\n                                onClick={() => window.alert(\"Displays a preview of the saved document. To be conpleted later...\")}>\r\n                                Preview Saved...\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Diagnosis Report</label>\r\n                            <input\r\n                                id=\"txtDiagnosisReport\"\r\n                                onChange={() => saveImageToBase64(\"diag\")}\r\n                                className=\"form-control\"\r\n                                accept=\"image/*, .pdf, .doc, .docx\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"input-group\" style={{ marginTop: 40 }}>\r\n                            <button\r\n                                id=\"btnPastPrescriptions\"\r\n                                className=\"btn-main\"\r\n                                onClick={() => window.alert(\"Displays a preview of the saved document. To be conpleted later...\")}>\r\n                                Preview Saved...\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// Convert file to base64 string\r\nexport const fileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n};\r\n","import { Header } from \"../components/header\";\r\nimport { PatientTabHeaders } from \"./tab-pages/patient-tab-headers\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Contact } from \"./tab-pages/contact\";\r\nimport { Personal } from \"./tab-pages/personal\"\r\nimport { Medical } from \"./tab-pages/medical\";\r\nimport { Lifestyle } from \"./tab-pages/lifestyle\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\n\r\nconst Patients = (props) => {\r\n\r\n    const [patientsData, setPatientsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (resetData) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setPatientsData(res.data);\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }\r\n\r\n    }, [resetData])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img src=\"/portfolio/team-1.jpg\" width='100%' height='100%' />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Patient</h4>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button className=\"btn-main\">Change Profile Picture...</button>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{patientsData.name}</h2>\r\n                        <h4><i className=\"icofont-location-pin\"></i> San Diego, USA</h4>\r\n                    </div>\r\n                    <h3>Product Designer</h3>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Upcoming Appointment</h4>\r\n                        </div>\r\n                        <div className=\"appointment\">\r\n                            <div className=\"details\">\r\n                                <h2>Dr. Andrews Collins</h2>\r\n                                <h3>Available</h3>\r\n                                <h4><i className=\"icofont-location-pin\" /> Santa Monica, SM, USA</h4>\r\n                            </div>\r\n                            <img src=\"/portfolio/team-3.jpg\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PatientTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Medical\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 4 && <Lifestyle\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;","import { Login } from './login/login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Register } from './register/register';\nimport Loader from './components/loader';\nimport { useState } from 'react';\nimport Toast from './components/toast';\nimport Patients from './patients-profile/patients';\n\nfunction App() {\n\n  const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n  const [toastVis, setToastVis] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [msgBoxType, setMsgBoxType] = useState(\"success\");\n\n  const ShowToast = (message, messageBoxType) => {\n    setToastMsg(message);\n    setMsgBoxType(messageBoxType);\n    setToastVis(true);\n  }\n\n  return (\n    <>\n      <Loader isVisible={isLoaderVisible} />\n      <Toast\n        toastMessage={toastMsg}\n        msgBoxType={msgBoxType}\n        toastVisibility={toastVis}\n        setToastVisibility={setToastVis}\n      />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Login showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/patients/profile\">\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/new-loader.css'\nimport './assets/css/main.css'\nimport './assets/css/toast.css'\nimport './assets/css/dialog.css'\nimport './assets/css/tab-pages.css'\nimport './assets/200/icofont/icofont.min.css'\nimport './assets/200/boxicons/css/boxicons.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}