{"version":3,"sources":["assets/common/base-url.js","login/OTPLogin.js","login/login.js","register/register.js","components/loader.js","components/toast.js","components/header.js","patients-profile/tab-pages/patient-tab-headers.js","patients-profile/tab-pages/contact.js","patients-profile/tab-pages/personal.js","assets/common/file-to-base64.js","patients-profile/tab-pages/medical.js","patients-profile/tab-pages/lifestyle.js","patients-profile/patients.js","doctors-profile/tab-pages/doctors-tab-headers.js","doctors-profile/tab-pages/personal.js","doctors-profile/tab-pages/contact.js","doctors-profile/tab-pages/portfolio.js","doctors-profile/doctors.js","login/doctors-login.js","admin/dashboard/cards.js","admin/dashboard/cards-values.js","admin/dashboard/cardbox.js","admin/dashboard/doctors-list-item.js","admin/dashboard/doctors.js","admin/dashboard/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["ApiPath","OTPLogin","props","history","useHistory","useState","countdownTimer","setCountdownTimer","input1","setInput1","input2","setInput2","input3","setInput3","input4","setInput4","input5","setInput5","input6","setInput6","useEffect","setInterval","value","displayClasss","showDialog","className","id","onClick","hideDialog","phoneNumber","type","maxLength","onChange","e","target","keyCode","document","getElementById","focus","data","loginId","role","validatedbyotp","options","JSON","stringify","setIsLoaderVisible","fetch","then","response","json","statusCode","showToast","sessionStorage","setItem","token","uidNo","push","message","catch","err","Login","setValue","displayOTP","setDisplayOTP","style","minHeight","src","defaultCountry","placeholder","to","display","Register","name","setName","setRole","phone","setPhone","password","setPassword","verifyPassword","setVerifyPassword","marginTop","marginBottom","autoComplete","statusText","width","Loader","displayClass","isVisible","Toast","visStatus","toastVisibility","toastMessage","setTimeout","setToastVisibility","iconSrc","contentStyle","headerStyle","msgBoxType","borderLeft","color","innerText","alt","Header","PatientTabHeaders","selectedTab","setSelectedTab","Contact","setShowDialog","emailAddress","ContactDialog","displayDialog","rows","Personal","gender","maritalStatus","birthDate","communicationLang","languagePref","deceased","deceasedBoolean","deceasedDateTime","setResetData","PersonalDialog","showDeceased","setShowDeceased","cbxDeceased","setCbxDeceased","fullName","setFullName","cbxGender","setCbxGender","cbxMaritalStatus","setCbxMaritalStatus","txtBirthDate","setTxtBirthDate","txtLanguage","setTxtLanguage","txtDeceasedDate","setTxtDeceasedDate","getItem","error","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","Medical","allergies","managingOrganization","general","bloodGroup","height","weight","bmi","chestExpansion","vision","bp","pulse","oxygenSaturation","MedicalDialog","boxContent","setBoxContent","txtAllergies","setTxtAllergies","txtManagingOrg","setTxtManagingOrg","setBloodGroup","setHeight","setWeight","setVision","setChestExpansion","bloodPressure","setBloodPressure","setPulse","setOxygenSaturation","setBmi","createItems","content","split","map","item","index","trim","onBlur","Lifestyle","LifestyleDialog","txtCurrentMedications","setTxtCurrentMedications","txtPastPrescriptions","setTxtPastPrescriptions","txtDiagnosisReport","setTxtDiagnosisReport","saveImageToBase64","val","fileUpload","querySelector","files","size","toString","accept","window","alert","currentMedications","pastPrescriptions","diagnosisReport","Patients","patientsData","setPatientsData","resetData","idValue","params","res","handleChange","outputText","picture","updatePicture","DoctorsTabHeaders","address","txtPhone","setTxtPhone","txtAddress","setTxtAddress","txtEmail","setTxtEmail","updateContact","Portfolio","specialization","certification","license","issueDate","qualification","PortfolioDialog","txtQualification","setTxtQualification","txtSpecialization","setTxtSpecialization","txtSpecializationType","setTxtSpecializationType","txtLicense","setTxtLicense","txtLicenseIssueDate","setTxtLicenseIssueDate","Doctors","doctorsData","setDoctorsData","photo","setPicture","setOutputText","dropZone","fileInput","addEventListener","preventDefault","dataTransfer","removeEventListener","console","log","length","DoctorsLogin","txtDoctorsID","setTxtDoctorsID","txtPassword","setTxtPassword","Cards","numbers","totalCases","icofontClass","lastUpdatedTime","cardsValues","cases","CardBox","vals","DoctorsListItem","selectedDoctor","rating","status","toLowerCase","fetchUsersData","displayActivate","verification","Dashboard","txtSearch","setTxtSearch","doctorsList","setDoctorsList","setSelectedDoctor","headers","method","fetchDoctors","output","filter","listItems","_id","Math","floor","random","App","isLoaderVisible","toastVis","setToastVis","toastMsg","setToastMsg","setMsgBoxType","ShowToast","messageBoxType","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc2130c1.chunk.js","sourcesContent":["export const ApiPath = \"http://122.176.120.160:4000/\";","import { useState, useEffect } from \"react\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst OTPLogin = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [countdownTimer, setCountdownTimer] = useState(45);\r\n\r\n    const [input1, setInput1] = useState('')\r\n    const [input2, setInput2] = useState('')\r\n    const [input3, setInput3] = useState('')\r\n    const [input4, setInput4] = useState('')\r\n    const [input5, setInput5] = useState('')\r\n    const [input6, setInput6] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (countdownTimer <= 0) {\r\n            setInterval(() => {\r\n                setCountdownTimer(value => (value - 1));\r\n            }, 1000)\r\n        }\r\n\r\n    }, [countdownTimer])\r\n\r\n    const postLogin = () => {\r\n        const OTP = input1 + input2 + input3 + input4 + input5 + input6;\r\n\r\n        //Remember, patient login...\r\n        if (OTP !== \"203040\") {\r\n            //This value will be replaced later from generated value...\r\n            props.showToast(\"Invalid OTP. Check the registered phone number displayed above, or click 'Resend OTP' to resend.\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            loginId: props.phoneNumber,\r\n            role: \"Patient\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response =>  (response.json()))\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200) {\r\n                    props.showToast(\"Login successful!\", 'success');\r\n\r\n                    //Remember to store the bearer token\r\n                    sessionStorage.setItem(\"token\", response.token);\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo);\r\n\r\n                    history.push(\"/patients/profile\")\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    const displayClasss = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayClasss}>\r\n            <div className=\"dialog-container otp\">\r\n                <div className=\"dialog-content\">\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\">Confirm your phone number</h2>\r\n                        <span id=\"close_toast\" onClick={props.hideDialog}>&times;</span>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <h4>To complete your login, please enter the 6-digit OTP sent to\r\n\r\n                        </h4>\r\n                        <h2 className=\"phone-no\">{props.phoneNumber}</h2>\r\n                        <div className=\"input-array\">\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input1\"\r\n                                value={input1}\r\n                                onChange={e => {\r\n                                    setInput1(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input2\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input2\"\r\n                                value={input2}\r\n                                onChange={e => {\r\n                                    setInput2(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input3\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input3\"\r\n                                value={input3}\r\n                                onChange={e => {\r\n                                    setInput3(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input4\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input4\"\r\n                                value={input4}\r\n                                onChange={e => {\r\n                                    setInput4(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input5\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input5\"\r\n                                value={input5}\r\n                                onChange={e => {\r\n                                    setInput5(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input6\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input6\"\r\n                                value={input6}\r\n                                onChange={e => {\r\n                                    setInput6(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input1\").focus();\r\n                                }}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"resend-group\">\r\n                            <div>\r\n                                <p>Didn't receive the OTP?</p>\r\n                                <button>Resend</button>\r\n                            </div>\r\n                            <div>00:{countdownTimer}</div>\r\n                        </div>\r\n\r\n                        <div className=\"otp-call\">\r\n                            <button>Get OTP on call</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button className=\"btn-continue\" onClick={postLogin}>Continue</button>\r\n                        <button className=\"btn-cancel\" onClick={props.hideDialog}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OTPLogin;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport OTPLogin from './OTPLogin';\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [displayOTP, setDisplayOTP] = useState(false);\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            loginId: value,\r\n            role: \"Patient\",\r\n            validatedbyotp: \"false\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode !== 200) {\r\n                    showToast(response.message, 'exclamation');\r\n                } else {\r\n                    //Else, proceed... show the 2fa page...\r\n                    setDisplayOTP(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"./mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Let's get started!</h2>\r\n\r\n                            <h4>Enter your mobile number</h4>\r\n                            <div className=\"phone-input-container\">\r\n                                <input\r\n                                    id=\"value\"\r\n                                    value={value}\r\n                                    onChange={e => setValue(e.target.value)}\r\n                                    defaultCountry='IN'\r\n                                    className=\"login-control\"\r\n                                    placeholder=\"Mobile Number\"\r\n                                    maxLength={14}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Continue</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Returning Doctor? <Link to=\"/doctors/login\">Login here</Link></h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"./doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                displayOTP && <OTPLogin\r\n                    showDialog={displayOTP}\r\n                    phoneNumber={value}\r\n                    hideDialog={() => setDisplayOTP(false)}\r\n                    showToast={showToast}\r\n                    setIsLoaderVisible={setIsLoaderVisible}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\nexport const Register = ({ setIsLoaderVisible, showToast }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const register = () => {\r\n        //Connect to the api after validation...\r\n        if (name === \"\" || role === \"\" || phone === \"\" || password === \"\") {\r\n            showToast(\"Complete all fields to proceed!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        if (password !== verifyPassword) {\r\n            showToast(\"Password and verify password fields must match!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            name: name,\r\n            role: role,\r\n            phoneNumber: phone,\r\n            password: password\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"register\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoaderVisible(false);\r\n                if (response && response.statusText === 200) {\r\n                    showToast(\"Registration successful! Now login with the new credentials...\", 'success');\r\n                    history.push(\"/\");\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-divider\">\r\n                <div className=\"left-sidebar\">\r\n                    <img src=\"./mah-logo.png\" />\r\n\r\n                    <div className=\"left-text\" style={{ marginTop: -5 }}>\r\n                        <h2 style={{ marginBottom: 25 }}>Registration</h2>\r\n\r\n                        {/* Form for details entry... */}\r\n                        <div className=\"form-data\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Name (Firstname and Lastname)</label>\r\n                                    <input\r\n                                        id=\"name\"\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Role</label>\r\n                                    <select\r\n                                        id=\"role\"\r\n                                        value={role}\r\n                                        onChange={e => setRole(e.target.value)}\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Patient\">Patient</option>\r\n                                        <option value=\"Doctor\">Doctor</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        id=\"phone\"\r\n                                        value={phone}\r\n                                        onChange={e => setPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Password</label>\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={e => setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Verify Password</label>\r\n                                    <input\r\n                                        id=\"verifyPasword\"\r\n                                        value={verifyPassword}\r\n                                        onChange={e => setVerifyPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={register}\r\n                            >Register</button>\r\n                        </div>\r\n\r\n                        <div className=\"doctor-register\">\r\n                            <h4>Already a user? <Link to=\"/\">Login here</Link></h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-sidebar\">\r\n                    <img src=\"./access-account.svg\" style={{ width: '50%'}} />\r\n                    <div className=\"image-text\">\r\n                        <p>India's top doctors to guide you to better health everyday...</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","const Loader = ({ isVisible }) => {\r\n\r\n    const displayClass = !isVisible ? \"d-none\" : \"new-loader-bg\";\r\n\r\n    return (\r\n        <div className={displayClass}>\r\n            <div className=\"new-loader-container\">\r\n                <span style={{ '--i': 0 }}></span>\r\n                <span style={{ '--i': 1 }}></span>\r\n                <span style={{ '--i': 2 }}></span>\r\n                <span style={{ '--i': 3 }}></span>\r\n                <span style={{ '--i': 4 }}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nconst Toast = (props) => {\r\n\r\n    const visStatus = (props.toastVisibility) ? \"toast\" : \"toast d-none\";\r\n    const message = props.toastMessage === \"Failed to fetch\" ? \"Failed to retrieve data. Check your internet connection and try again.\" : props.toastMessage;\r\n\r\n    function closeToast() {\r\n        props.setToastVisibility(false)\r\n    }\r\n\r\n    if (props.toastVisibility) {\r\n        setTimeout(() => {\r\n            props.setToastVisibility(false)\r\n        }, 8000)\r\n    }\r\n\r\n    let iconSrc = \"\"\r\n    const contentStyle = {}\r\n    const headerStyle = {}\r\n\r\n    switch (props.msgBoxType) {\r\n        case \"success\":\r\n            iconSrc = \"/success.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--main-green)\"\r\n\r\n            headerStyle.color = \"var(--main-green)\"\r\n            headerStyle.innerText = \"Success\"\r\n\r\n            break;\r\n\r\n        case \"information\":\r\n            iconSrc = \"/info.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--bluish)\";\r\n\r\n            headerStyle.color = \"var(--bluish)\"\r\n            headerStyle.innerText = \"Information\"\r\n\r\n            break;\r\n\r\n        case \"exclamation\":\r\n            iconSrc = \"/warning.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--golden-rod)\";\r\n\r\n            headerStyle.color = \"var(--golden-rod)\"\r\n            headerStyle.innerText = \"Error\"\r\n\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        // This returns the basic\r\n        //Frame setup for the custom message box\r\n        // and based on the above props\r\n        // the state values can be changed\r\n        // depending on the values\r\n        // of the\r\n        // 1. Message\r\n        // 2. Box style (information, exclamation or success)\r\n        // 3. The message box visibility (true or false)\r\n        <div className={visStatus}>\r\n            <div className=\"logo\">\r\n                <img id=\"toastIcon\" src={iconSrc} alt=\"\" />\r\n            </div>\r\n            <div className=\"content\" style={contentStyle}>\r\n                <div className=\"content-header\">\r\n                    <h4 id=\"headerText\" style={headerStyle}>MAH Health Care</h4>\r\n                    <span id=\"close_toast\" onClick={closeToast}>&times;</span>\r\n                </div>\r\n                <p id=\"toast_message\">{(message === \"Unauthenticated user\" || message === \"No user found\") ? \"Access Denied!\" : message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header-bar\">\r\n            <div className=\"header-bar-image\">\r\n                <Link to=\"/\" ><img src=\"/logo.png\" width=\"60\" />MAH Health Care</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","\r\nexport const PatientTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-ui-user\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Medical\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-history\"></i>History\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Contact Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Phone</td>\r\n                            <td>{props.data?.phoneNumber}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Address</td>\r\n                            <td>123 Derie Ans Boulevard, Check Avenue, PA, Porthsmouth, USA</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>E-mail</td>\r\n                            <td>{props.data.emailAddress}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Contact Person</td>\r\n                            <td>Jerry Wiliams<br />\r\n                                Forth Avenue, PA North, PA, USA\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n            />\r\n            </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Address</label>\r\n                            <textarea\r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Contact Person</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Marital Status</td>\r\n                            <td>{props.data?.maritalStatus}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Preferred Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Is Deceased?</td>\r\n                            <td>{props.data?.deceased?.deceasedBoolean || \"No\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Deceased Date</td>\r\n                            <td>{props.data?.deceased?.deceasedDateTime || \"-\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [showDeceased, setShowDeceased] = useState('none');\r\n    const [cbxDeceased, setCbxDeceased] = useState(props.data.deceased?.deceasedBoolean)\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [cbxMaritalStatus, setCbxMaritalStatus] = useState(props.data.maritalStatus)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n    const [txtDeceasedDate, setTxtDeceasedDate] = useState(props.data?.deceased?.deceasedDateTime);\r\n\r\n    useEffect(() => {\r\n        if (cbxDeceased === \"Yes\") {\r\n            setShowDeceased('block')\r\n        } else {\r\n            setShowDeceased('none');\r\n        }\r\n    }, [cbxDeceased])\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n            \"deceased\": {\r\n                deceasedBoolean: cbxDeceased === \"Yes\" ? true : false,\r\n                deceasedDateTime: txtDeceasedDate,\r\n            },\r\n            maritalStatus: cbxMaritalStatus,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Marital Status</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxMaritalStatus\"\r\n                                value={cbxMaritalStatus}\r\n                                onChange={e => setCbxMaritalStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Maried\">Maried</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Do not wish to disclose\">Do not wish to disclose</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Is Deceased?</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxIsDeceased\"\r\n                                value={cbxDeceased}\r\n                                onChange={e => setCbxDeceased(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group' style={{ display: showDeceased }}>\r\n                            <label>Deceased Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtDeceasedDate\"\r\n                                value={txtDeceasedDate}\r\n                                onChange={e => setTxtDeceasedDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// Convert file to base64 string\r\nexport const fileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url'\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64';\r\n\r\nexport const Medical = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical Details</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Allergies</td>\r\n                            <td>{[...props.data.allergies.value]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Managing Organization (Hospital)</td>\r\n                            <td>{props.data.managingOrganization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Blood Group</td>\r\n                            <td>{props.data.general?.bloodGroup}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Height</td>\r\n                            <td>{props.data.general?.height}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Weight</td>\r\n                            <td>{props.data.general?.weight}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BMI</td>\r\n                            <td>{props.data.general?.bmi}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Chest Expansion</td>\r\n                            <td>{props.data.general?.chestExpansion}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Vision</td>\r\n                            <td>{props.data.general?.vision}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BP</td>\r\n                            <td>{props.data.general?.bp}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pulse</td>\r\n                            <td>{props.data.general?.pulse}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Oxygen Saturation</td>\r\n                            <td>{props.data.general?.oxygenSaturation}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <MedicalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalDialog = props => {\r\n\r\n    const [boxContent, setBoxContent] = useState('')\r\n    const [txtAllergies, setTxtAllergies] = useState(props.data.allergies?.value)\r\n    const [txtManagingOrg, setTxtManagingOrg] = useState(props.data.managingOrganization)\r\n\r\n    const [bloodGroup, setBloodGroup] = useState(props.data?.general?.bloodGroup);\r\n    const [height, setHeight] = useState(props.data?.general?.height);\r\n    const [weight, setWeight] = useState(props.data?.general?.weight);\r\n    const [vision, setVision] = useState(props.data?.general?.vision);\r\n    const [chestExpansion, setChestExpansion] = useState(props.data?.general?.chestExpansion);\r\n    const [bloodPressure, setBloodPressure] = useState(props.data?.general?.bp);\r\n    const [pulse, setPulse] = useState(props.data?.general?.pulse);\r\n    const [oxygenSaturation, setOxygenSaturation] = useState(props.data?.general?.oxygenSaturation);\r\n    const [bmi, setBmi] = useState(props.data?.general?.bmi);\r\n\r\n    const createItems = () => {\r\n        /** as the textbox blurs,\r\n         * create a list of\r\n         * emails with special colorizing\r\n         * and close items...\r\n\r\n        After clearing the container, fix the emails...*/\r\n        const allergies = txtAllergies.split(\",\");\r\n\r\n        const content = allergies.map((item, index) => {\r\n            return (\r\n                <span key={index}>{item.trim()}</span>\r\n            )\r\n        })\r\n\r\n        setBoxContent(content || \"Selected Allergies\")\r\n\r\n    }\r\n\r\n    const updateMedicalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            allergies: { value: [txtAllergies] },\r\n            general: {\r\n                \"bloodGroup\": bloodGroup,\r\n                \"height\": height,\r\n                \"weight\": weight,\r\n                \"bmi\": bmi,\r\n                \"chestExpansion\": chestExpansion,\r\n                \"vision\": vision,\r\n                \"bp\": bloodPressure,\r\n                \"pulse\": pulse,\r\n                \"oxygenSaturation\": oxygenSaturation\r\n            },\r\n            managingOrganization: txtManagingOrg\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Medical Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Allergies</label>\r\n                            <input\r\n                                id=\"txtAllergies\"\r\n                                className=\"form-control mb-1\"\r\n                                value={txtAllergies}\r\n                                onChange={e => {\r\n                                    setTxtAllergies(e.target.value)\r\n                                    if (e.keyCode === 13) createItems();\r\n                                }}\r\n                                onBlur={createItems}\r\n                                placeholder='Enter comma-separated values'\r\n                            />\r\n                            <div className=\"emails-box\">{boxContent}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Managing Organization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtManagingOrg\"\r\n                                value={txtManagingOrg}\r\n                                onChange={e => setTxtManagingOrg(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"ABC Healthcare\">ABC Healthcare</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>Blood Group</label>\r\n                            <input\r\n                                id=\"bloodGroup\"\r\n                                className=\"form-control\"\r\n                                value={bloodGroup}\r\n                                onChange={e => setBloodGroup(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Height</label>\r\n                            <input\r\n                                id=\"height\"\r\n                                className=\"form-control\"\r\n                                value={height}\r\n                                onChange={e => setHeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Weight</label>\r\n                            <input\r\n                                id=\"weight\"\r\n                                className=\"form-control\"\r\n                                value={weight}\r\n                                onChange={e => setWeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BMI</label>\r\n                            <input\r\n                                id=\"bmi\"\r\n                                className=\"form-control\"\r\n                                value={bmi}\r\n                                onChange={e => setBmi(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Chest Expansion</label>\r\n                            <input\r\n                                id=\"chestExpansion\"\r\n                                className=\"form-control\"\r\n                                value={chestExpansion}\r\n                                onChange={e => setChestExpansion(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Vision</label>\r\n                            <input\r\n                                id=\"vision\"\r\n                                className=\"form-control\"\r\n                                value={vision}\r\n                                onChange={e => setVision(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BP</label>\r\n                            <input\r\n                                id=\"bloodPressure\"\r\n                                className=\"form-control\"\r\n                                value={bloodPressure}\r\n                                onChange={e => setBloodPressure(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Pulse</label>\r\n                            <input\r\n                                id=\"pulse\"\r\n                                className=\"form-control\"\r\n                                value={pulse}\r\n                                onChange={e => setPulse(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Oxygen Saturation</label>\r\n                            <input\r\n                                id=\"oxygenSaturation\"\r\n                                className=\"form-control\"\r\n                                value={oxygenSaturation}\r\n                                onChange={e => setOxygenSaturation(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Lifestyle = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical History</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Current Medication</td>\r\n                            <td>[File...]</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Past prescriptions</td>\r\n                            <td>[File...]</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Diagnosis Report</td>\r\n                            <td>[File...]</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <LifestyleDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LifestyleDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState('')\r\n    const [txtPastPrescriptions, setTxtPastPrescriptions] = useState('')\r\n    const [txtDiagnosisReport, setTxtDiagnosisReport] = useState('')\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            currentMedications: [txtCurrentMedications],\r\n            pastPrescriptions: [txtPastPrescriptions],\r\n            diagnosisReport: [txtDiagnosisReport],\r\n\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = (val) => {\r\n\r\n        let fileUpload;\r\n\r\n        if (val === \"curr\") {\r\n            fileUpload = document.querySelector(\"#txtCurrentMedications\")\r\n        } else if (val === \"pp\") {\r\n            fileUpload = document.querySelector(\"#txtPastPrescriptions\")\r\n        } else {\r\n            fileUpload = document.querySelector(\"#txtDiagnosisReport\")\r\n        }\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    switch (val) {\r\n                        case \"curr\":\r\n                            setTxtCurrentMedications(response.toString());\r\n                            break;\r\n                        case \"pp\":\r\n                            setTxtPastPrescriptions(response.toString());\r\n                            break;\r\n                        default:\r\n                            setTxtDiagnosisReport(response.toString());\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Current Medications</label>\r\n                            <input\r\n                                id=\"txtCurrentMedications\"\r\n                                onChange={() => saveImageToBase64(\"curr\")}\r\n                                className=\"form-control\"\r\n                                accept=\"image/*, .pdf, .doc, .docx\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"input-group\" style={{ marginTop: 40 }}>\r\n                            <button\r\n                                id=\"btnCurrentMedication\"\r\n                                className=\"btn-main\"\r\n                                onClick={() => window.alert(\"Displays a preview of the saved document. To be conpleted later...\")}>\r\n                                Preview Saved...\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Past Prescriptions</label>\r\n                            <input\r\n                                id=\"txtPastPrescriptions\"\r\n                                onChange={() => saveImageToBase64(\"pp\")}\r\n                                className=\"form-control\"\r\n                                accept=\"image/*, .pdf, .doc, .docx\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"input-group\" style={{ marginTop: 40 }}>\r\n                            <button\r\n                                id=\"btnPastPrescriptions\"\r\n                                className=\"btn-main\"\r\n                                onClick={() => window.alert(\"Displays a preview of the saved document. To be conpleted later...\")}>\r\n                                Preview Saved...\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Diagnosis Report</label>\r\n                            <input\r\n                                id=\"txtDiagnosisReport\"\r\n                                onChange={() => saveImageToBase64(\"diag\")}\r\n                                className=\"form-control\"\r\n                                accept=\"image/*, .pdf, .doc, .docx\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"input-group\" style={{ marginTop: 40 }}>\r\n                            <button\r\n                                id=\"btnPastPrescriptions\"\r\n                                className=\"btn-main\"\r\n                                onClick={() => window.alert(\"Displays a preview of the saved document. To be conpleted later...\")}>\r\n                                Preview Saved...\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../components/header\";\r\nimport { PatientTabHeaders } from \"./tab-pages/patient-tab-headers\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Contact } from \"./tab-pages/contact\";\r\nimport { Personal } from \"./tab-pages/personal\"\r\nimport { Medical } from \"./tab-pages/medical\";\r\nimport { Lifestyle } from \"./tab-pages/lifestyle\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\n\r\nconst Patients = (props) => {\r\n\r\n    const [patientsData, setPatientsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (resetData) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setPatientsData(res.data);\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }\r\n\r\n    }, [resetData])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img src=\"/portfolio/team-1.jpg\" width='100%' height='100%' />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Patient</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{patientsData.name}</h2>\r\n                        <h4><i className=\"icofont-location-pin\"></i> San Diego, USA</h4>\r\n                    </div>\r\n                    <h3>Product Designer</h3>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Upcoming Appointment</h4>\r\n                        </div>\r\n                        <div className=\"appointment\">\r\n                            <div className=\"details\">\r\n                                <h2>Dr. Andrews Collins</h2>\r\n                                <h3>Available</h3>\r\n                                <h4><i className=\"icofont-location-pin\" /> Santa Monica, SM, USA</h4>\r\n                            </div>\r\n                            <img src=\"/portfolio/team-3.jpg\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PatientTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Medical\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 4 && <Lifestyle\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;","\r\nexport const DoctorsTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-karate\"></i>Portfolio\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{props.data.address}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailAddress}</td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [txtAddress, setTxtAddress] = useState(props.data.address ? [...props.data.address] : \"\");\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailAddress);\r\n\r\n    const updateContact = () => {\r\n        const data = {\r\n            address: [txtAddress],\r\n            emailAddress: txtEmail,\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Address</label>\r\n                            <textarea\r\n                                id=\"txtAddress\"\r\n                                value={txtAddress}\r\n                                onChange={e => setTxtAddress(e.target.value)}\r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={() => updateContact()}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Portfolio = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const specialization = props.data.specialization.certification\r\n        ? `${props.data?.specialization?.certification}, ${props.data?.specialization?.type}`\r\n        : \"\";\r\n\r\n    const license = props.data.license.certification\r\n        ? `${props.data?.license?.certification} - ${props.data?.license?.issueDate}`\r\n        : \"\";\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Qualifications and Specializations</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Qualification</td>\r\n                            <td>{props.data?.qualification && [...props.data?.qualification]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Specialization</td>\r\n                            <td>{specialization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>License</td>\r\n                            <td>{license}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <PortfolioDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PortfolioDialog = props => {\r\n    const [txtQualification, setTxtQualification] = useState(props.data.qualification ? [...props.data?.qualification] : '')\r\n    const [txtSpecialization, setTxtSpecialization] = useState(props.data?.specialization?.certification)\r\n    const [txtSpecializationType, setTxtSpecializationType] = useState(props.data?.specialization?.type)\r\n    const [txtLicense, setTxtLicense] = useState(props.data?.license?.certification)\r\n    const [txtLicenseIssueDate, setTxtLicenseIssueDate] = useState(props.data?.license?.issueDate)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            qualification: [txtQualification],\r\n            license: {\r\n                certification: txtLicense,\r\n                issueDate: txtLicenseIssueDate\r\n            },\r\n            specialization: {\r\n                certification: txtSpecialization,\r\n                type: txtSpecializationType\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Portfolio</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Qualification</label>\r\n                            <textarea\r\n                                id=\"txtQualification\"\r\n                                value={txtQualification}\r\n                                onChange={e => setTxtQualification(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <textarea\r\n                                id=\"txtSpecialization\"\r\n                                value={txtSpecialization}\r\n                                onChange={e => setTxtSpecialization(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Specialization - Type</label>\r\n                            <input\r\n                                id=\"txtSpecializationType\"\r\n                                value={txtSpecializationType}\r\n                                onChange={e => setTxtSpecializationType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>License</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"txtLicense\"\r\n                                value={txtLicense}\r\n                                onChange={e => setTxtLicense(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Issue Date</label>\r\n                            <input\r\n                                id=\"txtLicenseIssueDate\"\r\n                                value={txtLicenseIssueDate}\r\n                                onChange={e => setTxtLicenseIssueDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../components/header\";\r\nimport { DoctorsTabHeaders } from \"./tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport { Portfolio } from \"./tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [picture, setPicture] = useState(doctorsData.photo);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (resetData) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }\r\n\r\n    }, [resetData])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo === \"\" ? \"/portfolio/team-4.jpg\" : picture}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Doctor</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{doctorsData.name}</h2>\r\n                        <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4>\r\n                    </div>\r\n                    <h3>{doctorsData.specialization?.certification}</h3>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\n\r\nexport const DoctorsLogin = props => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [txtDoctorsID, setTxtDoctorsID] = useState(\"\");\r\n    const [txtPhone, setTxtPhone] = useState(\"\");\r\n    const [txtPassword, setTxtPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            loginId: txtPhone,\r\n            role: \"Doctor\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200 && response.uidNo === txtDoctorsID) {\r\n                    //Proceed to the doctors page...\r\n                    sessionStorage.setItem('token', response.token)\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo)\r\n                    history.push(\"/doctors/profile\");\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"../mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Doctors' Login!</h2>\r\n\r\n                            <h4>Enter your details</h4>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtDoctorsID\"\r\n                                        value={txtDoctorsID}\r\n                                        onChange={e => setTxtDoctorsID(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                        placeholder='Doctor ID'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtPhone\"\r\n                                        value={txtPhone}\r\n                                        onChange={e => setTxtPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                        placeholder='Registered Phone Number'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtPassword\"\r\n                                        value={txtPassword}\r\n                                        onChange={e => setTxtPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        placeholder='Password'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Login</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"../doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","export const Cards = (props) => {\r\n    return (\r\n        <div className=\"s-card\">\r\n            <div>\r\n                <div className=\"numbers\">{props.numbers}</div>\r\n                <div className=\"cardName\">{props.totalCases}</div>\r\n            </div>\r\n            <div className=\"iconBox\">\r\n                <i className={props.icofontClass} aria-hidden=\"true\"></i>\r\n                <span>{props.lastUpdatedTime}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const cardsValues = [\r\n    {\r\n      id: 1,\r\n      numbers: 364,\r\n      cases: \"Total Cases\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-medicine\",\r\n    },\r\n    {\r\n      id: 2,\r\n      numbers: 241,\r\n      cases: \"Patients\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-patient-file\",\r\n    },\r\n    {\r\n      id: 3,\r\n      numbers: 82,\r\n      cases: \"Doctors\",\r\n      lastUpdatedTime: \"7 hours ago\",\r\n      icofontClass: \"icofont-doctor\",\r\n    },\r\n    {\r\n      id: 4,\r\n      numbers: 43,\r\n      cases: \"Schedules\",\r\n      lastUpdatedTime: \"12 hours ago\",\r\n      icofontClass: \"icofont-delivery-time\",\r\n    },\r\n  ];\r\n\r\n  export default cardsValues;\r\n","import { Cards } from './cards'\r\nimport cardsValues from './cards-values'\r\n\r\nexport const CardBox = () => {\r\n    const vals = cardsValues.map(item => {\r\n        return (<Cards\r\n            key={item.id}\r\n            numbers={item.numbers}\r\n            totalCases={item.cases}\r\n            lastUpdatedTime={item.lastUpdatedTime}\r\n            icofontClass={item.icofontClass}\r\n        />)\r\n    })\r\n\r\n    return (\r\n        \r\n        <div className=\"cardBox\">\r\n            {vals}\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const DoctorsListItem = props => {\r\n    return (\r\n        <div\r\n            className={props.selectedDoctor === props.id ? \"d-list-item active\" : \"d-list-item\"}\r\n            onClick={() => props.setItem(props.id)}\r\n        >\r\n            <div className=\"image-part\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                <p><span>♥</span>{props.rating}</p>\r\n            </div>\r\n            <div className=\"name-part\">\r\n                <h3>{props.name}</h3>\r\n                <h4>{props.specialization}</h4>\r\n                <span className={props.status?.toLowerCase()}>\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { DoctorsTabHeaders } from \"../../doctors-profile/tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../../assets/common/base-url\";\r\nimport { Portfolio } from \"../../doctors-profile/tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = props.selectedDoctor;\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/search/\" + idValue, params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n        //Always remember to reset the data...\r\n        setResetData(false);\r\n\r\n    }\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n\r\n    }, [resetData, props.selectedDoctor])\r\n\r\n    const activateProfile = () => {\r\n        //Simply make the verification status of the particular individual Active...\r\n        const data = {\r\n            verification: {\r\n                status: \"Active\",\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n    const displayActivate = doctorsData.verification?.status !== \"Pending\" ? \"d-none\" : \"btn-main\";\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"dash-body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo || \"/portfolio/avatar.png\"}\r\n                            alt=\"\"\r\n                        />\r\n                        <div className=\"title\">\r\n                            <h2>{doctorsData.name}</h2>\r\n                            {/* <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4> */}\r\n                        </div>\r\n                        <h3>{doctorsData.specialization?.certification}</h3>\r\n                        <button\r\n                            id=\"btnActivate\"\r\n                            className={displayActivate}\r\n                            onClick={activateProfile}\r\n                        >\r\n                            Activate Profile\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { Header } from \"../../components/header\";\r\nimport { CardBox } from './cardbox';\r\nimport { DoctorsListItem } from './doctors-list-item';\r\nimport Doctors from './doctors'\r\n\r\nconst Dashboard = props => {\r\n\r\n    const [txtSearch, setTxtSearch] = useState(\"\");\r\n    const [doctorsList, setDoctorsList] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n\r\n    const fetchDoctors = () => {\r\n        const params = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            method: 'GET'\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsList(res.data);\r\n                    setSelectedDoctor(res.data[0]?.id)\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Load a doctors' list immediately the form loads...\r\n        fetchDoctors();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const output = doctorsList.filter(item => item.name === txtSearch)\r\n        if (txtSearch !== \"\") {\r\n            setDoctorsList(output)\r\n        } else if (txtSearch === \"\") {\r\n            setDoctorsList(doctorsList);\r\n        }\r\n\r\n        setSelectedDoctor(doctorsList[0]?.id)\r\n\r\n    }, [txtSearch])\r\n\r\n    const listItems = doctorsList.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                id={item._id}\r\n                name={item.name}\r\n                src={item.photo}\r\n                rating={`4.${Math.floor(Math.random() * 9)}`}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                key={index}\r\n                setItem={value => setSelectedDoctor(value)}\r\n                selectedDoctor={selectedDoctor}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='main'>\r\n                <CardBox />\r\n                <div className='main-content'>\r\n                    <div className=\"left-main mt-2\">\r\n                        <div className=\"input-group d-none\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtSearch\"\r\n                                type=\"text\"\r\n                                value={txtSearch}\r\n                                onChange={e => setTxtSearch(e.target.value)}\r\n                                placeholder='Search for Doctor'\r\n\r\n                            />\r\n                            <i className=\"icofont-search\"></i>\r\n                        </div>\r\n                        <div className='doctors-list'>\r\n                            {listItems}\r\n                        </div>\r\n                    </div>\r\n                    <div className='right-main'>\r\n                        {selectedDoctor && <Doctors\r\n                            setIsLoaderVisible={props.setIsLoaderVisible}\r\n                            showToast={props.showToast}\r\n                            selectedDoctor={selectedDoctor}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { Login } from './login/login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Register } from './register/register';\nimport Loader from './components/loader';\nimport { useState } from 'react';\nimport Toast from './components/toast';\nimport Patients from './patients-profile/patients';\nimport Doctors from './doctors-profile/doctors';\nimport { DoctorsLogin } from './login/doctors-login';\nimport Dashboard from './admin/dashboard/dashboard';\n\nfunction App() {\n\n  const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n  const [toastVis, setToastVis] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [msgBoxType, setMsgBoxType] = useState(\"success\");\n\n  const ShowToast = (message, messageBoxType) => {\n    setToastMsg(message);\n    setMsgBoxType(messageBoxType);\n    setToastVis(true);\n  }\n\n  return (\n    <>\n      <Loader isVisible={isLoaderVisible} />\n      <Toast\n        toastMessage={toastMsg}\n        msgBoxType={msgBoxType}\n        toastVisibility={toastVis}\n        setToastVisibility={setToastVis}\n      />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Login showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/patients/profile\">\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/profile\">\n            <Doctors showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/login\">\n            <DoctorsLogin showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/admin/dashboard\">\n            <Dashboard showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/dashboard.css'\nimport './assets/css/new-loader.css'\nimport './assets/css/main.css'\nimport './assets/css/toast.css'\nimport './assets/css/dialog.css'\nimport './assets/css/tab-pages.css'\nimport './assets/200/icofont/icofont.min.css'\nimport './assets/200/boxicons/css/boxicons.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}