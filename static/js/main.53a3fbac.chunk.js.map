{"version":3,"sources":["../../lib/@meet/web-sdk/lib/init.js","assets/common/base-url.js","login/OTPLogin.js","login/login-headers.js","login/login.js","register/register.js","components/loader.js","components/toast.js","components/nav-bar.js","patients-profile/tab-pages/patient-tab-headers.js","assets/common/countries.js","patients-profile/tab-pages/contact.js","assets/common/operations.js","patients-profile/tab-pages/personal.js","patients-profile/tab-pages/medical.js","patients-profile/tab-pages/lifestyle.js","patients-profile/tab-pages/others.js","assets/common/file-to-base64.js","components/file-input.js","dhp/others/medical-history-dialog.js","components/image-dialog.js","components/medication-row-item.js","dhp/others/sugeries-dialog.js","dhp/medical-records/surgeries.js","dhp/medical-records/injuries.js","dhp/others/diseases-dialog.js","dhp/medical-records/chronic-diseases.js","dhp/medical-records/past-prescriptions.js","dhp/medical-records/diagnosis-report.js","patients-profile/patients.js","components/header.js","doctors-profile/tab-pages/doctors-tab-headers.js","doctors-profile/tab-pages/personal.js","doctors-profile/tab-pages/contact.js","doctors-profile/tab-pages/portfolio.js","doctors-profile/doctors.js","login/doctors-login.js","admin/dashboard/cards.js","admin/dashboard/cards-values.js","admin/dashboard/cardbox.js","admin/dashboard/doctors-list-item.js","admin/dashboard/doctors.js","admin/dashboard/dashboard.js","../../lib/@meet/web-sdk/lib/constants/index.js","../../lib/@meet/web-sdk/lib/utils/index.js","../../lib/@meet/web-sdk/lib/components/MeetSpinner.js","../../lib/@meet/web-sdk/lib/components/Meet.js","meeting/meeting-tab-headers.js","meeting/meeting-tabs/complaints.js","meeting/meeting-tabs/next-consult.js","meeting/meeting-tabs/prescriptions.js","meeting/meeting-tabs/suggested-lifestyle.js","meeting/meeting-tabs/tests-and-labs.js","meeting/meeting-dialog.js","meeting/meeting.js","assets/common/constants.js","hooks/useCheckAppointmentBooked.js","components/dhp-header.js","appointments/doctors-dialog.js","assets/common/split-date.js","appointments/schedule-appointment.js","dhp/side-tab-pages/appointments.js","dhp/medical-records/medical-records-tab-headers.js","dhp/medical-records/prescriptions.js","dhp/side-tab-pages/medical-records.js","dhp/others/side-bar-item.js","dhp/others/side-bar-list.js","dhp/side-tab-pages/medical-insurance.js","dhp/side-tab-pages/genetic-information.js","dhp/side-tab-pages/vaccination-reports.js","dhp/others/health-profile-bar.js","dhp/digital-health-passport.js","page-404.js","components/country-select.js","doctors/dialogs/add-qualification-dialog.js","doctors/lists-objects/qualifications-item.js","doctors/profile-update.js","doctors/profile-update-successful.js","doctors/profile-pages/profile-page.js","doctors/components/profile-header.js","doctors/components/profile-right-sidebar.js","components/Calendar/calendar-header.js","components/Calendar/day.js","components/Calendar/calendar-picker.js","components/Calendar/useEventsAndNav.js","components/Calendar/useDate.js","doctors/lists-objects/appointment-box.js","doctors/dialogs/appointment-dialog.js","doctors/components/scheduled-appointment-dialog-tab-headers.js","doctors/tab-pages/medications.js","doctors/tab-pages/notes.js","doctors/dialogs/scheduled-appointments-dialog.js","doctors/components/profile-sidebar.js","doctors/components/profile-sub-header.js","doctors/profile-pages/appointment-setup.js","doctors/dialogs/slots-dialog.js","doctors/profile-pages/availability-setup.js","doctors/profile-pages/charge-sheet.js","doctors/doctors-profile.js","test.js","App.js","reportWebVitals.js","index.js"],"names":["scriptPromise","ApiPath","CryptoApiPath","OTPLogin","props","history","useHistory","useState","countdownTimer","setCountdownTimer","input1","setInput1","input2","setInput2","input3","setInput3","input4","setInput4","input5","setInput5","input6","setInput6","useEffect","setInterval","value","postLogin","a","OTP","data","loginId","phoneNumber","role","sender","otp","options","setIsLoaderVisible","fetch","JSON","stringify","then","res","json","statusCode","showToast","sessionStorage","setItem","token","uidNo","push","message","catch","err","error","displayClasss","showDialog","className","id","onClick","hideDialog","type","maxLength","onChange","e","target","keyCode","document","getElementById","focus","LoginHeaders","style","selectedTab","setSelectedTab","Login","setValue","displayOTP","setDisplayOTP","txtPassportID","setTxtPassportID","txtPassword","setTxtPassword","src","marginBottom","placeholder","phone","paddingTop","paddingBottom","to","password","response","display","Register","name","setName","email","setEmail","setRole","setPhone","setPassword","verifyPassword","setVerifyPassword","autoComplete","val","emailId","substring","minHeight","width","Loader","displayClass","isVisible","Toast","visStatus","toastVisibility","toastMessage","setTimeout","setToastVisibility","iconSrc","contentStyle","headerStyle","msgBoxType","borderLeft","color","innerText","alt","NavBar","myLocation","setMyLocation","signOut","localStorage","showPosition","position","locLat","coords","latitude","locLong","longitude","console","log","parseFloat","toFixed","cities","lat","lng","currentLocationObject","filter","item","length","navigator","geolocation","getCurrentPosition","x","innerHTML","activeLink","country","photo","PatientTabHeaders","countriesList","code","countries","label","suggested","Contact","setShowDialog","address","houseNumber","street","city","state","district","postalCode","showPhone","contactPerson","contactDetails","relationship","setResetData","setPatientsData","ContactDialog","addressData","txtPhone","setTxtPhone","addressType","setAddressType","txtHouseNo","setTxtHouseNo","txtStreet","setTxtStreet","txtCity","setTxtCity","txtDistrict","setTxtDistrict","txtState","setTxtState","txtPostalCode","setTxtPostalCode","txtCountry","setTxtCountry","txtEmail","setTxtEmail","txtContactPerson","setTxtContactPerson","txtRelationship","setTxtRelationship","contact","txtContactPhone","setTxtContactPhone","displayDialog","countryList","map","index","rows","getItem","shortDateString","dateValue","fullDate","Date","getDate","monthToShortString","getMonth","getFullYear","intMonthVal","retMonth","Personal","gender","maritalStatus","birthDate","communicationLang","languagePref","deceased","deceasedBoolean","deceasedDateTime","PersonalDialog","showDeceased","setShowDeceased","cbxDeceased","setCbxDeceased","fullName","setFullName","cbxGender","setCbxGender","cbxMaritalStatus","setCbxMaritalStatus","txtBirthDate","setTxtBirthDate","txtLanguage","setTxtLanguage","txtDeceasedDate","setTxtDeceasedDate","Medical","Object","keys","allergies","join","managingOrganization","general","bloodGroup","height","weight","bmi","chestExpansion","vision","bp","pulse","oxygenSaturation","MedicalDialog","txtAllergies","setTxtAllergies","chkAllergies","setChkAllergies","txtManagingOrg","setTxtManagingOrg","setBloodGroup","setHeight","setWeight","setVision","setChestExpansion","bloodPressure","setBloodPressure","setPulse","setOxygenSaturation","setBmi","selectedAllergies","setSelectedAllergies","allergiesList","allergiesMap","parseInt","toString","handleBlur","minValue","maxValue","inputValue","itemElt","classList","add","splitValue","split","selItem","indexOf","splice","float","remove","onBlur","disabled","Lifestyle","lifeStyle","smokingHabbit","alcoholConsumption","activityLevel","foodPreference","LifestyleDialog","txtSmokingHabits","setTxtSmokingHabits","txtAlcohol","setTxtAlcohol","txtActivityLevel","setTxtActivityLevel","txtFoodPreference","setTxtFoodPreference","txtAnyMedicationTaken","setTxtAnyMedicationTaken","txtRelapse","setTxtRelapse","txtWhenQuit","setTxtWhenQuit","Others","cbxDate","setCbxDate","chkNotSure","setChkNotSure","wasHospitalized","setWasHospitalized","cbxDateFrom","setCbxDateFrom","cbxDateTo","setCbxDateTo","hasFamilyMedicalHistory","setHasFamilyMedicalHistory","cbxDateOfMedicalHistory","setCbxDateOfMedicalHistory","chkNotSureMedicalHistory","setChkNotSureMedicalHistory","othersData","others","upperBound","answer","splitDate","trim","checked","questions","obj","question","obj2","obj3","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","FileInput","tempPix","setTempPix","outputText","setOutputText","dropZone","querySelector","fileInput","addEventListener","preventDefault","files","dataTransfer","setPicture","removeEventListener","bgColor","background","accept","acceptFileTypes","setFileOutput","MedicalHistoryDialog","txtCurrentMedications","setTxtCurrentMedications","txtAddMedication","setTxtAddMedication","cbxIsOnMedications","setCbxIsOnMedications","txtMedicationDescription","setTxtMedicationDescription","txtDate","setTxtDate","txtDoctor","setTxtDoctor","title","border","borderRadius","padding","transform","questionString","updateField","description","records","timeStamp","doctorName","ImageDialog","imageContainerDisplay","embedContainer","imageSource","imageExtension","dialogClass","setImageDisplay","hideImageDialog","MedicationRowItem","rowItem","nameField","showImageDialog","SurgeriesDialog","inputArray","Surgeries","surgeries","medicationsArray","setMedicationsArray","dialogVisible","setDialogVisible","medicationsExist","setMedicationsExist","imageLink","setImageLink","imageDialogVisible","setImageDialogVisible","imgLink","currentMeds","fontSize","medicalData","parse","Injuries","injuries","DiseasesDialog","illness","ChronicDiseases","chronicDiseases","PastPrescriptions","pastPrescriptions","prescriptionsArray","setPrescriptionsArray","prescriptionsExist","setPrescriptionsExist","DiagnosisReport","diagnosisReport","Patients","patientsData","picture","Header","outline","cursor","fontFamily","marginRight","DoctorsTabHeaders","emailAddress","txtAddress","setTxtAddress","updateContact","Portfolio","specialization","certification","license","issueDate","qualification","PortfolioDialog","txtQualification","setTxtQualification","txtSpecialization","setTxtSpecialization","txtSpecializationType","setTxtSpecializationType","txtLicense","setTxtLicense","txtLicenseIssueDate","setTxtLicenseIssueDate","Doctors","doctorsData","setDoctorsData","resetData","idValue","params","DoctorsLogin","Cards","numbers","totalCases","icofontClass","lastUpdatedTime","cardsValues","cases","CardBox","vals","DoctorsListItem","selectedDoctor","rating","status","toLowerCase","fetchUsersData","displayActivate","verification","Dashboard","txtSearch","setTxtSearch","doctorsList","setDoctorsList","setSelectedDoctor","headers","method","fetchDoctors","listItems","Math","floor","random","DEFAULT_DOMAIN","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","apply","fetchExternalApi","domain","window","JitsiMeetExternalAPI","script","createElement","async","Error","head","appendChild","instancesCounter","meetspinner","_jsx","_Fragment","children","textAlign","fontWeight","class","Meet","roomName","subject","interfaceConfigOverwrite","jwt","invitees","devices","userInfo","onApiReady","componentId","setComponentId","loading","setLoading","apiLoaded","setApiLoaded","externalApi","useRef","apiRef","meetingRef","Spinner","configOverwrite","getIFrameRef","iframeRef","api","current","loadIFrame","useCallback","parentNode","renderLoadingSpinner","_jsxs","ref","MeetingTabHeaders","Complaints","cbxComplaints","setCbxComplaints","Remarks","txtRemarks","setTxtRemarks","Observations","txtObservations","setTxtObservations","SelectedSymptoms","selectedSymptoms","setSelectedSymptoms","symptoms","symptomsObj","setComplaints","setObs","NextConsult","Revisit","cbxRevisit","setCbxRevisit","RevisitDate","cbxRevisitDate","setCbxRevisitDate","Description","txtDescription","setTxtDescription","setRevisitData","Prescriptions","Name","cbxName","setCbxName","cbxFormulation","setCbxFormulation","cbxUnits","setCbxUnits","cbxDosage","setCbxDosage","cbxFrequency","setCbxFrequency","cbxDuration","setCbxDuration","cbxHowToTake","setCbxHowToTake","marginTop","opacity","SuggestedLifestyle","SmokingHabits","Alcohol","ActivityLevel","FoodPreference","Physiotherapy","txtPhysiotherapy","setTxtPhysiotherapy","FoodsToAvoid","txtFoodsToAvoid","setTxtFoodsToAvoid","selectedPhysio","setSelectedPhysio","selectedFoodsToAvoid","setSelectedFoodsToAvoid","setPhysiotherapy","setFoodsToAvoid","setRecommendedFoods","TestsAndLabs","Tests","cbxTests","setCbxTests","SelectedTests","selectedTests","setSelectedTests","tests","testsObj","setRecommendedTests","MeetingDialog","patientData","age","setAge","complaints","physiotherapy","foodsToAvoid","recommendedFoods","recommendedTests","revisitData","obs","dateDiff","minWidth","doctorId","alert","updateData","foodToAvoid","recommendedFood","revisit","observations","medicinesPrescribed","updatePrescriptions","Meeting","setToken","setTxtPastPrescription","meetingData","setMeetingData","patientId","setPatientId","setDoctorId","fetchToken","searchString","location","search","urlParams","URLSearchParams","meetingId","get","gravatar","past_prescription","statusText","handleClose","suspendDetected","eApi","apiObj","addEventListeners","readyToClose","displayName","constants","getOptions","postOptions","putOptions","useCheckAppointmentBooked","setAppointmentBooked","appointmentBooked","setError","isLoading","setIsLoading","pastAppointments","setPastAppointments","timeValueOfToday","getTime","timeValueOf3MonthsTime","patient_id","DHPHeader","DoctorsDialog","today","cbxSpeciality","setCbxSpeciality","spanValue","setSpanValue","timeOfCommencement","setTimeOfCommencement","doctorsArray","thisDoctor","find","setSpecialObject","speciality","startTime","duration","meetingID","meeting_id","doctor_id","doctor_name","setDoctorSelected","hideDoctorsDialog","selDoctor","setSelDoctor","randomValue","formatDate","SplitDateFromTimestamp","longDate","waDate","getHours","getMinutes","getSeconds","ScheduleAppointment","doctorSelected","showDoctorDialog","setShowDoctorDialog","txtPatientsInstruction","setTxtPatientsInstruction","txtSupportingInfo","setTxtSupportingInfo","fileConsent","setFileConsent","specialObject","alignItems","justifyContent","dateTime","borderBottom","payLoad","hideAppointmentDialog","Appointments","showAppointmentDialog","setShowAppointmentDialog","appTime","setAppTime","dateToString","setDateToString","remainingTime","apptTime","starttime","toDateString","diff","noPastAppointments","showPastAppointments","meetinng_id","MedicalRecordsTabHeaders","MedicalRecords","SideBarItem","headerText","contentText","selectedIndex","setSelectedIndex","isActive","sideBarList","MedicalInsurance","GeneticInformation","VaccinationReports","HealthProfileBar","percentage","setPercentage","checkCircleSector","progressStatus","pix","lifeStyle1","lifeStyle2","lifeStyle3","lifeStyle4","phoneNo","currentMedications","DigitalHealthPassport","sideBarItems","Page404","goBack","CountrySelect","Autocomplete","sx","autoHighlight","getOptionLabel","option","renderOption","opts","Box","component","mr","flexShrink","srcSet","renderInput","TextField","inputProps","AddQualificationDialog","qualifications","count","dataIndex","txtCode","setTxtCode","txtDocument","setTxtDocument","txtStartDate","setTxtStartDate","txtEndDate","setTxtEndDate","txtIssuer","setTxtIssuer","qualificationsList","setQualificationsList","QualificationsItem","issuer","setImageURL","setEditIndex","itemIndex","showQualDialog","dataList","period","start","end","DoctorsProfileUpdate","profilePicture","setProfilePicture","txtContactAddress","setTxtContactAddress","txtContactCity","setTxtContactCity","txtContactState","setTxtContactState","txtContactCountry","setTxtContactCountry","txtClinicAddress","setTxtClinicAddress","txtClinicCity","setTxtClinicCity","txtClinicState","setTxtClinicState","txtClinicCountry","setTxtClinicCountry","chkProfileConsent","setChkProfileConsent","cbxSpecialization","setCbxSpecialization","practiceDoc","setPracticeDoc","specializationDoc","setSpecializationDoc","txtIssueDate","setTxtIssueDate","txtExpiryDate","setTxtExpiryDate","txtIssuingAuthority","setTxtIssuingAuthority","txtIcePhone","setTxtIcePhone","txtAvailableFrom","setTxtAvailableFrom","txtAvailableTo","setTxtAvailableTo","proofOfClinicDocument","setProofOfClinicDocument","txtProofFrom","setTxtProofFrom","txtProofTo","setTxtProofTo","selfOwned","setSelfOwned","chkAgree","setChkAgree","txtClinicOwner","setTxtClinicOwner","txtClinicPhone","setTxtClinicPhone","txtClinicEmail","setTxtClinicEmail","imageURL","editQualificationIndex","setEditQualificationIndex","showQualificationDialog","setShowQualificationDialog","specializationOptions","fullname","setFullname","tempData","rentedClass","required","href","ice","proofOfClinic","ProfileUpdateSuccessful","ProfilePage","DoctorsProfileHeader","DoctorsProfileRightSidebar","RightSideBarSpecialistDoctors","CalendarHeader","onNext","onBack","dateDisplay","Day","day","isCurrentDay","event","eventTitle","CalendarPicker","nav","setNav","events","setEvents","dt","setMonth","month","year","firstDayOfMonth","daysInMonth","endTime","useEventsAndNav","setDateDisplay","days","setDays","eventForDate","date","dateInMilliseconds","dateEndInMilliseconds","dateString","toLocaleDateString","weekday","paddingDays","daysArr","i","mnt","dayString","useDate","input","setSelectedEventDate","AppointmentBox","patient","time","AppointmentDialog","apptDetails","ScheduledAppointmentDialogTabHeaders","Medications","Notes","setInput","txtInput","setTxtInput","ScheduledAppointmentDialog","txtNotes","setTxtNotes","selectedEventDate","DoctorsProfileSideBar","appointments","menuActive","setApptDetails","showScheduledAppointmentDialog","setShowScheduledAppointmentDialog","appointmentBoxes","sideBarClass","selectedMenu","setSelectedMenu","DoctorsProfileSubHeader","setMenuActive","AppointmentSetupPage","availability","setAvailability","SlotsDialog","txtTimeSlot","setTxtTimeSlot","txtDuration","setTxtDuration","selectedSlots","setSelectedSlots","refreshList","setRefreshList","outputList","setOutputList","timeSlotsOptions","timeSlots","output","slots","removeSelectedItem","marginLeft","selectedWeekDay","timeNoSecs","setSelectedTimeSlots","AvailabilitySetup","onlineAvailability","setOnlineAvailability","txtAddressLink","setTxtAddressLink","reminderCalls","setReminderCalls","txtReminderCallTime","setTxtReminderCallTime","cbxDayOfWeek","setCbxDayOfWeek","selectedTimeSlots","daysSlotsData","setDaysSlotsData","filterTimeSlots","setFilterTimeSlots","slotsDialogVisible","setSlotsDialogVisible","daysOfWeek","weekdaysSelect","newSlotObj","dayOfWeek","dayOfWeekIndex","remArray","newArray","sort","property","sortOrder","b","secVal","DynamicSort","slotsGridItems","foundData","saveObject","workingDays","forEach","table","ApiSecondaryPath","ok","Slots","ChargeSheet","txtConsultationCharge","setTxtConsultationCharge","txtEmergencyCharge","setTxtEmergencyCharge","txtHomeConsultationCharge","setTxtHomeConsultationCharge","DoctorsProfile","rowStyle","squareStyle","boardStyle","containerStyle","instructionsStyle","buttonStyle","Square","clickBoard","blocked","boardClick","setState","this","React","Component","Board","resetGame","item11","item12","item13","item21","item22","item23","item31","item32","item33","playStatus","playItem","gameplay","winner","formerState","checkGamePlay","Test","App","isLoaderVisible","toastVis","setToastVis","toastMsg","setToastMsg","setMsgBoxType","ShowToast","messageBoxType","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.53a3fbac.chunk.js","sourcesContent":["import { DEFAULT_DOMAIN } from \"@meet/web-sdk/lib/constants\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst loadExternalApi = (domain) => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        if (window.JitsiMeetExternalAPI) {\n            return resolve(window.JitsiMeetExternalAPI);\n        }\n        const script = document.createElement('script');\n        script.async = true;\n        script.src = `https://${DEFAULT_DOMAIN}/external_api.js`;\n        script.onload = () => resolve(window.JitsiMeetExternalAPI);\n        script.onerror = () => reject(new Error(`Script load error: ${script.src}`));\n        document.head.appendChild(script);\n    });\n});\nlet scriptPromise;\n/**\n * Injects the external_api.js script for the corresponding domain in DOM\n * and resolves with either the `JitsiMeetExternalApi` class definition or an error\n *\n * @param {string} domain - The domain of the external API\n * @returns {Promise<MeetExternalApi>} - the JitsiMeetExternalAPI or an error\n */\nexport const fetchExternalApi = (domain) => {\n    if (scriptPromise) {\n        return scriptPromise;\n    }\n    scriptPromise = loadExternalApi(DEFAULT_DOMAIN);\n    return scriptPromise;\n};\n","// // export const ApiPath = \"http://122.176.120.160:4000/\";\r\nexport const ApiPath = \"http://94.250.201.90:4000/\";\r\nexport const ApiSecondaryPath = \"http://94.250.201.90:4015/\";\r\nexport const CryptoApiPath = 'https://crypto.webshrine.in/api/';","import { useState, useEffect } from \"react\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst OTPLogin = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [countdownTimer, setCountdownTimer] = useState(45);\r\n\r\n    const [input1, setInput1] = useState('')\r\n    const [input2, setInput2] = useState('')\r\n    const [input3, setInput3] = useState('')\r\n    const [input4, setInput4] = useState('')\r\n    const [input5, setInput5] = useState('')\r\n    const [input6, setInput6] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (countdownTimer <= 0) {\r\n            setInterval(() => {\r\n                setCountdownTimer(value => (value - 1));\r\n            }, 1000)\r\n        }\r\n\r\n    }, [countdownTimer])\r\n\r\n    const postLogin = async () => {\r\n        //Build the OTP...\r\n        try {\r\n            const OTP = input1 + input2 + input3 + input4 + input5 + input6;\r\n\r\n            const data = {\r\n                loginId: props.phoneNumber,\r\n                role: props.sender || 'Patient',\r\n                otp: OTP,\r\n            }\r\n\r\n            const options = {\r\n                'headers': {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                'method': 'POST',\r\n            }\r\n\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"login\", { ...options, 'body': JSON.stringify(data) })\r\n                ?.then(res => (res.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false);\r\n\r\n                    if (res.statusCode === 200) {\r\n                        props.showToast(\"Login successful!\", 'success');\r\n\r\n                        //Remember to store the bearer token\r\n                        sessionStorage.setItem(\"token\", res.token);\r\n                        sessionStorage.setItem(\"id_val\", res.uidNo);\r\n\r\n                        if (props.sender === \"Doctor\") {\r\n                            //Redirect to the doctor's profile page...\r\n                            history.push(\"/doctors/appointment-onboarding\");\r\n                            sessionStorage.setItem(\"doctor\", JSON.stringify(res.data));\r\n\r\n                        } else {\r\n                            //A Patient... redirect to the patients dhp page...\r\n                            sessionStorage.setItem('patient', JSON.stringify(res.data));\r\n                            history.push(\"/patients/digital-health-passport\")\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n        } catch (error) {\r\n            props.showToast(error, 'exclamation')\r\n        }\r\n    }\r\n\r\n    const displayClasss = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayClasss}>\r\n            <div className=\"dialog-container otp\">\r\n                <div className=\"dialog-content\">\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\">Confirm your phone number</h2>\r\n                        <span id=\"close_toast\" onClick={props.hideDialog}>&times;</span>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <h4>To complete your login, please enter the 6-digit OTP sent to\r\n\r\n                        </h4>\r\n                        <h2 className=\"phone-no\">{props.phoneNumber}</h2>\r\n                        <div className=\"input-array\">\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input1\"\r\n                                value={input1}\r\n                                onChange={e => {\r\n                                    setInput1(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input2\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input2\"\r\n                                value={input2}\r\n                                onChange={e => {\r\n                                    setInput2(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input3\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input3\"\r\n                                value={input3}\r\n                                onChange={e => {\r\n                                    setInput3(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input4\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input4\"\r\n                                value={input4}\r\n                                onChange={e => {\r\n                                    setInput4(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input5\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input5\"\r\n                                value={input5}\r\n                                onChange={e => {\r\n                                    setInput5(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input6\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input6\"\r\n                                value={input6}\r\n                                onChange={e => {\r\n                                    setInput6(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input1\").focus();\r\n                                }}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"resend-group d-none\">\r\n                            <div>\r\n                                <p>Didn't receive the OTP?</p>\r\n                                <button>Resend</button>\r\n                            </div>\r\n                            <div>00:{countdownTimer}</div>\r\n                        </div>\r\n\r\n                        <div className=\"otp-call d-none\">\r\n                            <button>Get OTP on call</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button className=\"btn-continue\" onClick={postLogin}>Continue</button>\r\n                        <button className=\"btn-cancel\" onClick={props.hideDialog}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OTPLogin;","\r\nexport const LoginHeaders = props => {\r\n\r\n    return (\r\n        <div className=\"tab-container\" style={{ ...props.style }}>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-phone\"></i>Phone and OTP\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-id-card\"></i>Passport ID\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport OTPLogin from './OTPLogin';\r\nimport { LoginHeaders } from './login-headers';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [displayOTP, setDisplayOTP] = useState(false);\r\n    const [selectedTab, setSelectedTab] = useState(1);\r\n\r\n    const [txtPassportID, setTxtPassportID] = useState('')\r\n    const [txtPassword, setTxtPassword] = useState('')\r\n\r\n    const history = useHistory();\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = selectedTab === 1 ? { phoneNumber: value } : {\r\n            loginId: txtPassportID,\r\n            password: txtPassword\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n        const route = selectedTab === 1 ? \"sendSms\" : \"login\";\r\n\r\n        fetch(ApiPath + route, options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode !== 200) {\r\n                    showToast(response.message, 'exclamation');\r\n                } else {\r\n                    //Else, proceed... show the 2fa page...\r\n                    if (selectedTab === 1) {\r\n                        showToast(\"Enter the OTP sent to your registered phone number to proceed.\", \"information\");\r\n                        setDisplayOTP(true);\r\n\r\n                    } else {\r\n                        showToast(response.message, \"information\");\r\n\r\n                        //Remember to store the bearer token\r\n                        sessionStorage.setItem(\"token\", response.token);\r\n                        sessionStorage.setItem(\"id_val\", response.uidNo);\r\n\r\n                        //Store patient's data\r\n                        sessionStorage.setItem('patient', JSON.stringify(response.data));\r\n\r\n                        history.push(\"/patients/digital-health-passport\");\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className='smaller-container'>\r\n                    <div className=\"container-divider\">\r\n                        <div className=\"left-sidebar\">\r\n                            <img src=\"./mah-logo.png\" />\r\n\r\n                            <div className=\"left-text\">\r\n                                <h2><i className=\"icofont-check-circled\"></i> Let's get started!</h2>\r\n                                <div className='form-data'>\r\n                                    <LoginHeaders\r\n                                        selectedTab={selectedTab}\r\n                                        setSelectedTab={setSelectedTab}\r\n                                        style={{ marginBottom: '30px' }}\r\n                                    />\r\n\r\n                                    {\r\n                                        selectedTab === 1 &&\r\n                                        <div className='form-row mb-2'>\r\n                                            <h5>Login using Mobile number and OTP</h5>\r\n\r\n                                            <div className='input-group'>\r\n                                                <PhoneInput\r\n                                                    placeholder=\"Enter mobile number\"\r\n                                                    value={value}\r\n                                                    onChange={phone => setValue(phone)}\r\n                                                    className='form-control'\r\n                                                    style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        selectedTab === 2 && <div className='form-row mb-2'>\r\n                                            <h5>Login using Passport ID and Password</h5>\r\n                                            <div className='input-group'>\r\n                                                <input className='form-control'\r\n                                                    placeholder='Enter Passport ID'\r\n                                                    id='txtPassportID'\r\n                                                    value={txtPassportID}\r\n                                                    maxLength={14}\r\n                                                    onChange={e => setTxtPassportID(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className='input-group'>\r\n                                                <input className='form-control'\r\n                                                    type='password'\r\n                                                    placeholder='Enter Password'\r\n                                                    id='txtPassword'\r\n                                                    value={txtPassword}\r\n                                                    onChange={e => setTxtPassword(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <h5>By continuing, you agree to our</h5>\r\n                                    <Link to=\"/admin/dashboard\">Terms and conditions</Link>\r\n\r\n                                    <button\r\n                                        id=\"btnLogin\"\r\n                                        className=\"btn-continue\"\r\n                                        onClick={tryLogin}   //Show 2fa page...\r\n                                    >Continue</button>\r\n                                </div>\r\n                                <div className=\"doctor-register\">\r\n                                    <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                                </div>\r\n                                <div className=\"doctor-register\">\r\n                                    <h4>Returning Doctor? <Link to=\"/doctors/login\">Login here</Link></h4>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                                <p>Certified and secure online healthcare platform</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-sidebar\">\r\n                            <img src=\"./doctors.svg\" />\r\n                            <div className=\"image-text\">\r\n                                <p>India's top doctors to guide you to better health everyday</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                displayOTP && <OTPLogin\r\n                    showDialog={displayOTP}\r\n                    phoneNumber={value}\r\n                    hideDialog={() => setDisplayOTP(false)}\r\n                    showToast={showToast}\r\n                    setIsLoaderVisible={setIsLoaderVisible}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nexport const Register = ({ setIsLoaderVisible, showToast }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\")\r\n    const [role, setRole] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const register = () => {\r\n        //Connect to the api after validation...\r\n        if (name === \"\" || role === \"\" || phone === \"\" || password === \"\" || email === \"\") {\r\n            showToast(\"Complete all fields to proceed!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        if (password !== verifyPassword) {\r\n            showToast(\"Password and verify password fields must match!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            name: name,\r\n            role: role,\r\n            phoneNumber: phone,\r\n            password: password,\r\n            emailId: email,\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"register\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    showToast(\"Registration successful! Now login with the new credentials...\", 'success');\r\n\r\n                    if (response.data.uidNo.substring(0, 1) === \"P\") {\r\n                        history.push(\"/\");\r\n                    } else {\r\n                        //Move to the doctor's profile completion page...\r\n                        // set the variables for access on the other page...\r\n                        sessionStorage.setItem(\"temp\", JSON.stringify(data))\r\n                        sessionStorage.setItem(\"token\", JSON.stringify(response.data?.token))\r\n\r\n                        history.push(\"/doctors/complete-profile-registration\")\r\n                    }\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='smaller-container'>\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\">\r\n                        <div className='image-box'>\r\n                            <img src=\"./mah-logo.png\" />\r\n                        </div>\r\n                        <div className='float-logo'>\r\n                            <i className='icofont-tick-boxed' />\r\n                        </div>\r\n                        <div className=\"left-text\">\r\n                            {/* Form for details entry... */}\r\n                            <div className=\"form-data\">\r\n                                <h2>Registration <i className='icofont-tick-boxed'/></h2>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Name (Firstname and Lastname)</label>\r\n                                        <input\r\n                                            id=\"name\"\r\n                                            value={name}\r\n                                            onChange={e => setName(e.target.value)}\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            autoComplete='off'\r\n                                            placeholder='Fullname'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Email</label>\r\n                                        <input\r\n                                            id=\"email\"\r\n                                            value={email}\r\n                                            onChange={e => setEmail(e.target.value)}\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            autoComplete='off'\r\n                                            placeholder='Email'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Role</label>\r\n                                        <select\r\n                                            id=\"role\"\r\n                                            value={role}\r\n                                            onChange={e => setRole(e.target.value)}\r\n                                            className=\"form-control\"\r\n                                        >\r\n                                            <option value=\"\">Select Role</option>\r\n                                            <option value=\"Patient\">Patient</option>\r\n                                            <option value=\"Doctor\">Doctor</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Phone</label>\r\n                                        <PhoneInput\r\n                                            placeholder=\"Enter mobile number\"\r\n                                            value={phone}\r\n                                            onChange={val => setPhone(val)}\r\n                                            className='form-control'\r\n                                            style={{ paddingTop: 0, paddingBottom: 0 }}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Password</label>\r\n                                        <input\r\n                                            id=\"password\"\r\n                                            value={password}\r\n                                            onChange={e => setPassword(e.target.value)}\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            autoComplete='off'\r\n                                            placeholder='Password'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Verify Password</label>\r\n                                        <input\r\n                                            id=\"verifyPasword\"\r\n                                            value={verifyPassword}\r\n                                            onChange={e => setVerifyPassword(e.target.value)}\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder='Verify Password'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <button\r\n                                    id=\"btnLogin\"\r\n                                    className=\"btn-continue\"\r\n                                    style={{ marginBottom: '20px'}}\r\n                                    onClick={register}\r\n                                >Register</button>\r\n                            </div>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Already a user? <Link to=\"/\">Login here</Link></h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\" style={{ minHeight: '80%'}}>\r\n                        <img src=\"./access-account.svg\" style={{ width: '50%' }} />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday...</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const Loader = ({ isVisible }) => {\r\n\r\n    const displayClass = !isVisible ? \"d-none\" : \"new-loader-bg\";\r\n\r\n    return (\r\n        <div className={displayClass}>\r\n            <div className=\"new-loader-container\">\r\n                <span style={{ '--i': 0 }}></span>\r\n                <span style={{ '--i': 1 }}></span>\r\n                <span style={{ '--i': 2 }}></span>\r\n                <span style={{ '--i': 3 }}></span>\r\n                <span style={{ '--i': 4 }}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nconst Toast = (props) => {\r\n\r\n    const visStatus = (props.toastVisibility) ? \"toast\" : \"toast d-none\";\r\n    const message = props.toastMessage === \"Failed to fetch\" ? \"Failed to retrieve data. Check your internet connection and try again.\" : props.toastMessage;\r\n\r\n    function closeToast() {\r\n        props.setToastVisibility(false)\r\n    }\r\n\r\n    if (props.toastVisibility) {\r\n        setTimeout(() => {\r\n            props.setToastVisibility(false)\r\n        }, 8000)\r\n    }\r\n\r\n    let iconSrc = \"\"\r\n    const contentStyle = {}\r\n    const headerStyle = {}\r\n\r\n    switch (props.msgBoxType) {\r\n        case \"success\":\r\n            iconSrc = \"/success.png\";\r\n            contentStyle.borderLeft = \"2px solid var(--main-green)\"\r\n\r\n            headerStyle.color = \"var(--main-green)\"\r\n            headerStyle.innerText = \"Success\"\r\n\r\n            break;\r\n\r\n        case \"information\":\r\n            iconSrc = \"/info.png\";\r\n            contentStyle.borderLeft = \"2px solid var(--bluish)\";\r\n\r\n            headerStyle.color = \"var(--bluish)\"\r\n            headerStyle.innerText = \"Information\"\r\n\r\n            break;\r\n\r\n        case \"exclamation\":\r\n            iconSrc = \"/warning.png\";\r\n            contentStyle.borderLeft = \"2px solid var(--golden-rod)\";\r\n\r\n            headerStyle.color = \"var(--golden-rod)\"\r\n            headerStyle.innerText = \"Error\"\r\n\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        // This returns the basic\r\n        //Frame setup for the custom message box\r\n        // and based on the above props\r\n        // the state values can be changed\r\n        // depending on the values\r\n        // of the\r\n        // 1. Message\r\n        // 2. Box style (information, exclamation or success)\r\n        // 3. The message box visibility (true or false)\r\n        <div className={visStatus}>\r\n            <div className=\"logo\">\r\n                <img id=\"toastIcon\" src={iconSrc} alt=\"\" />\r\n            </div>\r\n            <div className=\"content\" style={contentStyle}>\r\n                <div className=\"content-header\">\r\n                    <h4 id=\"headerText\" style={headerStyle}>MAH Health Care</h4>\r\n                    <span id=\"close_toast\" onClick={closeToast}>&times;</span>\r\n                </div>\r\n                <p id=\"toast_message\">{(message === \"Unauthenticated user\" || message === \"No user found\") ? \"Access Denied!\" : message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast;\r\n","import { Link, useHistory } from \"react-router-dom\"\r\nimport cities from 'cities.json'\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const NavBar = props => {\r\n\r\n    const history = useHistory();\r\n    const [myLocation, setMyLocation] = useState({});\r\n\r\n    const signOut = () => {\r\n        //Sign out\r\n        localStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"id_val\", null);\r\n        sessionStorage.setItem('patient', null);\r\n\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition);\r\n        } else {\r\n            x.innerHTML = \"Geolocation is not supported by this browser.\";\r\n        }\r\n    }\r\n\r\n    const showPosition = (position) => {\r\n\r\n        //First, get the lattitude and longitude...\r\n        const locLat = position.coords.latitude;\r\n        const locLong = position.coords.longitude;\r\n\r\n        console.log(\"Latitude is \" + locLat);\r\n        console.log(\"Converted latitude is \" + parseFloat(locLat).toFixed(5))\r\n\r\n        console.log(\"Longitude is \" + locLong)\r\n        console.log(\"Converted longitude is \" + parseFloat(locLong).toFixed(5))\r\n\r\n        console.log(\"Some latitude converted is \" + parseFloat(cities[0].lat).toFixed(5));\r\n        console.log(\"Some longitude converted is \" + parseFloat(cities[0].lng).toFixed(5));\r\n\r\n        //The, filter the object to determine the exact location...\r\n        const currentLocationObject = cities.filter(item => parseFloat(item.lat).toFixed(5) == parseFloat(locLat).toFixed(5) && parseFloat(item.lng).toFixed(5) == parseFloat(locLong).toFixed(5));\r\n        setMyLocation(currentLocationObject[currentLocationObject.length - 1]);\r\n\r\n        console.log(currentLocationObject);\r\n    }\r\n\r\n    useEffect(() => getLocation(), [])\r\n\r\n    return (\r\n        <div className='nav-bar'>\r\n            <Link to='/patients/digital-health-passport' className='logo'>\r\n                <img src='/mah-logo.png' alt='' />\r\n            </Link>\r\n            <div className='links'>\r\n                <Link className={props.activeLink === 1 ? 'active' : ''} to='/patients/digital-health-passport'>Home</Link>\r\n                <Link className={props.activeLink === 2 ? 'active' : ''} to='/patients/profile'>Profile</Link>\r\n                <Link className={props.activeLink === 3 ? 'active' : ''} to='/patients/appointments'>Appointments</Link>\r\n\r\n            </div>\r\n            <div className='image'>\r\n                {/* <h5><i className='icofont-location-pin'></i> {props.data.address[0]?.city}{props.data.address[0].country && `, ${props.data.address[0].country}`}</h5> */}\r\n                <h5><i className='icofont-location-pin'></i> {`${myLocation && myLocation?.name}, ${myLocation && myLocation?.country}`}</h5>\r\n                <div className='img-container'>\r\n                    <img\r\n                        className='profile-img'\r\n                        src={props.data.photo || '/portfolio/avatar.png'}\r\n                        alt=''\r\n                        onClick={signOut}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"img-flyout d-none\">\r\n                <Link to=\"/patients/profile\"><i className='icofont-ui-user' />My Profile</Link>\r\n                <Link to=\"/\" onClick={signOut}><i className='icofont-sign-out' />Sign out</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const PatientTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-ui-user\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Medical\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-glass\"></i>Lifestyle\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 5 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(5)}\r\n            >\r\n                <i className=\"icofont-history\"></i>History\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 6 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(6)}\r\n            >\r\n                <i className=\"icofont-question-square\"></i>Others\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export const countriesList = [\r\n    {name: 'Afghanistan', code: 'AF'},\r\n    {name: 'Åland Islands', code: 'AX'},\r\n    {name: 'Albania', code: 'AL'},\r\n    {name: 'Algeria', code: 'DZ'},\r\n    {name: 'American Samoa', code: 'AS'},\r\n    {name: 'AndorrA', code: 'AD'},\r\n    {name: 'Angola', code: 'AO'},\r\n    {name: 'Anguilla', code: 'AI'},\r\n    {name: 'Antarctica', code: 'AQ'},\r\n    {name: 'Antigua and Barbuda', code: 'AG'},\r\n    {name: 'Argentina', code: 'AR'},\r\n    {name: 'Armenia', code: 'AM'},\r\n    {name: 'Aruba', code: 'AW'},\r\n    {name: 'Australia', code: 'AU'},\r\n    {name: 'Austria', code: 'AT'},\r\n    {name: 'Azerbaijan', code: 'AZ'},\r\n    {name: 'Bahamas', code: 'BS'},\r\n    {name: 'Bahrain', code: 'BH'},\r\n    {name: 'Bangladesh', code: 'BD'},\r\n    {name: 'Barbados', code: 'BB'},\r\n    {name: 'Belarus', code: 'BY'},\r\n    {name: 'Belgium', code: 'BE'},\r\n    {name: 'Belize', code: 'BZ'},\r\n    {name: 'Benin', code: 'BJ'},\r\n    {name: 'Bermuda', code: 'BM'},\r\n    {name: 'Bhutan', code: 'BT'},\r\n    {name: 'Bolivia', code: 'BO'},\r\n    {name: 'Bosnia and Herzegovina', code: 'BA'},\r\n    {name: 'Botswana', code: 'BW'},\r\n    {name: 'Bouvet Island', code: 'BV'},\r\n    {name: 'Brazil', code: 'BR'},\r\n    {name: 'British Indian Ocean Territory', code: 'IO'},\r\n    {name: 'Brunei Darussalam', code: 'BN'},\r\n    {name: 'Bulgaria', code: 'BG'},\r\n    {name: 'Burkina Faso', code: 'BF'},\r\n    {name: 'Burundi', code: 'BI'},\r\n    {name: 'Cambodia', code: 'KH'},\r\n    {name: 'Cameroon', code: 'CM'},\r\n    {name: 'Canada', code: 'CA'},\r\n    {name: 'Cape Verde', code: 'CV'},\r\n    {name: 'Cayman Islands', code: 'KY'},\r\n    {name: 'Central African Republic', code: 'CF'},\r\n    {name: 'Chad', code: 'TD'},\r\n    {name: 'Chile', code: 'CL'},\r\n    {name: 'China', code: 'CN'},\r\n    {name: 'Christmas Island', code: 'CX'},\r\n    {name: 'Cocos (Keeling) Islands', code: 'CC'},\r\n    {name: 'Colombia', code: 'CO'},\r\n    {name: 'Comoros', code: 'KM'},\r\n    {name: 'Congo', code: 'CG'},\r\n    {name: 'Congo, The Democratic Republic of the', code: 'CD'},\r\n    {name: 'Cook Islands', code: 'CK'},\r\n    {name: 'Costa Rica', code: 'CR'},\r\n    {name: 'Cote D\\'Ivoire', code: 'CI'},\r\n    {name: 'Croatia', code: 'HR'},\r\n    {name: 'Cuba', code: 'CU'},\r\n    {name: 'Cyprus', code: 'CY'},\r\n    {name: 'Czech Republic', code: 'CZ'},\r\n    {name: 'Denmark', code: 'DK'},\r\n    {name: 'Djibouti', code: 'DJ'},\r\n    {name: 'Dominica', code: 'DM'},\r\n    {name: 'Dominican Republic', code: 'DO'},\r\n    {name: 'Ecuador', code: 'EC'},\r\n    {name: 'Egypt', code: 'EG'},\r\n    {name: 'El Salvador', code: 'SV'},\r\n    {name: 'Equatorial Guinea', code: 'GQ'},\r\n    {name: 'Eritrea', code: 'ER'},\r\n    {name: 'Estonia', code: 'EE'},\r\n    {name: 'Ethiopia', code: 'ET'},\r\n    {name: 'Falkland Islands (Malvinas)', code: 'FK'},\r\n    {name: 'Faroe Islands', code: 'FO'},\r\n    {name: 'Fiji', code: 'FJ'},\r\n    {name: 'Finland', code: 'FI'},\r\n    {name: 'France', code: 'FR'},\r\n    {name: 'French Guiana', code: 'GF'},\r\n    {name: 'French Polynesia', code: 'PF'},\r\n    {name: 'French Southern Territories', code: 'TF'},\r\n    {name: 'Gabon', code: 'GA'},\r\n    {name: 'Gambia', code: 'GM'},\r\n    {name: 'Georgia', code: 'GE'},\r\n    {name: 'Germany', code: 'DE'},\r\n    {name: 'Ghana', code: 'GH'},\r\n    {name: 'Gibraltar', code: 'GI'},\r\n    {name: 'Greece', code: 'GR'},\r\n    {name: 'Greenland', code: 'GL'},\r\n    {name: 'Grenada', code: 'GD'},\r\n    {name: 'Guadeloupe', code: 'GP'},\r\n    {name: 'Guam', code: 'GU'},\r\n    {name: 'Guatemala', code: 'GT'},\r\n    {name: 'Guernsey', code: 'GG'},\r\n    {name: 'Guinea', code: 'GN'},\r\n    {name: 'Guinea-Bissau', code: 'GW'},\r\n    {name: 'Guyana', code: 'GY'},\r\n    {name: 'Haiti', code: 'HT'},\r\n    {name: 'Heard Island and Mcdonald Islands', code: 'HM'},\r\n    {name: 'Holy See (Vatican City State)', code: 'VA'},\r\n    {name: 'Honduras', code: 'HN'},\r\n    {name: 'Hong Kong', code: 'HK'},\r\n    {name: 'Hungary', code: 'HU'},\r\n    {name: 'Iceland', code: 'IS'},\r\n    {name: 'India', code: 'IN'},\r\n    {name: 'Indonesia', code: 'ID'},\r\n    {name: 'Iran, Islamic Republic Of', code: 'IR'},\r\n    {name: 'Iraq', code: 'IQ'},\r\n    {name: 'Ireland', code: 'IE'},\r\n    {name: 'Isle of Man', code: 'IM'},\r\n    {name: 'Israel', code: 'IL'},\r\n    {name: 'Italy', code: 'IT'},\r\n    {name: 'Jamaica', code: 'JM'},\r\n    {name: 'Japan', code: 'JP'},\r\n    {name: 'Jersey', code: 'JE'},\r\n    {name: 'Jordan', code: 'JO'},\r\n    {name: 'Kazakhstan', code: 'KZ'},\r\n    {name: 'Kenya', code: 'KE'},\r\n    {name: 'Kiribati', code: 'KI'},\r\n    {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'},\r\n    {name: 'Korea, Republic of', code: 'KR'},\r\n    {name: 'Kuwait', code: 'KW'},\r\n    {name: 'Kyrgyzstan', code: 'KG'},\r\n    {name: 'Lao People\\'S Democratic Republic', code: 'LA'},\r\n    {name: 'Latvia', code: 'LV'},\r\n    {name: 'Lebanon', code: 'LB'},\r\n    {name: 'Lesotho', code: 'LS'},\r\n    {name: 'Liberia', code: 'LR'},\r\n    {name: 'Libyan Arab Jamahiriya', code: 'LY'},\r\n    {name: 'Liechtenstein', code: 'LI'},\r\n    {name: 'Lithuania', code: 'LT'},\r\n    {name: 'Luxembourg', code: 'LU'},\r\n    {name: 'Macao', code: 'MO'},\r\n    {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'},\r\n    {name: 'Madagascar', code: 'MG'},\r\n    {name: 'Malawi', code: 'MW'},\r\n    {name: 'Malaysia', code: 'MY'},\r\n    {name: 'Maldives', code: 'MV'},\r\n    {name: 'Mali', code: 'ML'},\r\n    {name: 'Malta', code: 'MT'},\r\n    {name: 'Marshall Islands', code: 'MH'},\r\n    {name: 'Martinique', code: 'MQ'},\r\n    {name: 'Mauritania', code: 'MR'},\r\n    {name: 'Mauritius', code: 'MU'},\r\n    {name: 'Mayotte', code: 'YT'},\r\n    {name: 'Mexico', code: 'MX'},\r\n    {name: 'Micronesia, Federated States of', code: 'FM'},\r\n    {name: 'Moldova, Republic of', code: 'MD'},\r\n    {name: 'Monaco', code: 'MC'},\r\n    {name: 'Mongolia', code: 'MN'},\r\n    {name: 'Montserrat', code: 'MS'},\r\n    {name: 'Morocco', code: 'MA'},\r\n    {name: 'Mozambique', code: 'MZ'},\r\n    {name: 'Myanmar', code: 'MM'},\r\n    {name: 'Namibia', code: 'NA'},\r\n    {name: 'Nauru', code: 'NR'},\r\n    {name: 'Nepal', code: 'NP'},\r\n    {name: 'Netherlands', code: 'NL'},\r\n    {name: 'Netherlands Antilles', code: 'AN'},\r\n    {name: 'New Caledonia', code: 'NC'},\r\n    {name: 'New Zealand', code: 'NZ'},\r\n    {name: 'Nicaragua', code: 'NI'},\r\n    {name: 'Niger', code: 'NE'},\r\n    {name: 'Nigeria', code: 'NG'},\r\n    {name: 'Niue', code: 'NU'},\r\n    {name: 'Norfolk Island', code: 'NF'},\r\n    {name: 'Northern Mariana Islands', code: 'MP'},\r\n    {name: 'Norway', code: 'NO'},\r\n    {name: 'Oman', code: 'OM'},\r\n    {name: 'Pakistan', code: 'PK'},\r\n    {name: 'Palau', code: 'PW'},\r\n    {name: 'Palestinian Territory, Occupied', code: 'PS'},\r\n    {name: 'Panama', code: 'PA'},\r\n    {name: 'Papua New Guinea', code: 'PG'},\r\n    {name: 'Paraguay', code: 'PY'},\r\n    {name: 'Peru', code: 'PE'},\r\n    {name: 'Philippines', code: 'PH'},\r\n    {name: 'Pitcairn', code: 'PN'},\r\n    {name: 'Poland', code: 'PL'},\r\n    {name: 'Portugal', code: 'PT'},\r\n    {name: 'Puerto Rico', code: 'PR'},\r\n    {name: 'Qatar', code: 'QA'},\r\n    {name: 'Reunion', code: 'RE'},\r\n    {name: 'Romania', code: 'RO'},\r\n    {name: 'Russian Federation', code: 'RU'},\r\n    {name: 'RWANDA', code: 'RW'},\r\n    {name: 'Saint Helena', code: 'SH'},\r\n    {name: 'Saint Kitts and Nevis', code: 'KN'},\r\n    {name: 'Saint Lucia', code: 'LC'},\r\n    {name: 'Saint Pierre and Miquelon', code: 'PM'},\r\n    {name: 'Saint Vincent and the Grenadines', code: 'VC'},\r\n    {name: 'Samoa', code: 'WS'},\r\n    {name: 'San Marino', code: 'SM'},\r\n    {name: 'Sao Tome and Principe', code: 'ST'},\r\n    {name: 'Saudi Arabia', code: 'SA'},\r\n    {name: 'Senegal', code: 'SN'},\r\n    {name: 'Serbia and Montenegro', code: 'CS'},\r\n    {name: 'Seychelles', code: 'SC'},\r\n    {name: 'Sierra Leone', code: 'SL'},\r\n    {name: 'Singapore', code: 'SG'},\r\n    {name: 'Slovakia', code: 'SK'},\r\n    {name: 'Slovenia', code: 'SI'},\r\n    {name: 'Solomon Islands', code: 'SB'},\r\n    {name: 'Somalia', code: 'SO'},\r\n    {name: 'South Africa', code: 'ZA'},\r\n    {name: 'South Georgia and the South Sandwich Islands', code: 'GS'},\r\n    {name: 'Spain', code: 'ES'},\r\n    {name: 'Sri Lanka', code: 'LK'},\r\n    {name: 'Sudan', code: 'SD'},\r\n    {name: 'Suriname', code: 'SR'},\r\n    {name: 'Svalbard and Jan Mayen', code: 'SJ'},\r\n    {name: 'Swaziland', code: 'SZ'},\r\n    {name: 'Sweden', code: 'SE'},\r\n    {name: 'Switzerland', code: 'CH'},\r\n    {name: 'Syrian Arab Republic', code: 'SY'},\r\n    {name: 'Taiwan, Province of China', code: 'TW'},\r\n    {name: 'Tajikistan', code: 'TJ'},\r\n    {name: 'Tanzania, United Republic of', code: 'TZ'},\r\n    {name: 'Thailand', code: 'TH'},\r\n    {name: 'Timor-Leste', code: 'TL'},\r\n    {name: 'Togo', code: 'TG'},\r\n    {name: 'Tokelau', code: 'TK'},\r\n    {name: 'Tonga', code: 'TO'},\r\n    {name: 'Trinidad and Tobago', code: 'TT'},\r\n    {name: 'Tunisia', code: 'TN'},\r\n    {name: 'Turkey', code: 'TR'},\r\n    {name: 'Turkmenistan', code: 'TM'},\r\n    {name: 'Turks and Caicos Islands', code: 'TC'},\r\n    {name: 'Tuvalu', code: 'TV'},\r\n    {name: 'Uganda', code: 'UG'},\r\n    {name: 'Ukraine', code: 'UA'},\r\n    {name: 'United Arab Emirates', code: 'AE'},\r\n    {name: 'United Kingdom', code: 'GB'},\r\n    {name: 'United States', code: 'US'},\r\n    {name: 'United States Minor Outlying Islands', code: 'UM'},\r\n    {name: 'Uruguay', code: 'UY'},\r\n    {name: 'Uzbekistan', code: 'UZ'},\r\n    {name: 'Vanuatu', code: 'VU'},\r\n    {name: 'Venezuela', code: 'VE'},\r\n    {name: 'Viet Nam', code: 'VN'},\r\n    {name: 'Virgin Islands, British', code: 'VG'},\r\n    {name: 'Virgin Islands, U.S.', code: 'VI'},\r\n    {name: 'Wallis and Futuna', code: 'WF'},\r\n    {name: 'Western Sahara', code: 'EH'},\r\n    {name: 'Yemen', code: 'YE'},\r\n    {name: 'Zambia', code: 'ZM'},\r\n    {name: 'Zimbabwe', code: 'ZW'}\r\n  ]\r\n\r\n  export const countries = [\r\n    { code: 'AD', label: 'Andorra', phone: '376' },\r\n    {\r\n      code: 'AE',\r\n      label: 'United Arab Emirates',\r\n      phone: '971',\r\n    },\r\n    { code: 'AF', label: 'Afghanistan', phone: '93' },\r\n    {\r\n      code: 'AG',\r\n      label: 'Antigua and Barbuda',\r\n      phone: '1-268',\r\n    },\r\n    { code: 'AI', label: 'Anguilla', phone: '1-264' },\r\n    { code: 'AL', label: 'Albania', phone: '355' },\r\n    { code: 'AM', label: 'Armenia', phone: '374' },\r\n    { code: 'AO', label: 'Angola', phone: '244' },\r\n    { code: 'AQ', label: 'Antarctica', phone: '672' },\r\n    { code: 'AR', label: 'Argentina', phone: '54' },\r\n    { code: 'AS', label: 'American Samoa', phone: '1-684' },\r\n    { code: 'AT', label: 'Austria', phone: '43' },\r\n    {\r\n      code: 'AU',\r\n      label: 'Australia',\r\n      phone: '61',\r\n      suggested: true,\r\n    },\r\n    { code: 'AW', label: 'Aruba', phone: '297' },\r\n    { code: 'AX', label: 'Alland Islands', phone: '358' },\r\n    { code: 'AZ', label: 'Azerbaijan', phone: '994' },\r\n    {\r\n      code: 'BA',\r\n      label: 'Bosnia and Herzegovina',\r\n      phone: '387',\r\n    },\r\n    { code: 'BB', label: 'Barbados', phone: '1-246' },\r\n    { code: 'BD', label: 'Bangladesh', phone: '880' },\r\n    { code: 'BE', label: 'Belgium', phone: '32' },\r\n    { code: 'BF', label: 'Burkina Faso', phone: '226' },\r\n    { code: 'BG', label: 'Bulgaria', phone: '359' },\r\n    { code: 'BH', label: 'Bahrain', phone: '973' },\r\n    { code: 'BI', label: 'Burundi', phone: '257' },\r\n    { code: 'BJ', label: 'Benin', phone: '229' },\r\n    { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\r\n    { code: 'BM', label: 'Bermuda', phone: '1-441' },\r\n    { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\r\n    { code: 'BO', label: 'Bolivia', phone: '591' },\r\n    { code: 'BR', label: 'Brazil', phone: '55' },\r\n    { code: 'BS', label: 'Bahamas', phone: '1-242' },\r\n    { code: 'BT', label: 'Bhutan', phone: '975' },\r\n    { code: 'BV', label: 'Bouvet Island', phone: '47' },\r\n    { code: 'BW', label: 'Botswana', phone: '267' },\r\n    { code: 'BY', label: 'Belarus', phone: '375' },\r\n    { code: 'BZ', label: 'Belize', phone: '501' },\r\n    {\r\n      code: 'CA',\r\n      label: 'Canada',\r\n      phone: '1',\r\n      suggested: true,\r\n    },\r\n    {\r\n      code: 'CC',\r\n      label: 'Cocos (Keeling) Islands',\r\n      phone: '61',\r\n    },\r\n    {\r\n      code: 'CD',\r\n      label: 'Congo, Democratic Republic of the',\r\n      phone: '243',\r\n    },\r\n    {\r\n      code: 'CF',\r\n      label: 'Central African Republic',\r\n      phone: '236',\r\n    },\r\n    {\r\n      code: 'CG',\r\n      label: 'Congo, Republic of the',\r\n      phone: '242',\r\n    },\r\n    { code: 'CH', label: 'Switzerland', phone: '41' },\r\n    { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\r\n    { code: 'CK', label: 'Cook Islands', phone: '682' },\r\n    { code: 'CL', label: 'Chile', phone: '56' },\r\n    { code: 'CM', label: 'Cameroon', phone: '237' },\r\n    { code: 'CN', label: 'China', phone: '86' },\r\n    { code: 'CO', label: 'Colombia', phone: '57' },\r\n    { code: 'CR', label: 'Costa Rica', phone: '506' },\r\n    { code: 'CU', label: 'Cuba', phone: '53' },\r\n    { code: 'CV', label: 'Cape Verde', phone: '238' },\r\n    { code: 'CW', label: 'Curacao', phone: '599' },\r\n    { code: 'CX', label: 'Christmas Island', phone: '61' },\r\n    { code: 'CY', label: 'Cyprus', phone: '357' },\r\n    { code: 'CZ', label: 'Czech Republic', phone: '420' },\r\n    {\r\n      code: 'DE',\r\n      label: 'Germany',\r\n      phone: '49',\r\n      suggested: true,\r\n    },\r\n    { code: 'DJ', label: 'Djibouti', phone: '253' },\r\n    { code: 'DK', label: 'Denmark', phone: '45' },\r\n    { code: 'DM', label: 'Dominica', phone: '1-767' },\r\n    {\r\n      code: 'DO',\r\n      label: 'Dominican Republic',\r\n      phone: '1-809',\r\n    },\r\n    { code: 'DZ', label: 'Algeria', phone: '213' },\r\n    { code: 'EC', label: 'Ecuador', phone: '593' },\r\n    { code: 'EE', label: 'Estonia', phone: '372' },\r\n    { code: 'EG', label: 'Egypt', phone: '20' },\r\n    { code: 'EH', label: 'Western Sahara', phone: '212' },\r\n    { code: 'ER', label: 'Eritrea', phone: '291' },\r\n    { code: 'ES', label: 'Spain', phone: '34' },\r\n    { code: 'ET', label: 'Ethiopia', phone: '251' },\r\n    { code: 'FI', label: 'Finland', phone: '358' },\r\n    { code: 'FJ', label: 'Fiji', phone: '679' },\r\n    {\r\n      code: 'FK',\r\n      label: 'Falkland Islands (Malvinas)',\r\n      phone: '500',\r\n    },\r\n    {\r\n      code: 'FM',\r\n      label: 'Micronesia, Federated States of',\r\n      phone: '691',\r\n    },\r\n    { code: 'FO', label: 'Faroe Islands', phone: '298' },\r\n    {\r\n      code: 'FR',\r\n      label: 'France',\r\n      phone: '33',\r\n      suggested: true,\r\n    },\r\n    { code: 'GA', label: 'Gabon', phone: '241' },\r\n    { code: 'GB', label: 'United Kingdom', phone: '44' },\r\n    { code: 'GD', label: 'Grenada', phone: '1-473' },\r\n    { code: 'GE', label: 'Georgia', phone: '995' },\r\n    { code: 'GF', label: 'French Guiana', phone: '594' },\r\n    { code: 'GG', label: 'Guernsey', phone: '44' },\r\n    { code: 'GH', label: 'Ghana', phone: '233' },\r\n    { code: 'GI', label: 'Gibraltar', phone: '350' },\r\n    { code: 'GL', label: 'Greenland', phone: '299' },\r\n    { code: 'GM', label: 'Gambia', phone: '220' },\r\n    { code: 'GN', label: 'Guinea', phone: '224' },\r\n    { code: 'GP', label: 'Guadeloupe', phone: '590' },\r\n    { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\r\n    { code: 'GR', label: 'Greece', phone: '30' },\r\n    {\r\n      code: 'GS',\r\n      label: 'South Georgia and the South Sandwich Islands',\r\n      phone: '500',\r\n    },\r\n    { code: 'GT', label: 'Guatemala', phone: '502' },\r\n    { code: 'GU', label: 'Guam', phone: '1-671' },\r\n    { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\r\n    { code: 'GY', label: 'Guyana', phone: '592' },\r\n    { code: 'HK', label: 'Hong Kong', phone: '852' },\r\n    {\r\n      code: 'HM',\r\n      label: 'Heard Island and McDonald Islands',\r\n      phone: '672',\r\n    },\r\n    { code: 'HN', label: 'Honduras', phone: '504' },\r\n    { code: 'HR', label: 'Croatia', phone: '385' },\r\n    { code: 'HT', label: 'Haiti', phone: '509' },\r\n    { code: 'HU', label: 'Hungary', phone: '36' },\r\n    { code: 'ID', label: 'Indonesia', phone: '62' },\r\n    { code: 'IE', label: 'Ireland', phone: '353' },\r\n    { code: 'IL', label: 'Israel', phone: '972' },\r\n    { code: 'IM', label: 'Isle of Man', phone: '44' },\r\n    { code: 'IN', label: 'India', phone: '91' },\r\n    {\r\n      code: 'IO',\r\n      label: 'British Indian Ocean Territory',\r\n      phone: '246',\r\n    },\r\n    { code: 'IQ', label: 'Iraq', phone: '964' },\r\n    {\r\n      code: 'IR',\r\n      label: 'Iran, Islamic Republic of',\r\n      phone: '98',\r\n    },\r\n    { code: 'IS', label: 'Iceland', phone: '354' },\r\n    { code: 'IT', label: 'Italy', phone: '39' },\r\n    { code: 'JE', label: 'Jersey', phone: '44' },\r\n    { code: 'JM', label: 'Jamaica', phone: '1-876' },\r\n    { code: 'JO', label: 'Jordan', phone: '962' },\r\n    {\r\n      code: 'JP',\r\n      label: 'Japan',\r\n      phone: '81',\r\n      suggested: true,\r\n    },\r\n    { code: 'KE', label: 'Kenya', phone: '254' },\r\n    { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\r\n    { code: 'KH', label: 'Cambodia', phone: '855' },\r\n    { code: 'KI', label: 'Kiribati', phone: '686' },\r\n    { code: 'KM', label: 'Comoros', phone: '269' },\r\n    {\r\n      code: 'KN',\r\n      label: 'Saint Kitts and Nevis',\r\n      phone: '1-869',\r\n    },\r\n    {\r\n      code: 'KP',\r\n      label: \"Korea, Democratic People's Republic of\",\r\n      phone: '850',\r\n    },\r\n    { code: 'KR', label: 'Korea, Republic of', phone: '82' },\r\n    { code: 'KW', label: 'Kuwait', phone: '965' },\r\n    { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\r\n    { code: 'KZ', label: 'Kazakhstan', phone: '7' },\r\n    {\r\n      code: 'LA',\r\n      label: \"Lao People's Democratic Republic\",\r\n      phone: '856',\r\n    },\r\n    { code: 'LB', label: 'Lebanon', phone: '961' },\r\n    { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\r\n    { code: 'LI', label: 'Liechtenstein', phone: '423' },\r\n    { code: 'LK', label: 'Sri Lanka', phone: '94' },\r\n    { code: 'LR', label: 'Liberia', phone: '231' },\r\n    { code: 'LS', label: 'Lesotho', phone: '266' },\r\n    { code: 'LT', label: 'Lithuania', phone: '370' },\r\n    { code: 'LU', label: 'Luxembourg', phone: '352' },\r\n    { code: 'LV', label: 'Latvia', phone: '371' },\r\n    { code: 'LY', label: 'Libya', phone: '218' },\r\n    { code: 'MA', label: 'Morocco', phone: '212' },\r\n    { code: 'MC', label: 'Monaco', phone: '377' },\r\n    {\r\n      code: 'MD',\r\n      label: 'Moldova, Republic of',\r\n      phone: '373',\r\n    },\r\n    { code: 'ME', label: 'Montenegro', phone: '382' },\r\n    {\r\n      code: 'MF',\r\n      label: 'Saint Martin (French part)',\r\n      phone: '590',\r\n    },\r\n    { code: 'MG', label: 'Madagascar', phone: '261' },\r\n    { code: 'MH', label: 'Marshall Islands', phone: '692' },\r\n    {\r\n      code: 'MK',\r\n      label: 'Macedonia, the Former Yugoslav Republic of',\r\n      phone: '389',\r\n    },\r\n    { code: 'ML', label: 'Mali', phone: '223' },\r\n    { code: 'MM', label: 'Myanmar', phone: '95' },\r\n    { code: 'MN', label: 'Mongolia', phone: '976' },\r\n    { code: 'MO', label: 'Macao', phone: '853' },\r\n    {\r\n      code: 'MP',\r\n      label: 'Northern Mariana Islands',\r\n      phone: '1-670',\r\n    },\r\n    { code: 'MQ', label: 'Martinique', phone: '596' },\r\n    { code: 'MR', label: 'Mauritania', phone: '222' },\r\n    { code: 'MS', label: 'Montserrat', phone: '1-664' },\r\n    { code: 'MT', label: 'Malta', phone: '356' },\r\n    { code: 'MU', label: 'Mauritius', phone: '230' },\r\n    { code: 'MV', label: 'Maldives', phone: '960' },\r\n    { code: 'MW', label: 'Malawi', phone: '265' },\r\n    { code: 'MX', label: 'Mexico', phone: '52' },\r\n    { code: 'MY', label: 'Malaysia', phone: '60' },\r\n    { code: 'MZ', label: 'Mozambique', phone: '258' },\r\n    { code: 'NA', label: 'Namibia', phone: '264' },\r\n    { code: 'NC', label: 'New Caledonia', phone: '687' },\r\n    { code: 'NE', label: 'Niger', phone: '227' },\r\n    { code: 'NF', label: 'Norfolk Island', phone: '672' },\r\n    { code: 'NG', label: 'Nigeria', phone: '234' },\r\n    { code: 'NI', label: 'Nicaragua', phone: '505' },\r\n    { code: 'NL', label: 'Netherlands', phone: '31' },\r\n    { code: 'NO', label: 'Norway', phone: '47' },\r\n    { code: 'NP', label: 'Nepal', phone: '977' },\r\n    { code: 'NR', label: 'Nauru', phone: '674' },\r\n    { code: 'NU', label: 'Niue', phone: '683' },\r\n    { code: 'NZ', label: 'New Zealand', phone: '64' },\r\n    { code: 'OM', label: 'Oman', phone: '968' },\r\n    { code: 'PA', label: 'Panama', phone: '507' },\r\n    { code: 'PE', label: 'Peru', phone: '51' },\r\n    { code: 'PF', label: 'French Polynesia', phone: '689' },\r\n    { code: 'PG', label: 'Papua New Guinea', phone: '675' },\r\n    { code: 'PH', label: 'Philippines', phone: '63' },\r\n    { code: 'PK', label: 'Pakistan', phone: '92' },\r\n    { code: 'PL', label: 'Poland', phone: '48' },\r\n    {\r\n      code: 'PM',\r\n      label: 'Saint Pierre and Miquelon',\r\n      phone: '508',\r\n    },\r\n    { code: 'PN', label: 'Pitcairn', phone: '870' },\r\n    { code: 'PR', label: 'Puerto Rico', phone: '1' },\r\n    {\r\n      code: 'PS',\r\n      label: 'Palestine, State of',\r\n      phone: '970',\r\n    },\r\n    { code: 'PT', label: 'Portugal', phone: '351' },\r\n    { code: 'PW', label: 'Palau', phone: '680' },\r\n    { code: 'PY', label: 'Paraguay', phone: '595' },\r\n    { code: 'QA', label: 'Qatar', phone: '974' },\r\n    { code: 'RE', label: 'Reunion', phone: '262' },\r\n    { code: 'RO', label: 'Romania', phone: '40' },\r\n    { code: 'RS', label: 'Serbia', phone: '381' },\r\n    { code: 'RU', label: 'Russian Federation', phone: '7' },\r\n    { code: 'RW', label: 'Rwanda', phone: '250' },\r\n    { code: 'SA', label: 'Saudi Arabia', phone: '966' },\r\n    { code: 'SB', label: 'Solomon Islands', phone: '677' },\r\n    { code: 'SC', label: 'Seychelles', phone: '248' },\r\n    { code: 'SD', label: 'Sudan', phone: '249' },\r\n    { code: 'SE', label: 'Sweden', phone: '46' },\r\n    { code: 'SG', label: 'Singapore', phone: '65' },\r\n    { code: 'SH', label: 'Saint Helena', phone: '290' },\r\n    { code: 'SI', label: 'Slovenia', phone: '386' },\r\n    {\r\n      code: 'SJ',\r\n      label: 'Svalbard and Jan Mayen',\r\n      phone: '47',\r\n    },\r\n    { code: 'SK', label: 'Slovakia', phone: '421' },\r\n    { code: 'SL', label: 'Sierra Leone', phone: '232' },\r\n    { code: 'SM', label: 'San Marino', phone: '378' },\r\n    { code: 'SN', label: 'Senegal', phone: '221' },\r\n    { code: 'SO', label: 'Somalia', phone: '252' },\r\n    { code: 'SR', label: 'Suriname', phone: '597' },\r\n    { code: 'SS', label: 'South Sudan', phone: '211' },\r\n    {\r\n      code: 'ST',\r\n      label: 'Sao Tome and Principe',\r\n      phone: '239',\r\n    },\r\n    { code: 'SV', label: 'El Salvador', phone: '503' },\r\n    {\r\n      code: 'SX',\r\n      label: 'Sint Maarten (Dutch part)',\r\n      phone: '1-721',\r\n    },\r\n    {\r\n      code: 'SY',\r\n      label: 'Syrian Arab Republic',\r\n      phone: '963',\r\n    },\r\n    { code: 'SZ', label: 'Swaziland', phone: '268' },\r\n    {\r\n      code: 'TC',\r\n      label: 'Turks and Caicos Islands',\r\n      phone: '1-649',\r\n    },\r\n    { code: 'TD', label: 'Chad', phone: '235' },\r\n    {\r\n      code: 'TF',\r\n      label: 'French Southern Territories',\r\n      phone: '262',\r\n    },\r\n    { code: 'TG', label: 'Togo', phone: '228' },\r\n    { code: 'TH', label: 'Thailand', phone: '66' },\r\n    { code: 'TJ', label: 'Tajikistan', phone: '992' },\r\n    { code: 'TK', label: 'Tokelau', phone: '690' },\r\n    { code: 'TL', label: 'Timor-Leste', phone: '670' },\r\n    { code: 'TM', label: 'Turkmenistan', phone: '993' },\r\n    { code: 'TN', label: 'Tunisia', phone: '216' },\r\n    { code: 'TO', label: 'Tonga', phone: '676' },\r\n    { code: 'TR', label: 'Turkey', phone: '90' },\r\n    {\r\n      code: 'TT',\r\n      label: 'Trinidad and Tobago',\r\n      phone: '1-868',\r\n    },\r\n    { code: 'TV', label: 'Tuvalu', phone: '688' },\r\n    {\r\n      code: 'TW',\r\n      label: 'Taiwan, Province of China',\r\n      phone: '886',\r\n    },\r\n    {\r\n      code: 'TZ',\r\n      label: 'United Republic of Tanzania',\r\n      phone: '255',\r\n    },\r\n    { code: 'UA', label: 'Ukraine', phone: '380' },\r\n    { code: 'UG', label: 'Uganda', phone: '256' },\r\n    {\r\n      code: 'US',\r\n      label: 'United States',\r\n      phone: '1',\r\n      suggested: true,\r\n    },\r\n    { code: 'UY', label: 'Uruguay', phone: '598' },\r\n    { code: 'UZ', label: 'Uzbekistan', phone: '998' },\r\n    {\r\n      code: 'VA',\r\n      label: 'Holy See (Vatican City State)',\r\n      phone: '379',\r\n    },\r\n    {\r\n      code: 'VC',\r\n      label: 'Saint Vincent and the Grenadines',\r\n      phone: '1-784',\r\n    },\r\n    { code: 'VE', label: 'Venezuela', phone: '58' },\r\n    {\r\n      code: 'VG',\r\n      label: 'British Virgin Islands',\r\n      phone: '1-284',\r\n    },\r\n    {\r\n      code: 'VI',\r\n      label: 'US Virgin Islands',\r\n      phone: '1-340',\r\n    },\r\n    { code: 'VN', label: 'Vietnam', phone: '84' },\r\n    { code: 'VU', label: 'Vanuatu', phone: '678' },\r\n    { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\r\n    { code: 'WS', label: 'Samoa', phone: '685' },\r\n    { code: 'XK', label: 'Kosovo', phone: '383' },\r\n    { code: 'YE', label: 'Yemen', phone: '967' },\r\n    { code: 'YT', label: 'Mayotte', phone: '262' },\r\n    { code: 'ZA', label: 'South Africa', phone: '27' },\r\n    { code: 'ZM', label: 'Zambia', phone: '260' },\r\n    { code: 'ZW', label: 'Zimbabwe', phone: '263' },\r\n  ];","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { countriesList } from '../../assets/common/countries';\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nexport const Contact = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const address = props.data?.address;\r\n    const houseNumber = address[0]?.houseNumber ? address[0]?.houseNumber + \", \" : \"\";\r\n    const street = address[0]?.street ? address[0]?.street + \", \" : \"\";\r\n    const city = address[0]?.city ? address[0]?.city + \", \" : \"\";\r\n    const state = address[0]?.state ? address[0]?.state + \", \" : \"\";\r\n    const district = address[0]?.district ? address[0]?.district + \", \" : \"\";\r\n    const postalCode = address[0]?.postalCode ? address[0]?.postalCode + \" - \" : \"\";\r\n\r\n\r\n    const showPhone = props.data?.contactPerson.length > 0 ? \"icofont-phone\" : \"\";\r\n    const contactDetails = props.data?.contactPerson.length > 0\r\n        && `${props.data?.contactPerson && props.data?.contactPerson[0]?.name} (${props.data?.contactPerson && props.data?.contactPerson[0]?.relationship})`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><span style={{ color: 'red' }}>*</span>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span style={{ color: 'red' }}>*</span>Address</td>\r\n                                <td>{address && address === []\r\n                                    ? \"\"\r\n                                    : `${houseNumber}${street}${city}${district}${state}${postalCode}`}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span style={{ color: 'red' }}>*</span>Country</td>\r\n                                <td>{address ? address[0]?.country : \"-\"}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span style={{ color: 'red' }}>*</span>E-mail</td>\r\n                                <td>{props.data.emailId}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span style={{ color: 'red' }}>*</span>Contact Person</td>\r\n                                <td>\r\n                                    {contactDetails}<br />\r\n                                    <i className={showPhone}></i>{props.data?.contactPerson && props.data?.contactPerson?.phoneNumber}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                setPatientsData={props.setPatientsData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const addressData = props.data.address[0] || {};\r\n    const contactPerson = props.data.contactPerson || {};\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [addressType, setAddressType] = useState(addressData?.type);\r\n    const [txtHouseNo, setTxtHouseNo] = useState(addressData?.houseNumber);\r\n    const [txtStreet, setTxtStreet] = useState(addressData?.street);\r\n    const [txtCity, setTxtCity] = useState(addressData?.city);\r\n    const [txtDistrict, setTxtDistrict] = useState(addressData?.district);\r\n    const [txtState, setTxtState] = useState(addressData?.state);\r\n    const [txtPostalCode, setTxtPostalCode] = useState(addressData.postalCode);\r\n    const [txtCountry, setTxtCountry] = useState(addressData?.country);\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailId);\r\n    const [txtContactPerson, setTxtContactPerson] = useState(contactPerson?.name);\r\n    const [txtRelationship, setTxtRelationship] = useState(contactPerson?.relationship)\r\n    const [txtContactPhone, setTxtContactPhone] = useState(contactPerson?.contact?.value)\r\n\r\n    const updateContactDetails = () => {\r\n        //update just the personal details contained here...\r\n        if (addressType === \"\") {\r\n            props.showToast(\"Select a valid address type to proceed.\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            emailId: txtEmail,\r\n            address: [{\r\n                \"type\": addressType,\r\n                \"houseNumber\": txtHouseNo,\r\n                \"street\": txtStreet,\r\n                \"city\": txtCity,\r\n                \"district\": txtDistrict,\r\n                \"state\": txtState,\r\n                \"postalCode\": txtPostalCode,\r\n                \"country\": txtCountry\r\n            }],\r\n            contactPerson: {\r\n                \"relationship\": txtRelationship,\r\n                \"name\": txtContactPerson,\r\n                \"phoneNumber\": txtContactPhone,\r\n            },\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n\r\n                    //Also, update the sessionstorate\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n    const countryList = countriesList.map((item, index) => {\r\n        return (<option key={index} value={item.name}>{item.name} ({item.code})</option>)\r\n    })\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row-2-1-1\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <PhoneInput\r\n                                placeholder=\"Enter mobile number\"\r\n                                value={txtPhone}\r\n                                onChange={phone => setTxtPhone(phone)}\r\n                                className='form-control'\r\n                                style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Type</label>\r\n                            <select\r\n                                id=\"addressType\"\r\n                                value={addressType}\r\n                                onChange={e => setAddressType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"Home\">Home</option>\r\n                                <option value=\"Work\">Work</option>\r\n                                <option value=\"Office\">Office</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>House Number</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtHouseNo\"\r\n                                value={txtHouseNo}\r\n                                onChange={e => setTxtHouseNo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className=\"input-group\">\r\n                            <label>Street</label>\r\n                            <textarea\r\n                                rows={2}\r\n                                className=\"form-control\"\r\n                                id=\"txtStreet\"\r\n                                value={txtStreet}\r\n                                onChange={e => setTxtStreet(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>City <span style={{ color: 'red' }}>*</span></label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtCity\"\r\n                                value={txtCity}\r\n                                onChange={e => setTxtCity(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>District</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtDistrict\"\r\n                                value={txtDistrict}\r\n                                onChange={e => setTxtDistrict(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>State</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtState\"\r\n                                value={txtState}\r\n                                onChange={e => setTxtState(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Postal Code</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPostalCode\"\r\n                                value={txtPostalCode}\r\n                                onChange={e => setTxtPostalCode(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className=\"input-group\">\r\n                            <label>Country <span style={{ color: 'red' }}>*</span></label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtCountry\"\r\n                                value={txtCountry}\r\n                                onChange={e => setTxtCountry(e.target.value)}\r\n                            >\r\n                                {countryList}\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Contact Person (Name)</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPerson\"\r\n                                value={txtContactPerson}\r\n                                onChange={e => setTxtContactPerson(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Relationship</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtRelationship\"\r\n                                value={txtRelationship}\r\n                                onChange={e => setTxtRelationship(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <PhoneInput\r\n                                placeholder=\"Enter mobile number\"\r\n                                value={txtContactPhone}\r\n                                onChange={phone => setTxtContactPhone(phone)}\r\n                                className='form-control'\r\n                                style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateContactDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const toTimestamp = (year,month,day,hour,minute,second) => {\r\n    var datum = new Date(Date.UTC(year,month-1,day,hour,minute,second));\r\n    return datum.getTime()/1000;\r\n}\r\n\r\nexport const DynamicSort = (property, sortType = \"asc\") => {\r\n    const sortOrder = sortType === \"asc\" ? 1 : -1;\r\n\r\n    return function (a, b) {\r\n        const secVal = (a[property] > b[property]) ? 1 : 0;\r\n        const result = (a[property] < b[property])\r\n            ? -1\r\n            : secVal;\r\n\r\n        return result * sortOrder;\r\n    }\r\n}\r\n\r\nexport const shortDateString = dateValue => {\r\n    const fullDate = new Date(dateValue);\r\n    if (!dateValue) return \"-\"\r\n    return (fullDate.getDate() < 10 ? \"0\" : \"\") + fullDate.getDate() + \"-\" + monthToShortString(fullDate.getMonth()) + \"-\" + fullDate.getFullYear();\r\n}\r\n\r\nconst monthToShortString = intMonthVal => {\r\n\r\n    let retMonth;\r\n\r\n    switch (intMonthVal) {\r\n        case 0:\r\n            retMonth = 'Jan';\r\n            break;\r\n        case 1:\r\n            retMonth = 'Feb';\r\n            break;\r\n        case 2:\r\n            retMonth = 'Mar';\r\n            break;\r\n        case 3:\r\n            retMonth = 'Apr';\r\n            break;\r\n        case 4:\r\n            retMonth = 'May';\r\n            break;\r\n        case 5:\r\n            retMonth = 'Jun';\r\n            break;\r\n        case 6:\r\n            retMonth = 'Jul';\r\n            break;\r\n        case 7:\r\n            retMonth = 'Aug';\r\n            break;\r\n        case 8:\r\n            retMonth = 'Sep';\r\n            break;\r\n        case 9:\r\n            retMonth = 'Oct';\r\n            break;\r\n        case 10:\r\n            retMonth = 'Nov';\r\n            break;\r\n        default:\r\n            retMonth = 'Dec'\r\n            break;\r\n    }\r\n\r\n    return retMonth;\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { shortDateString } from \"../../assets/common/operations\"\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Marital Status</td>\r\n                            <td>{props.data?.maritalStatus}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Date of Birth</td>\r\n                            <td>{shortDateString(props.data?.birthDate)}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Is Deceased?</td>\r\n                            <td>{props.data?.deceased?.deceasedBoolean || \"No\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Deceased Date</td>\r\n                            <td>{props.data?.deceased?.deceasedDateTime || \"-\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n                setPatientsData={props.setPatientsData}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [showDeceased, setShowDeceased] = useState('none');\r\n    const [cbxDeceased, setCbxDeceased] = useState(props.data.deceased?.deceasedBoolean)\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [cbxMaritalStatus, setCbxMaritalStatus] = useState(props.data.maritalStatus)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n    const [txtDeceasedDate, setTxtDeceasedDate] = useState(props.data?.deceased?.deceasedDateTime);\r\n\r\n    useEffect(() => {\r\n        if (cbxDeceased === \"Yes\") {\r\n            setShowDeceased('block')\r\n        } else {\r\n            setShowDeceased('none');\r\n        }\r\n    }, [cbxDeceased])\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n            \"deceased\": {\r\n                deceasedBoolean: cbxDeceased === \"Yes\" ? true : false,\r\n                deceasedDateTime: txtDeceasedDate,\r\n            },\r\n            maritalStatus: cbxMaritalStatus,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n\r\n                    //Also, update the sessionstorate\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response?.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)'}}><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Marital Status</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxMaritalStatus\"\r\n                                value={cbxMaritalStatus}\r\n                                onChange={e => setCbxMaritalStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Married\">Married</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Do not wish to disclose\">Do not wish to disclose</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindi\">Hindi</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Is Deceased?</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxIsDeceased\"\r\n                                value={cbxDeceased}\r\n                                onChange={e => setCbxDeceased(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group' style={{ display: showDeceased }}>\r\n                            <label>Deceased Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtDeceasedDate\"\r\n                                value={txtDeceasedDate}\r\n                                onChange={e => setTxtDeceasedDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url'\r\n\r\nexport const Medical = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical Details</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Allergies</td>\r\n                            <td>{Object.keys(props.data?.allergies).length > 0 ? props.data?.allergies?.value.join(\", \") : ''}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr className='d-none'>\r\n                            <td><span style={{ color: 'red' }}>*</span>Managing Organization (Hospital)</td>\r\n                            <td>{props.data.managingOrganization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Blood Group</td>\r\n                            <td>{props.data.general?.bloodGroup}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Height</td>\r\n                            <td>{props.data.general?.height} cm</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Weight</td>\r\n                            <td>{props.data.general?.weight} kg</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>BMI</td>\r\n                            <td>{props.data.general?.bmi}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Chest Expansion</td>\r\n                            <td>{props.data.general?.chestExpansion} cm</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Vision</td>\r\n                            <td>{props.data.general?.vision}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BP</td>\r\n                            <td>{props.data.general?.bp}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Pulse</td>\r\n                            <td>{props.data.general?.pulse} BPM</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Oxygen Saturation</td>\r\n                            <td>{props.data.general?.oxygenSaturation} %</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <MedicalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setPatientsData={props.setPatientsData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalDialog = props => {\r\n\r\n    const [txtAllergies, setTxtAllergies] = useState('')\r\n    const [chkAllergies, setChkAllergies] = useState(props.data?.general.allergies?.length !== 0 ? false : true);\r\n    const [txtManagingOrg, setTxtManagingOrg] = useState(props.data.managingOrganization)\r\n\r\n    const [bloodGroup, setBloodGroup] = useState(props.data?.general?.bloodGroup);\r\n    const [height, setHeight] = useState(props.data?.general?.height);\r\n    const [weight, setWeight] = useState(props.data?.general?.weight);\r\n    const [vision, setVision] = useState(props.data?.general?.vision);\r\n    const [chestExpansion, setChestExpansion] = useState(props.data?.general?.chestExpansion);\r\n    const [bloodPressure, setBloodPressure] = useState(props.data?.general?.bp);\r\n    const [pulse, setPulse] = useState(props.data?.general?.pulse);\r\n    const [oxygenSaturation, setOxygenSaturation] = useState(props.data?.general?.oxygenSaturation);\r\n    const [bmi, setBmi] = useState(props.data?.general?.bmi);\r\n\r\n    const [selectedAllergies, setSelectedAllergies] = useState(Object.keys(props.data?.allergies).length > 0 ? [...props.data?.allergies?.value] : []);\r\n    const allergiesList = ['Lactose', 'Soy', 'Seafood', 'Nuts', 'Eggs', 'Fish', 'Mushroom', 'Gluten', 'Penicillin', 'Sulpha drugs', 'Local anaesthesia',\r\n        'Aspirin', 'Insulin', 'X-Ray dye', 'Pollen', 'Mould', 'Pets', 'Other']\r\n\r\n    const allergiesMap = allergiesList.map((item, index) => {\r\n        return (<option key={index} value={item}>{item}</option>)\r\n    })\r\n\r\n    const addAllergiesToList = selItem => {\r\n        //Ensure that the selected item is not in the list...\r\n        if (selectedAllergies.indexOf(selItem) === -1) {\r\n            //Item is not found in the list...\r\n            setSelectedAllergies([...selectedAllergies, selItem])\r\n\r\n            //Also, remove this item from the original list.\r\n            allergiesList.splice(allergiesList.indexOf(selItem), 1)\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (parseInt(height) === 0 || parseInt(weight) === 0) {\r\n            //Avoid NaN\r\n            setBmi(0);\r\n        } else {\r\n            setBmi((parseInt(height) / parseInt(weight)).toString().substring(0, 4))\r\n        }\r\n\r\n    }, [height, weight])\r\n\r\n    const handleBlur = (minValue, maxValue, inputValue, item) => {\r\n        //Check for split values in blood pressure and vision\r\n        if (item === 'bloodPressure' || item === 'vision') {\r\n            //Proceed to do the rest...\r\n            const splitValue = inputValue.split(\"/\");\r\n            if (splitValue[1] > maxValue || splitValue[0] < minValue) {\r\n                //Doesnt work...\r\n                props.showToast('Acceptable range of values for ' + item + ' is between ' + minValue + ' and ' + maxValue + '.', 'exclamation');\r\n                const itemElt = document.getElementById(item)\r\n                itemElt.classList.add('error-border')\r\n                itemElt.focus();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (inputValue > maxValue || inputValue < minValue) {\r\n            //Beyond range\r\n            props.showToast('Acceptable range of values for ' + item + ' is between ' + minValue + ' and ' + maxValue + '.', 'exclamation');\r\n            const itemElt = document.getElementById(item)\r\n            itemElt.classList.add('error-border')\r\n            itemElt.focus();\r\n        }\r\n    }\r\n\r\n    const updateMedicalDetails = () => {\r\n        //update just the personal details contained here...\r\n        if (height === \"\" || height < 0 || height > 500) {\r\n            props.showToast(\"Enter proper value for height to proceed.\", 'exclamation');\r\n            return;\r\n        }\r\n        if (weight === \"\" || weight < 0 || weight > 200) {\r\n            props.showToast(\"Enter proper value for weight to proceed.\", 'exclamation');\r\n            return;\r\n        }\r\n        if (chestExpansion === \"\" || chestExpansion < 2 || chestExpansion > 5) {\r\n            props.showToast(\"Enter proper value for Chest Expansion to proceed.\", 'exclamation');\r\n            return;\r\n        }\r\n        if (vision === \"\") {\r\n            props.showToast(\"Enter proper value for Chest Expansion to proceed.\", 'exclamation');\r\n            return;\r\n        }\r\n        if (bloodPressure === \"\") {\r\n            props.showToast(\"Enter proper value for Blood pressure to proceed.\", 'exclamation');\r\n            return;\r\n        }\r\n        if (pulse === \"\" || pulse < 0 || pulse > 200) {\r\n            props.showToast(\"Enter proper value for pulse to proceed.\", 'exclamation');\r\n            return;\r\n        }\r\n        if (oxygenSaturation === \"\" || oxygenSaturation < 0 || oxygenSaturation > 100) {\r\n            props.showToast(\"Enter proper value for oxygen saturation to proceed.\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            allergies: { value: [...selectedAllergies] },\r\n            general: {\r\n                \"bloodGroup\": bloodGroup,\r\n                \"height\": height,\r\n                \"weight\": weight,\r\n                \"bmi\": bmi,\r\n                \"chestExpansion\": chestExpansion,\r\n                \"vision\": vision,\r\n                \"bp\": bloodPressure,\r\n                \"pulse\": pulse,\r\n                \"oxygenSaturation\": oxygenSaturation\r\n            },\r\n            managingOrganization: txtManagingOrg\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response?.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <div className='check-box'>\r\n                                <label>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    id='chkAllergies'\r\n                                    value={chkAllergies}\r\n                                    onChange={e => setChkAllergies(!chkAllergies)}\r\n                                    className='custom-checkbox'\r\n                                    /> Allergies\r\n                            </label>\r\n                            </div>\r\n\r\n                            <select\r\n                                id=\"txtAllergies\"\r\n                                className={chkAllergies ? \"form-control mb-1\" : 'd-none'}\r\n                                value={txtAllergies}\r\n                                onChange={e => {\r\n                                    setTxtAllergies(e.target.value)\r\n                                    addAllergiesToList(e.target.value);\r\n                                }}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                {allergiesMap}\r\n                            </select>\r\n                            {selectedAllergies.length > 0 && chkAllergies &&\r\n                                <div className='sel-items'>\r\n                                    {selectedAllergies.join(\", \")}\r\n                                    <button onClick={() => setSelectedAllergies([])} className='btn-grey' style={{ float: 'right' }}>Clear</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row d-none\">\r\n                        <div className='input-group'>\r\n                            <label>Managing Organization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtManagingOrg\"\r\n                                value={txtManagingOrg}\r\n                                onChange={e => setTxtManagingOrg(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"ABC Healthcare\">ABC Healthcare</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>Blood Group</label>\r\n                            <select\r\n                                id=\"bloodGroup\"\r\n                                className=\"form-control\"\r\n                                value={bloodGroup}\r\n                                onChange={e => setBloodGroup(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"A+\">A+</option>\r\n                                <option value=\"A-\">A-</option>\r\n                                <option value=\"B+\">B+</option>\r\n                                <option value=\"B-\">B-</option>\r\n                                <option value=\"AB+\">AB+</option>\r\n                                <option value=\"AB-\">AB-</option>\r\n                                <option value=\"O+\">O+</option>\r\n                                <option value=\"O-\">O-</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Height (cm)</label>\r\n                            <input\r\n                                id=\"height\"\r\n                                className=\"form-control\"\r\n                                value={height}\r\n                                onChange={e => {\r\n                                    setHeight(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border')\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(0, 500, height, 'height')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Weight (kg)</label>\r\n                            <input\r\n                                id=\"weight\"\r\n                                className=\"form-control\"\r\n                                value={weight}\r\n                                onChange={e => {\r\n                                    setWeight(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border')\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(0, 300, weight, 'weight')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BMI</label>\r\n                            <input\r\n                                id=\"bmi\"\r\n                                className=\"form-control\"\r\n                                value={bmi}\r\n                                onChange={e => setBmi(e.target.value)}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Chest Expansion (cm)</label>\r\n                            <input\r\n                                id=\"chestExpansion\"\r\n                                className=\"form-control\"\r\n                                value={chestExpansion}\r\n                                onChange={e => {\r\n                                    setChestExpansion(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(2, 5, chestExpansion, 'chestExpansion')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Vision (a/b)</label>\r\n                            <input\r\n                                id=\"vision\"\r\n                                className=\"form-control\"\r\n                                value={vision}\r\n                                onChange={e => {\r\n                                    setVision(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                onBlur={() => handleBlur(0, 6, vision, 'vision')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BP (SYs/DIas)</label>\r\n                            <input\r\n                                id=\"bloodPressure\"\r\n                                className=\"form-control\"\r\n                                value={bloodPressure}\r\n                                onChange={e => {\r\n                                    setBloodPressure(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                onBlur={() => handleBlur(10, 250, bloodPressure, 'bloodPressure')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Pulse (BPM)</label>\r\n                            <input\r\n                                id=\"pulse\"\r\n                                className=\"form-control\"\r\n                                value={pulse}\r\n                                onChange={e => {\r\n                                    setPulse(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(0, 200, pulse, 'pulse')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Oxygen Saturation (%)</label>\r\n                            <input\r\n                                id=\"oxygenSaturation\"\r\n                                className=\"form-control\"\r\n                                value={oxygenSaturation}\r\n                                onChange={e => {\r\n                                    setOxygenSaturation(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(1, 100, oxygenSaturation, 'oxygenSaturation')}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Lifestyle = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Lifestyle</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Smoking Habit</td>\r\n                            <td>{props.data?.lifeStyle?.smokingHabbit}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Alcohol Consumption</td>\r\n                            <td>{props.data?.lifeStyle?.alcoholConsumption}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Activity Level</td>\r\n                            <td>{props.data?.lifeStyle?.activityLevel}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Food Preference</td>\r\n                            <td>{props.data?.lifeStyle?.foodPreference}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <LifestyleDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n                setPatientsData={props.setPatientsData}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LifestyleDialog = props => {\r\n\r\n    const [txtSmokingHabits, setTxtSmokingHabits] = useState(props.data.lifeStyle?.smokingHabbit)\r\n    const [txtAlcohol, setTxtAlcohol] = useState(props.data.lifeStyle?.alcoholConsumption)\r\n    const [txtActivityLevel, setTxtActivityLevel] = useState(props.data.lifeStyle?.activityLevel)\r\n    const [txtFoodPreference, setTxtFoodPreference] = useState(props.data.lifeStyle?.foodPreference)\r\n\r\n    //Others\r\n    const [txtAnyMedicationTaken, setTxtAnyMedicationTaken] = useState('No');\r\n    const [txtRelapse, setTxtRelapse] = useState('No');\r\n    const [txtWhenQuit, setTxtWhenQuit] = useState('');\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            lifeStyle: {\r\n                \"smokingHabbit\": txtSmokingHabits,\r\n                \"alcoholConsumption\": txtAlcohol,\r\n                \"activityLevel\": txtActivityLevel,\r\n                \"foodPreference\": txtFoodPreference\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Lifestyle</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Smoking Habits</label>\r\n                            <select\r\n                                id=\"txtSmokingHabits\"\r\n                                value={txtSmokingHabits}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtSmokingHabits(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"I don't smoke\">I don't smoke</option>\r\n                                <option value=\"I used to, but I quit\">I used to, but I quit</option>\r\n                                <option value=\"1-2/day\">1-2/day</option>\r\n                                <option value=\"3-5/day\">3-5/day</option>\r\n                                <option value=\"5-10/day\">5-10/day</option>\r\n                                <option value=\"> 10/day\">{'> 10/day'}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className={txtSmokingHabits === \"I used to, but I quit\" ? \"form-row-3\" : \"d-none\"}>\r\n                        <div className='input-group'>\r\n                            <label>Any Medication Taken?</label>\r\n                            <select\r\n                                id=\"txtAnyMedicationTaken\"\r\n                                value={txtAnyMedicationTaken}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtAnyMedicationTaken(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Any relapse?</label>\r\n                            <select\r\n                                id=\"txtRelapse\"\r\n                                value={txtRelapse}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtRelapse(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>When did you quit?</label>\r\n                            <input\r\n                                id=\"txtWhenQuit\"\r\n                                value={txtWhenQuit}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtWhenQuit(e.target.value)}\r\n                                type='date'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Alcohol Consumption</label>\r\n                            <select\r\n                                id=\"txtAlcohol\"\r\n                                value={txtAlcohol}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtAlcohol(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Non-Drinker\">Non-Drinker</option>\r\n                                <option value=\"Rare\">Rare</option>\r\n                                <option value=\"Social\">Social</option>\r\n                                <option value=\"Regular\">Regular</option>\r\n                                <option value=\"Heavy\">Heavy</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Activity Level</label>\r\n                            <select\r\n                                id=\"txtActivityLevel\"\r\n                                value={txtActivityLevel}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtActivityLevel(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Sedentary (Low)\">Sedentary (Low)</option>\r\n                                <option value=\"Moderately Active (Normal)\">Moderately Active (Normal)</option>\r\n                                <option value=\"Active (High)\">Active (High)</option>\r\n                                <option value=\"Athletic (Very High)\">Athletic (Very High)</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Food Preference</label>\r\n                            <select\r\n                                id=\"txtFoodPreference\"\r\n                                value={txtFoodPreference}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtFoodPreference(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Vegetarian\">Vegetarian</option>\r\n                                <option value=\"Non-Vegetarian\">Non-Vegetarian</option>\r\n                                <option value=\"Eggetarian\">Eggetarian</option>\r\n                                <option value=\"Vegan\">Vegan</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { ApiPath } from \"../../assets/common/base-url\";\r\n\r\nexport const Others = props => {\r\n\r\n    const [cbxDate, setCbxDate] = useState('');\r\n    const [chkNotSure, setChkNotSure] = useState(false);\r\n    const [wasHospitalized, setWasHospitalized] = useState(false);\r\n    const [cbxDateFrom, setCbxDateFrom] = useState('');\r\n    const [cbxDateTo, setCbxDateTo] = useState('');\r\n    const [hasFamilyMedicalHistory, setHasFamilyMedicalHistory] = useState(false);\r\n    const [cbxDateOfMedicalHistory, setCbxDateOfMedicalHistory] = useState('');\r\n    const [chkNotSureMedicalHistory, setChkNotSureMedicalHistory] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //Use effect on form load to set the variables....\r\n        const othersData = props.data.others;\r\n\r\n        if (othersData.length > 0) {\r\n            //First item...\r\n            const upperBound = othersData.length - 1;\r\n\r\n            if (othersData[upperBound - 2].answer === \"Not sure\") {\r\n                setChkNotSure(!chkNotSure)\r\n            } else if (othersData[upperBound - 2].answer !== \"\") {\r\n                //A date was set...\r\n                setCbxDate(othersData[upperBound - 2].answer)\r\n            }\r\n\r\n            //Second item...\r\n            if (othersData[upperBound - 1].answer === \"No\") {\r\n                //set the radio buttons...\r\n                setWasHospitalized(false);\r\n            } else {\r\n                setWasHospitalized(true);\r\n                //Date exists so split...\r\n                const splitDate = othersData[upperBound - 1].answer.split(\"to\");\r\n                setCbxDateFrom(splitDate[0].trim())\r\n                setCbxDateTo(splitDate[1].trim())\r\n            }\r\n\r\n            //The last item...\r\n            if (othersData[upperBound].answer === \"No\") {\r\n                //Disable the checkbox...\r\n                setHasFamilyMedicalHistory(false);\r\n            } else {\r\n                setHasFamilyMedicalHistory(true);\r\n                if (othersData[upperBound].answer === \"Not sure\") {\r\n                    setChkNotSureMedicalHistory(true);\r\n                } else {\r\n                    //The date...\r\n                    setCbxDateOfMedicalHistory(othersData[upperBound].answer);\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [])\r\n\r\n    const updateRecords = () => {\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        const questions = [];\r\n\r\n        //First question\r\n        let obj = {}\r\n        if (cbxDate === \"\") {\r\n            if (chkNotSure) {\r\n                obj = { question: \"When did you first encounter a health concern?\", answer: \"Not sure\" }\r\n            } else {\r\n                obj = { question: \"When did you first encounter a health concern?\", answer: \"\" }\r\n            }\r\n        } else {\r\n            obj = { question: \"When did you first encounter a health concern?\", answer: cbxDate }\r\n        }\r\n\r\n        questions.push(obj);\r\n\r\n        //Second question\r\n        let obj2 = {};\r\n        if (wasHospitalized) {\r\n            if (cbxDateFrom === \"\" || cbxDateTo === \"\") {\r\n                props.showToast(\"Enter the period of hospitalization before you proceed.\", 'exclamation');\r\n                props.setIsLoaderVisible(false)\r\n                return;\r\n            }\r\n\r\n            //end of validation, thus proceed...\r\n            else {\r\n                obj2 = { question: \"Have you ever been hospitalised for a long period?\", answer: cbxDateFrom + \" to \" + cbxDateTo }\r\n            }\r\n        } else {\r\n            obj2 = { question: \"Have you ever been hospitalised for a long period?\", answer: \"No\" }\r\n        }\r\n\r\n        questions.push(obj2);\r\n\r\n\r\n        //Third question\r\n        let obj3 = {};\r\n        if (hasFamilyMedicalHistory) {\r\n            //Has a family medical history, thus should have date...\r\n            if (cbxDateOfMedicalHistory === \"\" && !chkNotSureMedicalHistory) {\r\n                //Conflicting...\r\n                props.showToast(\"Choose a date or family medical history. If not sure, select the option 'Not sure'.\", 'exclamation');\r\n                props.setIsLoaderVisible(false)\r\n\r\n                return;\r\n            } else {\r\n                //Proceed... All is fine...\r\n                if (chkNotSureMedicalHistory) {\r\n                    obj3 = { question: \"Do you have any family medical history?\", answer: \"Not sure\" }\r\n                } else {\r\n                    obj3 = { question: \"Do you have any family medical history?\", answer: cbxDateOfMedicalHistory }\r\n                }\r\n            }\r\n        } else {\r\n            obj3 = { question: \"Do you have any family medical history?\", answer: \"No\" }\r\n        }\r\n\r\n        questions.push(obj3);\r\n\r\n        const data = {\r\n           others: [...questions]\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n\r\n                    props.showToast(`Update Successful!`, 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='tab-page-content'>\r\n                <div className=\"page-header\">\r\n                    <h2>Other details</h2>\r\n                </div>\r\n                <div className='page-body'>\r\n                    <div className='questions'>\r\n                        <div className='question'>\r\n                            <p><span>Q1</span>When did you first encounter a health concern?</p>\r\n                        </div>\r\n                        <div className='answer'>\r\n                            <div className='input-group'>\r\n                                <input\r\n                                    className='form-control'\r\n                                    id='cbxDate'\r\n                                    value={cbxDate}\r\n                                    onChange={e => setCbxDate(e.target.value)}\r\n                                    type='date'\r\n                                    disabled={chkNotSure}\r\n                                />\r\n                            </div>\r\n                            <div className='check-box'>\r\n                                <label>\r\n                                    <input\r\n                                        className='custom-checkbox'\r\n                                        id='chkNotSure'\r\n                                        value={chkNotSure}\r\n                                        onChange={e => setChkNotSure(!chkNotSure)}\r\n                                        type='checkbox'\r\n                                    /> Not sure\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='questions'>\r\n                        <div className='question'>\r\n                            <p><span>Q2</span>Have you ever been hospitalised for a long period?</p>\r\n                            <div className=\"radio-group\">\r\n                                <div className=\"radio-button\">\r\n                                    <label>\r\n                                        <input\r\n                                            type='radio'\r\n                                            className='custom-radio'\r\n                                            name='hospitalized'\r\n                                            checked={wasHospitalized}\r\n                                            onChange={() => setWasHospitalized(true)}\r\n                                        />\r\n                                        Yes\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"radio-button\">\r\n                                    <label>\r\n                                        <input\r\n                                            type='radio'\r\n                                            className='custom-radio'\r\n                                            name='hospitalized'\r\n                                            checked={!wasHospitalized}\r\n                                            onChange={() => setWasHospitalized(false)}\r\n                                        />\r\n                                        No\r\n                                    </label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='answer'>\r\n                            <div className='form-row-2'>\r\n                                <div className='input-group'>\r\n                                    <label>From</label>\r\n                                    <input\r\n                                        type='date'\r\n                                        className='form-control'\r\n                                        id='cbxDateFrom'\r\n                                        value={cbxDateFrom}\r\n                                        onChange={e => setCbxDateFrom(e.target.value)}\r\n                                        disabled={!wasHospitalized}\r\n                                    />\r\n                                </div>\r\n                                <div className='input-group'>\r\n                                    <label>To</label>\r\n                                    <input\r\n                                        type='date'\r\n                                        className='form-control'\r\n                                        id='cbxDateTo'\r\n                                        value={cbxDateTo}\r\n                                        onChange={e => setCbxDateTo(e.target.value)}\r\n                                        disabled={!wasHospitalized}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='questions'>\r\n                        <div className='question'>\r\n                            <p><span>Q3</span>Do you have any family medical history\r\n                                (Does anyone in your family have diabetes/thyroid/heart/liver/kidney etc issues)?</p>\r\n                            <div className=\"radio-group\">\r\n                                <div className=\"radio-button\">\r\n                                    <label>\r\n                                        <input\r\n                                            type='radio'\r\n                                            className='custom-radio'\r\n                                            name='medicalHistory'\r\n                                            checked={hasFamilyMedicalHistory}\r\n                                            onChange={() => setHasFamilyMedicalHistory(true)}\r\n                                        />\r\n                                        Yes\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"radio-button\">\r\n                                    <label>\r\n                                        <input\r\n                                            type='radio'\r\n                                            className='custom-radio'\r\n                                            name='medicalHistory'\r\n                                            checked={!hasFamilyMedicalHistory}\r\n                                            onChange={() => setHasFamilyMedicalHistory(false)}\r\n                                        />\r\n                                        No\r\n                                    </label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='answer'>\r\n                            <div className='form-row-2'>\r\n                                <div className='input-group'>\r\n                                    <label>When were first symptoms noticed?</label>\r\n                                    <input\r\n                                        type='date'\r\n                                        className='form-control'\r\n                                        id='cbxDateofMedicalHistory'\r\n                                        value={cbxDateOfMedicalHistory}\r\n                                        onChange={e => setCbxDateOfMedicalHistory(e.target.value)}\r\n                                        disabled={!hasFamilyMedicalHistory || chkNotSureMedicalHistory}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='check-box'>\r\n                                <label>\r\n                                    <input\r\n                                        className='custom-checkbox'\r\n                                        id='chkNotSure'\r\n                                        value={chkNotSureMedicalHistory}\r\n                                        onChange={e => setChkNotSureMedicalHistory(!chkNotSureMedicalHistory)}\r\n                                        type='checkbox'\r\n                                        disabled={!hasFamilyMedicalHistory}\r\n                                    /> Not sure\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='others-botton-container'>\r\n                        <button\r\n                            className='btn-main'\r\n                            onClick={updateRecords}>\r\n                            <i className='icofont-upload-alt' /> Update Records</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// Convert file to base64 string\r\nexport const fileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { fileToBase64 } from '../assets/common/file-to-base64';\r\n\r\nconst FileInput = (props) => {\r\n    /**\r\n     * My Custom file input, which accepts\r\n     * a few props like setFileOutput function, returning\r\n     * the object to base64 format, and the acceptFileTypes,\r\n     * which specifies the expected file input types...\r\n     */\r\n    const [tempPix, setTempPix] = useState('');\r\n    const [outputText, setOutputText] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setTempPix(response.toString());\r\n                setOutputText(file.name);\r\n\r\n                //Also, set the props input value...\r\n                props.setFileOutput(response.toString());\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const removeFile = () => {\r\n        setTempPix('');\r\n        const uploadFile = document.querySelector('#uploadFile');\r\n        uploadFile.value = '';\r\n        props.setFileOutput('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err, \"exclamation\");\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    const bgColor = tempPix ? 'var(--success-bg)' : '';\r\n\r\n    return (\r\n        <div className=\"upload-file-area\" style={{ background: bgColor }}>\r\n            <div className={tempPix ? 'd-none' : ''}>\r\n                <i className='icofont-cloud-upload' />\r\n                <label>Drop files to upload or </label>\r\n                <button className=\"btn-upload\">\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"uploadFile\"\r\n                        id=\"uploadFile\"\r\n                        accept={props.acceptFileTypes}\r\n                        onChange={handleChange}\r\n                    />\r\n                    browse\r\n                </button>\r\n            </div>\r\n            <label className={tempPix ? '' : 'd-none'}><span>Attached File: </span>\r\n                {outputText} <button className='btn-upload' onClick={removeFile}>\r\n                    remove</button>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileInput;\r\n","import { useState } from 'react'\r\nimport { ApiPath } from '../../assets/common/base-url'\r\nimport FileInput from '../../components/file-input'\r\n\r\nexport const MedicalHistoryDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState('')\r\n    const [txtAddMedication, setTxtAddMedication] = useState('')\r\n    const [cbxIsOnMedications, setCbxIsOnMedications] = useState('')\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState('')\r\n    const [txtDate, setTxtDate] = useState('');\r\n    const [txtDoctor, setTxtDoctor] = useState('');\r\n\r\n    \r\n    const updateMedicalHistoryDetails = () => {\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        const data = (txtCurrentMedications) ? {\r\n            [props.updateField]: [{\r\n                type: cbxIsOnMedications,\r\n                name: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                records: txtCurrentMedications,\r\n                timeStamp: txtDate,\r\n                doctorName: txtDoctor\r\n            }]\r\n        }\r\n            :\r\n            {\r\n                [props.updateField]: [{\r\n                    type: cbxIsOnMedications,\r\n                    name: txtAddMedication,\r\n                    description: txtMedicationDescription,\r\n                    timeStamp: txtDate,\r\n                    doctorName: txtDoctor\r\n                }]\r\n            }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-drug\"></i> Add {props.title}</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div className=\"form-row\" style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label style={{ transform: 'translateY(-10px)', color: '#999' }}><i className=\"icofont-drug\"></i> {props.title}</label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>{props.questionString}</label>\r\n                                <select\r\n                                    id=\"cbxIsOnMedications\"\r\n                                    value={cbxIsOnMedications}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxIsOnMedications(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Add {props.title}</label>\r\n                                <input\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Date of {props.title}</label>\r\n                                <input\r\n                                    id=\"txtDate\"\r\n                                    value={txtDate}\r\n                                    onChange={e => setTxtDate(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? 'form-row' : 'd-none'}>\r\n                            <div className=\"input-group\">\r\n                                <label>Select File (optional)</label>\r\n                                <FileInput\r\n                                    setFileOutput={setTxtCurrentMedications}\r\n                                    acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={(cbxIsOnMedications === \"Yes\" && props.title === 'Prescription') ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Doctor's Name</label>\r\n                                <input\r\n                                    id=\"txtDoctor\"\r\n                                    value={txtDoctor}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtDoctor(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalHistoryDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const ImageDialog = props => {\r\n\r\n    const imageSource = props.src;\r\n\r\n    //Find the image components...\r\n    const imageExtension = imageSource.toString().indexOf(\"pdf\") > -1 ? \"pdf\" : \"other\";\r\n\r\n    const dialogClass = props.setImageDisplay\r\n        ? \"dialog-background image-dialog fade\"\r\n        : \"dialog-background image-dialog\";\r\n\r\n\r\n    const extension = imageExtension;\r\n    let imageContainerDisplay;\r\n    let embedContainer;\r\n\r\n    if (extension === \"pdf\") {\r\n        embedContainer = \"embed-container\";\r\n        imageContainerDisplay = \"image-container d-none\";\r\n\r\n    } else {\r\n        embedContainer = \"embed-container d-none\";\r\n        imageContainerDisplay = \"image-container\";\r\n    }\r\n\r\n    const closeMe = () => {\r\n        props.hideImageDialog(false);\r\n    }\r\n\r\n    return (\r\n        <div className={dialogClass}>\r\n            <div className={imageContainerDisplay}>\r\n                <div className=\"image-viewer\">\r\n                    <span className=\"close\">&times;</span>\r\n                    <img\r\n                        id=\"full-image\"\r\n                        alt=\"\"\r\n                        src={imageSource}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={embedContainer}>\r\n                <embed\r\n                    src={imageSource}\r\n                    width=\"100%\"\r\n                    height=\"95%\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-row-3-1\">\r\n                <div></div>\r\n                <button\r\n                    className=\"btn-main\"\r\n                    id=\"btnClose\"\r\n                    onClick={closeMe}\r\n                    style={{ width: 300 }}\r\n                >Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { shortDateString } from \"../assets/common/operations\";\r\n\r\nexport const MedicationRowItem = props => {\r\n\r\n    const rowItem = props.item.records;\r\n    const dateValue = props.item.timeStamp ? ` - (${shortDateString(props.item.timeStamp)})` : '';\r\n\r\n    return (\r\n        // // <div className='medications-container'>\r\n        // //     <div>\r\n        // //         <h3>Name</h3>\r\n        // //         <p>{props.item.name}</p>\r\n        // //     </div>\r\n        // //     <div>\r\n        // //         <h3>Date</h3>\r\n        // //         <p>{props.item.timeStamp}</p>\r\n        // //     </div>\r\n        // //     <div>\r\n        // //         <h3>Description</h3>\r\n        // //         <p>{props.item.description}</p>\r\n        // //     </div>\r\n        // //     <div>\r\n        // //         {(props.item.records[0] === \"\")\r\n        // //             ? <p>No attachments</p>\r\n        // //             : <>\r\n        // //                 <h3>Attachment</h3>\r\n        // //                 <button\r\n        // //                     className='attachment-preview'\r\n        // //                     onClick={() => props.showImageDialog(props.item.records[0])}>\r\n        // //                     Preview...\r\n        // //                 </button>\r\n        // //             </>}\r\n        // //     </div>\r\n        // // </div>\r\n        <div className='medications-container'>\r\n            <div className='container-header'>\r\n                <h3>{props.nameField}{dateValue}</h3>\r\n            </div>\r\n            <div className=\"container-body\">\r\n                <div>\r\n                    <p>{props.item.description}</p>\r\n                </div>\r\n                <div>\r\n                    <p>{props.item.doctorName}</p>\r\n                </div>\r\n                <div>\r\n                    {(!rowItem)\r\n                        ? <p>No attachment</p>\r\n                        : <>\r\n                            <button\r\n                                className='attachment-preview'\r\n                                onClick={() => props.showImageDialog(props.item.records)}>\r\n                                Attachment\r\n                            </button>\r\n                        </>}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport { ApiPath } from '../../assets/common/base-url'\r\nimport FileInput from '../../components/file-input'\r\n\r\nexport const SurgeriesDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState('')\r\n    const [txtAddMedication, setTxtAddMedication] = useState('')\r\n    const [cbxIsOnMedications, setCbxIsOnMedications] = useState('')\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState('')\r\n    const [txtDate, setTxtDate] = useState('')\r\n\r\n    const updateMedicalHistoryDetails = () => {\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        const data = (txtCurrentMedications) ? {\r\n            [props.updateField]: [{\r\n                type: cbxIsOnMedications,\r\n                [props.updateField]: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                records: txtCurrentMedications,\r\n                timeStamp: txtDate\r\n            }]\r\n        }\r\n            :\r\n            {\r\n                [props.updateField]: [{\r\n                    type: cbxIsOnMedications,\r\n                    [props.updateField]: txtAddMedication,\r\n                    description: txtMedicationDescription,\r\n                    timeStamp: txtDate\r\n                }]\r\n            }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-drug\"></i> Add {props.title}</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div className=\"form-row\" style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label style={{ transform: 'translateY(-10px)', color: '#999' }}><i className=\"icofont-drug\"></i> {props.title}</label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>{props.questionString}</label>\r\n                                <select\r\n                                    id=\"cbxIsOnMedications\"\r\n                                    value={cbxIsOnMedications}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxIsOnMedications(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Add {props.title}</label>\r\n                                <select\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                    {props.inputArray.map((item, index) => {\r\n                                        return (<option key={index} value={item}>{item}</option>)\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Date of {props.title}</label>\r\n                                <input\r\n                                    id=\"txtDate\"\r\n                                    onChange={e => setTxtDate(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    value={txtDate}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? 'form-row' : 'd-none'}>\r\n                            <div className=\"input-group\">\r\n                                <label>Select File (optional)</label>\r\n                                <FileInput\r\n                                    setFileOutput={setTxtCurrentMedications}\r\n                                    acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalHistoryDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\nimport { SurgeriesDialog } from \"../others/sugeries-dialog\";\r\n\r\nexport const Surgeries = props => {\r\n\r\n    const [medicationsArray, setMedicationsArray] = useState(props.data.surgeries)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [medicationsExist, setMedicationsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => setMedicationsArray(props.data.surgeries), [props.data])\r\n\r\n    useEffect(() => {\r\n        medicationsArray.length === 0\r\n            ? setMedicationsExist(false)\r\n            : setMedicationsExist(true);\r\n\r\n    }, [medicationsArray])\r\n\r\n\r\n    //Set the array of medications to show...\r\n    const currentMeds = medicationsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n                nameField={item.name || item.surgeries}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                medicationsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Surgeries</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No surgeries...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add surgery\r\n            </button>\r\n\r\n            {/* Other parts of the page */}\r\n\r\n\r\n            {dialogVisible && <SurgeriesDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).surgeries}\r\n                updateField={'surgeries'}\r\n                questionString={\"Have you had a surgery before?\"}\r\n                title={\"Surgery\"}\r\n                inputArray={['Heart', 'Liver', 'Kidney', 'Lungs', 'Brain', 'Facial/Cosmetic', 'Other']}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\nimport { SurgeriesDialog } from \"../others/sugeries-dialog\";\r\n\r\nexport const Injuries = props => {\r\n\r\n    const [medicationsArray, setMedicationsArray] = useState(props.data.injuries)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [medicationsExist, setMedicationsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n    useEffect(() => setMedicationsArray(props.data.injuries), [props.data])\r\n\r\n    useEffect(() => {\r\n        medicationsArray.length === 0\r\n            ? setMedicationsExist(false)\r\n            : setMedicationsExist(true);\r\n\r\n    }, [medicationsArray])\r\n\r\n\r\n    //Set the array of medications to show...\r\n    const currentMeds = medicationsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n                nameField={item.name || item.injuries}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                medicationsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Injuries</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No injuries...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add injury\r\n            </button>\r\n\r\n            {/* Other parts of the page */}\r\n\r\n\r\n            {dialogVisible && <SurgeriesDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).injuries}\r\n                updateField={'injuries'}\r\n                questionString={\"Have you had an injury before?\"}\r\n                title={\"Injury\"}\r\n                inputArray={['Burns', 'Spinal cord injury', 'Spinal fracture', 'Rib fracture',\r\n                    'Jaw fracture', 'Concussion', 'Amputation', 'Traumatic brain injury', 'Facial trauma',\r\n                    'Acoustic trauma', 'Other']}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useState } from 'react'\r\nimport { ApiPath } from '../../assets/common/base-url'\r\nimport FileInput from '../../components/file-input'\r\n\r\nexport const DiseasesDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState('')\r\n    const [txtAddMedication, setTxtAddMedication] = useState('')\r\n    const [cbxIsOnMedications, setCbxIsOnMedications] = useState('')\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState('')\r\n    const [txtDate, setTxtDate] = useState('')\r\n\r\n    const updateMedicalHistoryDetails = () => {\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        const data = (txtCurrentMedications) ? {\r\n            [props.updateField]: [{\r\n                type: cbxIsOnMedications,\r\n                illness: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                records: txtCurrentMedications,\r\n                timeStamp: txtDate\r\n            }]\r\n        }\r\n            :\r\n            {\r\n                [props.updateField]: [{\r\n                    type: cbxIsOnMedications,\r\n                    illness: txtAddMedication,\r\n                    description: txtMedicationDescription,\r\n                    timeStamp: txtDate\r\n                }]\r\n            }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-drug\"></i> Add {props.title}</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div className=\"form-row\" style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label style={{ transform: 'translateY(-10px)', color: '#999' }}><i className=\"icofont-drug\"></i> {props.title}</label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>{props.questionString}</label>\r\n                                <select\r\n                                    id=\"cbxIsOnMedications\"\r\n                                    value={cbxIsOnMedications}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxIsOnMedications(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Add {props.title}</label>\r\n                                <select\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                    {props.inputArray.map((item, index) => {\r\n                                        return (<option key={index} value={item}>{item}</option>)\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Date of {props.title}</label>\r\n                                <input\r\n                                    id=\"txtDate\"\r\n                                    onChange={e => setTxtDate(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    value={txtDate}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? 'form-row' : 'd-none'}>\r\n                            <div className=\"input-group\">\r\n                                <label>Select File (optional)</label>\r\n                                <FileInput\r\n                                    setFileOutput={setTxtCurrentMedications}\r\n                                    acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalHistoryDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\nimport { DiseasesDialog } from \"../others/diseases-dialog\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\n\r\nexport const ChronicDiseases = props => {\r\n\r\n    const [medicationsArray, setMedicationsArray] = useState(props.data.chronicDiseases)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [medicationsExist, setMedicationsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => setMedicationsArray(props.data.chronicDiseases), [props.data])\r\n\r\n    useEffect(() => {\r\n        medicationsArray.length === 0\r\n            ? setMedicationsExist(false)\r\n            : setMedicationsExist(true);\r\n\r\n    }, [medicationsArray])\r\n\r\n\r\n    //Set the array of medications to show...\r\n    const currentMeds = medicationsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n                nameField={item.name || item.illness  || item.chronicDiseases}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                medicationsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Chronic Diseases</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No Chronic Diseases...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add chronic disease\r\n            </button>\r\n\r\n            {/* Other parts of the page */}\r\n\r\n\r\n            {dialogVisible && <DiseasesDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).chronicDiseases}\r\n                updateField={'chronicDiseases'}\r\n                questionString={\"Do you have any chronic disease?\"}\r\n                title={\"Chronic Disease\"}\r\n                inputArray={['Diabetes', 'Hypertension', 'PCOS', 'Hypothyroidism', 'COPD',\r\n                    'Asthma', 'Heart disease', 'Arthritis', 'Mental illness/depression',\r\n                    'Fertility issues', 'Other']}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MedicalHistoryDialog } from \"../others/medical-history-dialog\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\n\r\nexport const PastPrescriptions = props => {\r\n\r\n    const [prescriptionsArray, setPrescriptionsArray] = useState(props.data.pastPrescriptions)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [prescriptionsExist, setPrescriptionsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPrescriptionsArray(props.data.pastPrescriptions)\r\n    }, [props.data])\r\n\r\n    useEffect(() => {\r\n        prescriptionsArray.length === 0\r\n            ? setPrescriptionsExist(false)\r\n            : setPrescriptionsExist(true);\r\n\r\n    }, [prescriptionsArray])\r\n\r\n\r\n    //Set the array of prescriptions to show...\r\n    const currentMeds = prescriptionsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n                nameField={item.name}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                prescriptionsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Past Prescriptions</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No Past Prescription...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add prescription\r\n            </button>\r\n\r\n            {dialogVisible && <MedicalHistoryDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).pastPrescriptions}\r\n                updateField={'pastPrescriptions'}\r\n                questionString={\"Have you taken any medicines in past?\"}\r\n                title={\"Prescription\"}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MedicalHistoryDialog } from \"../others/medical-history-dialog\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\nimport { Surgeries } from \"./surgeries\";\r\nimport { Injuries } from \"./injuries\";\r\nimport { ChronicDiseases } from \"./chronic-diseases\";\r\nimport { PastPrescriptions } from \"./past-prescriptions\";\r\n\r\nexport const DiagnosisReport = props => {\r\n\r\n    const [medicationsArray, setMedicationsArray] = useState(props.data.diagnosisReport)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [medicationsExist, setMedicationsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMedicationsArray(props.data.diagnosisReport)\r\n    }, [props.data])\r\n\r\n    useEffect(() => {\r\n        medicationsArray.length === 0\r\n            ? setMedicationsExist(false)\r\n            : setMedicationsExist(true);\r\n\r\n    }, [medicationsArray])\r\n\r\n\r\n    //Set the array of medications to show...\r\n    const currentMeds = medicationsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n                nameField={item.name}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='appointment'>\r\n            {/* <h2><i className='icofont-double-right'></i> Medical History</h2> */}\r\n            {\r\n                medicationsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Diagnosis Report</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No Diagnosis Report...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add diagnosis report\r\n            </button>\r\n\r\n            {/* Other parts of the page */}\r\n            <PastPrescriptions\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                setImageLink={setImageLink}\r\n                showImageDialog={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            <Surgeries\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                setImageLink={setImageLink}\r\n                showImageDialog={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            <Injuries\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                setImageLink={setImageLink}\r\n                showImageDialog={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            <ChronicDiseases\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                setImageLink={setImageLink}\r\n                showImageDialog={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n\r\n            {dialogVisible && <MedicalHistoryDialog\r\n                data={props.data}\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).diagnosisReport}\r\n                updateField={'diagnosisReport'}\r\n                questionString={\"Include a diagnosis report?\"}\r\n                title={\"Diagnosis Report\"}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n","import { NavBar } from \"../components/nav-bar\";\r\nimport { PatientTabHeaders } from \"./tab-pages/patient-tab-headers\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Contact } from \"./tab-pages/contact\";\r\nimport { Personal } from \"./tab-pages/personal\"\r\nimport { Medical } from \"./tab-pages/medical\";\r\nimport { Lifestyle } from \"./tab-pages/lifestyle\";\r\nimport { Others } from \"./tab-pages/others\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport { DiagnosisReport } from \"../dhp/medical-records/diagnosis-report\";\r\n\r\nconst Patients = props => {\r\n\r\n    const [patientsData, setPatientsData] = useState(() => JSON.parse(sessionStorage.getItem('patient')));\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n    const [picture, setPicture] = useState(() => JSON.parse(sessionStorage.getItem('patient')).photo);\r\n\r\n    const [tempPix, setTempPix] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setTempPix(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const removeFile = () => {\r\n        setTempPix('');\r\n        const uploadFile = document.querySelector('#uploadFile');\r\n        uploadFile.value = '';\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err, \"exclamation\");\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': tempPix,\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            'method': 'PUT',\r\n            'body': JSON.stringify(data)\r\n        };\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful!`, 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar\r\n                activeLink={2}\r\n                picture={picture}\r\n                data={patientsData}\r\n            />\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={tempPix ? tempPix : (picture || \"/portfolio/avatar.png\")}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Patient</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <div className={tempPix ? 'd-none' : ''}>\r\n                            <i className='icofont-cloud-upload' />\r\n                            <label>Drop files to upload or </label>\r\n                            <button className=\"btn-upload\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"uploadFile\"\r\n                                    id=\"uploadFile\"\r\n                                    accept={\".png, .jpg, .jpeg\"}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                browse\r\n                            </button>\r\n                        </div>\r\n                        <label className={tempPix ? '' : 'd-none'}><span>Attached File: </span>{outputText}<button className='btn-upload' onClick={removeFile}>remove</button></label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={tempPix ? \"btn-main mb-2\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            style={{ fontSize: '12px', width: '100%' }}\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{patientsData.name}</h2>\r\n                    </div>\r\n                    {/* <div className='box'>\r\n                        <h4>Profile Status</h4>\r\n                        <div className=\"percent\">\r\n                            <svg>\r\n                                <circle cx='70' cy='70' r='70'></circle>\r\n                                <circle id='secondCircle' cx='70' cy='70' r='70'></circle>\r\n                            </svg>\r\n                            <div className=\"number\">\r\n                                <h2>{percentComplete}<span>%</span></h2>\r\n                            </div>\r\n                            <h2 className='text'>Complete</h2>\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Update Profile</h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PatientTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 3 && <Medical\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 4 && <Lifestyle\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 5 && <DiagnosisReport\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 6 && <Others\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;\r\n","import { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n\r\n    const history = useHistory();\r\n    const buttonStyle = {\r\n        display: 'block',\r\n        background: 'transparent',\r\n        color: 'white',\r\n        outline: 'none',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        fontFamily: 'Poppins',\r\n        marginRight: '40px',\r\n    }\r\n\r\n    const signOut = () => {\r\n        //Reset the other variables....\r\n        sessionStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"id_val\", null);\r\n        localStorage.setItem('patient', null);\r\n        localStorage.setItem('token', null);\r\n\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"header-bar\">\r\n            <div className=\"header-bar-image\">\r\n                <Link to=\"/patients/profile\" ><img src=\"/mah-logo.png\" width=\"60\" />MAH Health Care</Link>\r\n            </div>\r\n            <button style={buttonStyle} onClick={signOut}>Sign Out</button>\r\n        </div>\r\n    );\r\n}\r\n","\r\nexport const DoctorsTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-karate\"></i>Portfolio\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{props.data.address}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailAddress}</td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [txtAddress, setTxtAddress] = useState(props.data.address ? [...props.data.address] : \"\");\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailAddress);\r\n\r\n    const updateContact = () => {\r\n        const data = {\r\n            address: [txtAddress],\r\n            emailAddress: txtEmail,\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Address</label>\r\n                            <textarea\r\n                                id=\"txtAddress\"\r\n                                value={txtAddress}\r\n                                onChange={e => setTxtAddress(e.target.value)}\r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={() => updateContact()}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Portfolio = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const specialization = props.data.specialization.certification\r\n        ? `${props.data?.specialization?.certification}, ${props.data?.specialization?.type}`\r\n        : \"\";\r\n\r\n    const license = props.data.license.certification\r\n        ? `${props.data?.license?.certification} - ${props.data?.license?.issueDate}`\r\n        : \"\";\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Qualifications and Specializations</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Qualification</td>\r\n                            <td>{props.data?.qualification && [...props.data?.qualification]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Specialization</td>\r\n                            <td>{specialization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>License</td>\r\n                            <td>{license}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <PortfolioDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PortfolioDialog = props => {\r\n    const [txtQualification, setTxtQualification] = useState(props.data.qualification ? [...props.data?.qualification] : '')\r\n    const [txtSpecialization, setTxtSpecialization] = useState(props.data?.specialization?.certification)\r\n    const [txtSpecializationType, setTxtSpecializationType] = useState(props.data?.specialization?.type)\r\n    const [txtLicense, setTxtLicense] = useState(props.data?.license?.certification)\r\n    const [txtLicenseIssueDate, setTxtLicenseIssueDate] = useState(props.data?.license?.issueDate)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            qualification: [txtQualification],\r\n            license: {\r\n                certification: txtLicense,\r\n                issueDate: txtLicenseIssueDate\r\n            },\r\n            specialization: {\r\n                certification: txtSpecialization,\r\n                type: txtSpecializationType\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Portfolio</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Qualification</label>\r\n                            <textarea\r\n                                id=\"txtQualification\"\r\n                                value={txtQualification}\r\n                                onChange={e => setTxtQualification(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <textarea\r\n                                id=\"txtSpecialization\"\r\n                                value={txtSpecialization}\r\n                                onChange={e => setTxtSpecialization(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Specialization - Type</label>\r\n                            <input\r\n                                id=\"txtSpecializationType\"\r\n                                value={txtSpecializationType}\r\n                                onChange={e => setTxtSpecializationType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>License</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"txtLicense\"\r\n                                value={txtLicense}\r\n                                onChange={e => setTxtLicense(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Issue Date</label>\r\n                            <input\r\n                                id=\"txtLicenseIssueDate\"\r\n                                value={txtLicenseIssueDate}\r\n                                onChange={e => setTxtLicenseIssueDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../components/header\";\r\nimport { DoctorsTabHeaders } from \"./tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport { Portfolio } from \"./tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [picture, setPicture] = useState(doctorsData.photo);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (resetData) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n                        setPicture(res.data.photo);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }\r\n\r\n    }, [resetData])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo === \"\" ? \"/portfolio/team-4.jpg\" : picture}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Doctor</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{doctorsData.name}</h2>\r\n                        <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4>\r\n                    </div>\r\n                    <h3>{doctorsData.specialization?.certification}</h3>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport OTPLogin from './OTPLogin';\r\nimport { LoginHeaders } from './login-headers';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\n\r\nexport const DoctorsLogin = (props) => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [displayOTP, setDisplayOTP] = useState(false);\r\n    const [selectedTab, setSelectedTab] = useState(1);\r\n\r\n    const [txtPassportID, setTxtPassportID] = useState('')\r\n    const [txtPassword, setTxtPassword] = useState('')\r\n\r\n    const history = useHistory();\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = selectedTab === 1 ? { phoneNumber: value } : {\r\n            loginId: txtPassportID,\r\n            password: txtPassword\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n        const route = selectedTab === 1 ? \"sendSms\" : \"login\";\r\n\r\n        fetch(ApiPath + route, options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode !== 200) {\r\n                    showToast(response.message, 'exclamation');\r\n                } else {\r\n                    //Else, proceed... show the 2fa page...\r\n                    if (selectedTab === 1) {\r\n                        showToast(\"Enter the OTP sent to your registered phone number to proceed.\", \"information\");\r\n                        setDisplayOTP(true);\r\n\r\n                    } else {\r\n                        showToast(response.message, \"information\");\r\n\r\n                        //Remember to store the bearer token\r\n                        sessionStorage.setItem(\"token\", response.token);\r\n                        sessionStorage.setItem(\"id_val\", response.uidNo);\r\n\r\n                        //Store patient's data\r\n                        sessionStorage.setItem('doctor', JSON.stringify(response.data));\r\n\r\n                        //In the future, make the doctor go to this profile completion\r\n                        //page if the requirements were not supplied earlier...\r\n                        //if (requirements_not_complete) { history.push(\"/doctors/complete-profile-registration\") }\r\n                        history.push(\"/doctors/appointment-onboarding\");\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className='smaller-container'>\r\n                    <div className=\"container-divider\">\r\n                        <div className=\"left-sidebar\">\r\n                            <img src=\"../mah-logo.png\" />\r\n\r\n                            <div className=\"left-text\">\r\n                                <h2><i className=\"icofont-check-circled\"></i> Let's get started!</h2>\r\n                                <div className='form-data'>\r\n                                    <LoginHeaders\r\n                                        selectedTab={selectedTab}\r\n                                        setSelectedTab={setSelectedTab}\r\n                                        style={{ marginBottom: '30px' }}\r\n                                    />\r\n\r\n                                    {\r\n                                        selectedTab === 1 &&\r\n                                        <div className='form-row mb-2'>\r\n                                            <h5>Login using Mobile number and OTP</h5>\r\n\r\n                                            <div className='input-group'>\r\n                                                <PhoneInput\r\n                                                    placeholder=\"Enter mobile number\"\r\n                                                    value={value}\r\n                                                    onChange={phone => setValue(phone)}\r\n                                                    className='form-control'\r\n                                                    style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        selectedTab === 2 && <div className='form-row mb-2'>\r\n                                            <h5>Login using Passport ID and Password</h5>\r\n                                            <div className='input-group'>\r\n                                                <input className='form-control'\r\n                                                    placeholder='Enter Passport ID'\r\n                                                    id='txtPassportID'\r\n                                                    value={txtPassportID}\r\n                                                    maxLength={14}\r\n                                                    onChange={e => setTxtPassportID(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className='input-group'>\r\n                                                <input className='form-control'\r\n                                                    type='password'\r\n                                                    placeholder='Enter Password'\r\n                                                    id='txtPassword'\r\n                                                    value={txtPassword}\r\n                                                    onChange={e => setTxtPassword(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <h5>By continuing, you agree to our</h5>\r\n                                    <Link to=\"/admin/dashboard\">Terms and conditions</Link>\r\n\r\n                                    <button\r\n                                        id=\"btnLogin\"\r\n                                        className=\"btn-continue\"\r\n                                        onClick={tryLogin}   //Show 2fa page...\r\n                                    >Continue</button>\r\n                                </div>\r\n                                <div className=\"doctor-register\">\r\n                                    <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                                </div>\r\n                                <div className=\"doctor-register\">\r\n                                    <h4>Returning Doctor? <Link to=\"/doctors/login\">Login here</Link></h4>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                                <p>Certified and secure online healthcare platform</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-sidebar\">\r\n                            <img src=\"../doctors.svg\" />\r\n                            <div className=\"image-text\">\r\n                                <p>India's top doctors to guide you to better health everyday</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                displayOTP && <OTPLogin\r\n                    showDialog={displayOTP}\r\n                    phoneNumber={value}\r\n                    hideDialog={() => setDisplayOTP(false)}\r\n                    showToast={showToast}\r\n                    setIsLoaderVisible={setIsLoaderVisible}\r\n                    sender={\"Doctor\"}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","export const Cards = (props) => {\r\n    return (\r\n        <div className=\"s-card\">\r\n            <div>\r\n                <div className=\"numbers\">{props.numbers}</div>\r\n                <div className=\"cardName\">{props.totalCases}</div>\r\n            </div>\r\n            <div className=\"iconBox\">\r\n                <i className={props.icofontClass} aria-hidden=\"true\"></i>\r\n                <span>{props.lastUpdatedTime}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const cardsValues = [\r\n    {\r\n      id: 1,\r\n      numbers: 364,\r\n      cases: \"Total Cases\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-medicine\",\r\n    },\r\n    {\r\n      id: 2,\r\n      numbers: 241,\r\n      cases: \"Patients\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-patient-file\",\r\n    },\r\n    {\r\n      id: 3,\r\n      numbers: 82,\r\n      cases: \"Doctors\",\r\n      lastUpdatedTime: \"7 hours ago\",\r\n      icofontClass: \"icofont-doctor\",\r\n    },\r\n    {\r\n      id: 4,\r\n      numbers: 43,\r\n      cases: \"Schedules\",\r\n      lastUpdatedTime: \"12 hours ago\",\r\n      icofontClass: \"icofont-delivery-time\",\r\n    },\r\n  ];\r\n\r\n  export default cardsValues;\r\n","import { Cards } from './cards'\r\nimport cardsValues from './cards-values'\r\n\r\nexport const CardBox = () => {\r\n    const vals = cardsValues.map(item => {\r\n        return (<Cards\r\n            key={item.id}\r\n            numbers={item.numbers}\r\n            totalCases={item.cases}\r\n            lastUpdatedTime={item.lastUpdatedTime}\r\n            icofontClass={item.icofontClass}\r\n        />)\r\n    })\r\n\r\n    return (\r\n        \r\n        <div className=\"cardBox\">\r\n            {vals}\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const DoctorsListItem = props => {\r\n    return (\r\n        <div\r\n            className={props.selectedDoctor === props.id ? \"d-list-item active\" : \"d-list-item\"}\r\n            onClick={() => props.setItem(props.id)}\r\n        >\r\n            <div className=\"image-part\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                <p><span>♥</span>{props.rating}</p>\r\n            </div>\r\n            <div className=\"name-part\">\r\n                <h3>{props.name}</h3>\r\n                <h4>{props.specialization}</h4>\r\n                <span className={props.status?.toLowerCase()}>\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { DoctorsTabHeaders } from \"../../doctors-profile/tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../../assets/common/base-url\";\r\nimport { Portfolio } from \"../../doctors-profile/tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = props.selectedDoctor;\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/search/\" + idValue, params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n        //Always remember to reset the data...\r\n        setResetData(false);\r\n\r\n    }\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n\r\n    }, [resetData, props.selectedDoctor])\r\n\r\n    const activateProfile = () => {\r\n        //Simply make the verification status of the particular individual Active...\r\n        const data = {\r\n            verification: {\r\n                \"uidNo\" : props.selectedDoctor,\r\n                status: \"Active\",\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"POST\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"mahadmin/verifyDoctor\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n    const displayActivate = doctorsData.verification?.status !== \"Pending\" ? \"d-none\" : \"btn-main\";\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"dash-body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo || \"/portfolio/avatar.png\"}\r\n                            alt=\"\"\r\n                        />\r\n                        <div className=\"title\">\r\n                            <h2>{doctorsData.name}</h2>\r\n                            {/* <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4> */}\r\n                        </div>\r\n                        <h3>{doctorsData.specialization?.certification}</h3>\r\n                        <button\r\n                            id=\"btnActivate\"\r\n                            className={displayActivate}\r\n                            onClick={activateProfile}\r\n                        >\r\n                            Activate Profile\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { Header } from \"../../components/header\";\r\nimport { CardBox } from './cardbox';\r\nimport { DoctorsListItem } from './doctors-list-item';\r\nimport Doctors from './doctors'\r\n\r\nconst Dashboard = props => {\r\n\r\n    const [txtSearch, setTxtSearch] = useState(\"\");\r\n    const [doctorsList, setDoctorsList] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n\r\n    const fetchDoctors = () => {\r\n        const params = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            method: 'GET'\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"mahadmin/MahDoctorList\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsList(res.data);\r\n                    setSelectedDoctor(res.data[0]?.uidNo)\r\n\r\n                    console.log(res.data[0]?.uidNo)\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Load a doctors' list immediately the form loads...\r\n        fetchDoctors();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const output = doctorsList.filter(item => item.name === txtSearch)\r\n    //     if (txtSearch !== \"\") {\r\n    //         setDoctorsList(output)\r\n    //     } else if (txtSearch === \"\") {\r\n    //         setDoctorsList(doctorsList);\r\n    //     }\r\n\r\n    //     setSelectedDoctor(doctorsList[0]?.id)\r\n\r\n    // }, [txtSearch])\r\n\r\n    const listItems = doctorsList.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                id={item.uidNo}\r\n                name={item.name}\r\n                src={item.photo}\r\n                rating={`4.${Math.floor(Math.random() * 9)}`}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                key={index}\r\n                setItem={value => setSelectedDoctor(value)}\r\n                selectedDoctor={selectedDoctor}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='main'>\r\n                <CardBox />\r\n                <div className='main-content'>\r\n                    <div className=\"left-main mt-2\">\r\n                        <div className=\"input-group d-none\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtSearch\"\r\n                                type=\"text\"\r\n                                value={txtSearch}\r\n                                onChange={e => setTxtSearch(e.target.value)}\r\n                                placeholder='Search for Doctor'\r\n\r\n                            />\r\n                            <i className=\"icofont-search\"></i>\r\n                        </div>\r\n                        <div className='doctors-list'>\r\n                            {listItems}\r\n                        </div>\r\n                    </div>\r\n                    <div className='right-main'>\r\n                        {selectedDoctor && selectedDoctor !== '' && <Doctors\r\n                            setIsLoaderVisible={props.setIsLoaderVisible}\r\n                            showToast={props.showToast}\r\n                            selectedDoctor={selectedDoctor}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","export const DEFAULT_DOMAIN = 'meet.webshrine.in';","export const getRoomName = (roomName, tenant) => tenant ? `${tenant}/${roomName}` : roomName;\nlet instancesCounter = 0;\nexport const generateComponentId = (prefix) => `${prefix}-${instancesCounter++}`;\n","import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\r\n\r\nexport default function meetspinner() {\r\n  return  _jsx(_Fragment, {\r\n    children: [\r\n      _jsx(\"div\", {\r\n        style: {\r\n          color: 'green',\r\n          textAlign: 'center',\r\n          fontSize:'1.75rem',\r\n          fontWeight:500,\r\n        },\r\n        children: 'Meeting Loading ...'\r\n      }),\r\n      _jsx(\"div\", {\r\n      children:[\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-primary\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-secondary\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-success\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-danger\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-warning\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-info\"\r\n        })\r\n      ]\r\n    })\r\n    ]\r\n  });\r\n}\r\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { fetchExternalApi } from '@meet/web-sdk';\nimport { generateComponentId } from '@meet/web-sdk/lib/utils';\nimport { DEFAULT_DOMAIN } from \"@meet/web-sdk/lib/constants\";\nimport  meetspinner  from \"@meet/web-sdk/lib/components/MeetSpinner\";\n\n\nconst Meet = ({roomName, subject,  \n    interfaceConfigOverwrite, jwt, invitees, devices, \n    userInfo, onApiReady, width, height, border, background }) => {\n    const [componentId, setComponentId] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [apiLoaded, setApiLoaded] = useState(false);\n    const externalApi = useRef();\n    const apiRef = useRef();\n    const meetingRef = useRef(null);\n    const Spinner = meetspinner;\n    const domain =\"meet.webshrine.in\";\n    var configOverwrite = {\n        subject : subject\n    };\n\n    var getIFrameRef= (iframeRef) => {\n        (border)?iframeRef.style.border = border: '0px solid cadetblue';\n        (background)?iframeRef.style.background = background: iframeRef.style.background = 'transparent'; \n        iframeRef.style.width = width;\n        iframeRef.style.height = height;\n    };\n\n\n    useEffect(() => {\n        setComponentId(generateComponentId('Meet'));\n        fetchExternalApi(DEFAULT_DOMAIN)\n            .then((api) => {\n            externalApi.current = api;\n            setApiLoaded(true);\n        })\n            .catch((e) => console.error(e.message));\n    }, []);\n\n    \n    const loadIFrame = useCallback((JitsiMeetExternalAPI) => {\n        \n        apiRef.current = new JitsiMeetExternalAPI(DEFAULT_DOMAIN, {\n            roomName,\n            configOverwrite,\n            interfaceConfigOverwrite,\n            jwt,\n            invitees,\n            devices,\n            userInfo,\n            parentNode: meetingRef.current\n        });\n        setLoading(false);\n        if (apiRef.current) {\n            onApiReady(apiRef.current);\n            (getIFrameRef && meetingRef.current) && getIFrameRef(meetingRef.current);\n        }\n    }, [\n        apiRef,\n        meetingRef,\n        onApiReady,\n        getIFrameRef,\n        domain,\n        roomName,\n        configOverwrite,\n        interfaceConfigOverwrite,\n        jwt,\n        invitees,\n        devices,\n        userInfo\n    ]);\n    useEffect(() => {\n        if (apiLoaded && !apiRef.current) {\n            if (externalApi.current) {\n                loadIFrame(externalApi.current);\n            }\n        }\n    }, [apiLoaded, loadIFrame]);\n    const renderLoadingSpinner = useCallback(() => {\n        if (!Spinner) {\n            return null;\n        }\n        if (!loading || apiRef.current) {\n            return null;\n        }\n        return _jsx(Spinner, {}, void 0);\n    }, [Spinner, apiRef.current]);\n    return (_jsxs(_Fragment, { children: [renderLoadingSpinner(), _jsx(\"div\", { id: componentId, ref: meetingRef }, componentId)] }, void 0));\n};\nexport default Meet;\n","\r\nexport const MeetingTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-check\"></i> Complaints\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-glass\"></i>Lifestyle\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-medicine\"></i>Prescriptions\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-laboratory\"></i>Labs\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 5 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(5)}\r\n            >\r\n                <i className=\"icofont-double-right\"></i>Next.Consult\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nexport const Complaints = props => {\r\n\r\n    const { cbxComplaints, setCbxComplaints } = props.Complaints;\r\n    const { txtRemarks, setTxtRemarks } = props.Remarks;\r\n    const { txtObservations, setTxtObservations } = props.Observations\r\n    const { selectedSymptoms, setSelectedSymptoms } = props.SelectedSymptoms\r\n\r\n    const symptoms = [\"Cough\", \"Cold\", \"Cattargh\", \"Fever\", \"Headaches\", \"Sneezing\"]\r\n    const symptomsObj = symptoms.map((item, index) => {\r\n        return (<option key={index} value={item}>{item}</option>)\r\n    })\r\n\r\n    useEffect(() => {\r\n        //As the variables in the dependency array change,\r\n        //Proceed to updat the props...\r\n        props.setComplaints({\r\n            \"symptoms\": selectedSymptoms.join(\", \"),\r\n            \"remarks\": txtRemarks\r\n        })\r\n\r\n        props.setObs({\r\n            \"earlySigns\": txtObservations,\r\n            \"remarks\": txtRemarks\r\n        })\r\n\r\n    }, [cbxComplaints, txtRemarks, txtObservations])\r\n\r\n    const addItemToList = (selItem) => {\r\n        //Ensure that the selected item is not in the list...\r\n        if (selectedSymptoms.indexOf(selItem) === -1) {\r\n            //Item is not found in the list...\r\n            setSelectedSymptoms([...selectedSymptoms, selItem])\r\n\r\n            //Also, remove this item from the original list.\r\n            symptoms.splice(symptoms.indexOf(selItem), 1);\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px' }}>\r\n                <div className='form-row'>\r\n                    <div className=\"input-group\">\r\n                        <label>Complaints / Discomforts / Symptoms</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxComplaints'\r\n                            value={cbxComplaints}\r\n                            onChange={e => {\r\n                                setCbxComplaints(e.target.value)\r\n                                addItemToList(e.target.value)\r\n                            }}\r\n                        >\r\n                            {symptomsObj}\r\n                        </select>\r\n                    </div>\r\n                    {selectedSymptoms.length > 0 && <div className='sel-items'>{selectedSymptoms.join(\", \")}</div>}\r\n                </div>\r\n                <div className='form-row-2'>\r\n                    <div className='input-group'>\r\n                        <label>Remarks</label>\r\n                        <textarea\r\n                            className='form-control'\r\n                            rows={3}\r\n                            id='txtRemarks'\r\n                            value={txtRemarks}\r\n                            onChange={e => setTxtRemarks(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Observations by Doctor</label>\r\n                        <textarea\r\n                            className='form-control'\r\n                            rows={3}\r\n                            id='txtObservations'\r\n                            value={txtObservations}\r\n                            onChange={e => setTxtObservations(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\n\r\nexport const NextConsult = props => {\r\n\r\n    const { cbxRevisit, setCbxRevisit } = props.Revisit;\r\n    const { cbxRevisitDate, setCbxRevisitDate } = props.RevisitDate;\r\n    const { txtDescription, setTxtDescription } = props.Description;\r\n\r\n    useEffect(() => {\r\n        props.setRevisitData({\r\n            \"revisitRequired\": cbxRevisit,\r\n            \"revisitDate\": cbxRevisitDate,\r\n            \"revisitDescription\": txtDescription\r\n        })\r\n\r\n    }, [cbxRevisit, cbxRevisitDate, txtDescription])\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px' }}>\r\n                <div className='form-row-2-1'>\r\n                    <div className='input-group'>\r\n                        <label>Revisit required?</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxRevisit'\r\n                            value={cbxRevisit}\r\n                            onChange={e => setCbxRevisit(e.target.value)}\r\n                        >\r\n                            <option value='No'>No</option>\r\n                            <option value='Yes'>Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={cbxRevisit === \"Yes\" ? 'input-group' : 'd-none'}>\r\n                        <label>Revisit Date?</label>\r\n                        <input\r\n                            className='form-control'\r\n                            id='cbxRevisitDate'\r\n                            value={cbxRevisitDate}\r\n                            onChange={e => setCbxRevisitDate(e.target.value)}\r\n                            type='datetime-local'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='form-row'>\r\n                    <div className={cbxRevisit === \"Yes\" ? 'input-group' : 'd-none'}>\r\n                        <label>Description</label>\r\n                        <textarea\r\n                            className='form-control'\r\n                            id='txtDescription'\r\n                            value={txtDescription}\r\n                            onChange={e => setTxtDescription(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport const Prescriptions = props => {\r\n\r\n    const { cbxName, setCbxName } = props.Name;\r\n\r\n\r\n    const [cbxFormulation, setCbxFormulation] = useState('')\r\n    const [cbxUnits, setCbxUnits] = useState('')\r\n    const [cbxDosage, setCbxDosage] = useState('')\r\n    const [cbxFrequency, setCbxFrequency] = useState('')\r\n    const [cbxDuration, setCbxDuration] = useState('')\r\n    const [cbxHowToTake, setCbxHowToTake] = useState('')\r\n    const [txtRemarks, setTxtRemarks] = useState('')\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px', marginTop: '-20px' }}>\r\n                <div className='form-row'>\r\n                    <div className='input-group'>\r\n                        <label>Drug</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxName'\r\n                            value={cbxName}\r\n                            onChange={e => setCbxName(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='Maldox'>Maldox</option>\r\n                            <option value='Augmentin'>Augmentin</option>\r\n                            <option value='Penicillin'>Penicillin</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-3'>\r\n                    <div className='input-group'>\r\n                        <label>Formulation</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxFormulation'\r\n                            value={cbxFormulation}\r\n                            onChange={e => setCbxFormulation(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='Tablet'>Tablet</option>\r\n                            <option value='Capsule'>Capsule</option>\r\n                            <option value='Syrup'>Syrup</option>\r\n                            <option value='Injection'>Injection</option>\r\n                            <option value='Powder'>Powder</option>\r\n                            <option value='Serum'>Serum</option>\r\n                            <option value='Oil'>Oil</option>\r\n                            <option value='Other'>Other</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Units (uom)</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxUnits'\r\n                            value={cbxUnits}\r\n                            onChange={e => setCbxUnits(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='tbsp'>tbsp</option>\r\n                            <option value='tablet'>tablet</option>\r\n                            <option value='ml'>ml</option>\r\n                            <option value='mg'>mg</option>\r\n                            <option value='unit'>unit</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Dosage</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxDosage'\r\n                            value={cbxDosage}\r\n                            onChange={e => setCbxDosage(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='1 uom'>1 uom</option>\r\n                            <option value='2 uom'>2 uom</option>\r\n                            <option value='3 uom'>3 uom</option>\r\n                            <option value='4 uom'>4 uom</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-3'>\r\n                    <div className='input-group'>\r\n                        <label>Frequency</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxFrequency'\r\n                            value={cbxFrequency}\r\n                            onChange={e => setCbxFrequency(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='Once a day'>Once a day</option>\r\n                            <option value='Twice a day'>Twice a day</option>\r\n                            <option value='Thrice a day'>Thrice a day</option>\r\n                            <option value='Once a week'>Once a week</option>\r\n                            <option value='Once a month'>Once a month</option>\r\n                            <option value='Twice a month'>Twice a month</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Duration</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxDuration'\r\n                            value={cbxDuration}\r\n                            onChange={e => setCbxDuration(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='1 day'>1 day</option>\r\n                            <option value='2 days'>2 days</option>\r\n                            <option value='3 days'>3 days</option>\r\n                            <option value='1 week'>1 week</option>\r\n                            <option value='2 weeks'>2 weeks</option>\r\n                            <option value='1 month'>1 month</option>\r\n                            <option value='1 year'>1 year</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>How to take</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxHowToTake'\r\n                            value={cbxHowToTake}\r\n                            onChange={e => setCbxHowToTake(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='od'>od</option>\r\n                            <option value='bd'>bd</option>\r\n                            <option value='tds'>tds</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-2-1'>\r\n                    <div className='input-group'>\r\n                        <label>Remarks</label>\r\n                        <textarea\r\n                            className='form-control'\r\n                            id='txtRemarks'\r\n                            value={txtRemarks}\r\n                            onChange={e => setTxtRemarks(e.target.value)}\r\n                            rows={2}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label style={{ opacity: 0 }}>1</label>\r\n                        <button\r\n                            className='btn-main-outline'\r\n                            id='btnAdd'\r\n                            onClick={() => props.showToast('This will eventually add this to a list/array of prescriptions, to be updated with the update click.', 'exclamation')}\r\n                        >\r\n                            Add <i className='icofont-plus' />\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nexport const SuggestedLifestyle = props => {\r\n\r\n    const { txtSmokingHabits, setTxtSmokingHabits } = props.SmokingHabits\r\n    const { txtAlcohol, setTxtAlcohol } = props.Alcohol\r\n    const { txtActivityLevel, setTxtActivityLevel } = props.ActivityLevel\r\n    const { txtFoodPreference, setTxtFoodPreference } = props.FoodPreference\r\n    const { txtPhysiotherapy, setTxtPhysiotherapy } = props.Physiotherapy\r\n    const { txtFoodsToAvoid, setTxtFoodsToAvoid } = props.FoodsToAvoid\r\n\r\n    const [selectedPhysio, setSelectedPhysio] = useState([])\r\n    const [selectedFoodsToAvoid, setSelectedFoodsToAvoid] = useState([])\r\n\r\n    useEffect(() => {\r\n        props.setPhysiotherapy(selectedPhysio)\r\n        props.setFoodsToAvoid(selectedFoodsToAvoid)\r\n        props.setRecommendedFoods(txtFoodPreference?.split(\",\"));\r\n\r\n    }, [txtPhysiotherapy, txtFoodsToAvoid])\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px' }}>\r\n                <div className='form-row-2'>\r\n                    <div className='input-group'>\r\n                        <label>Smoking Habits</label>\r\n                        <select\r\n                            id=\"txtSmokingHabits\"\r\n                            value={txtSmokingHabits}\r\n                            className=\"form-control\"\r\n                            onChange={e => setTxtSmokingHabits(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"I don't smoke\">I don't smoke</option>\r\n                            <option value=\"I used to, but I quit\">I used to, but I quit</option>\r\n                            <option value=\"1-2/day\">1-2/day</option>\r\n                            <option value=\"3-5/day\">3-5/day</option>\r\n                            <option value=\"5-10/day\">5-10/day</option>\r\n                            <option value=\"> 10/day\">{'> 10/day'}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Alcohol Consumption</label>\r\n                        <select\r\n                            id=\"txtAlcohol\"\r\n                            value={txtAlcohol}\r\n                            className=\"form-control\"\r\n                            onChange={e => setTxtAlcohol(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Non-Drinker\">Non-Drinker</option>\r\n                            <option value=\"Rare\">Rare</option>\r\n                            <option value=\"Social\">Social</option>\r\n                            <option value=\"Regular\">Regular</option>\r\n                            <option value=\"Heavy\">Heavy</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row-2-1\">\r\n                    <div className='input-group'>\r\n                        <label>Activity Level</label>\r\n                        <select\r\n                            id=\"txtActivityLevel\"\r\n                            value={txtActivityLevel}\r\n                            className=\"form-control\"\r\n                            onChange={e => setTxtActivityLevel(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Sedentary (Low)\">Sedentary (Low)</option>\r\n                            <option value=\"Moderately Active (Normal)\">Moderately Active (Normal)</option>\r\n                            <option value=\"Active (High)\">Active (High)</option>\r\n                            <option value=\"Athletic (Very High)\">Athletic (Very High)</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Food Preference</label>\r\n                        <select\r\n                            id=\"txtFoodPreference\"\r\n                            value={txtFoodPreference}\r\n                            className=\"form-control\"\r\n                            onChange={e => setTxtFoodPreference(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Vegetarian\">Vegetarian</option>\r\n                            <option value=\"Non-Vegetarian\">Non-Vegetarian</option>\r\n                            <option value=\"Eggetarian\">Eggetarian</option>\r\n                            <option value=\"Vegan\">Vegan</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-2'>\r\n                    <div className='input-group'>\r\n                        <label>Foods to avoid</label>\r\n                        <select\r\n                            id=\"txtFoodsToAvoid\"\r\n                            value={txtFoodsToAvoid}\r\n                            className=\"form-control\"\r\n                            onChange={e => {\r\n                                setTxtFoodsToAvoid(e.target.value);\r\n                                (selectedFoodsToAvoid.indexOf(e.target.value) === -1) && setSelectedFoodsToAvoid([...selectedFoodsToAvoid, e.target.value])\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Starchy\">Starchy</option>\r\n                            <option value=\"Animal Protein\">Animal Protein</option>\r\n                            <option value=\"Oily\">Oily</option>\r\n                            <option value=\"Alcohol\">Alcohol</option>\r\n                        </select>\r\n                        {selectedFoodsToAvoid.length > 0 && <div className='sel-items'>{selectedFoodsToAvoid.join(\", \")}</div>}\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Physiotherapy</label>\r\n                        <select\r\n                            id='txtPhysiotherapy'\r\n                            value={txtPhysiotherapy}\r\n                            onChange={e => {\r\n                                setTxtPhysiotherapy(e.target.value);\r\n                                (selectedPhysio.indexOf(e.target.value) === -1) && setSelectedPhysio([...selectedPhysio, e.target.value])\r\n                            }}\r\n                            className='form-control'\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Walking\">Walking</option>\r\n                            <option value=\"Stretching\">Stretching</option>\r\n                            <option value=\"Yoga\">Yoga</option>\r\n                            <option value=\"Skipping\">Skipping</option>\r\n                            <option value=\"Other\">Other</option>\r\n                        </select>\r\n                        {selectedPhysio.length > 0 && <div className='sel-items'>{selectedPhysio.join(\", \")}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nexport const TestsAndLabs = props => {\r\n\r\n    const { cbxTests, setCbxTests } = props.Tests;\r\n    const { selectedTests, setSelectedTests } = props.SelectedTests;\r\n\r\n    const tests = ['PCV', 'Malaria Parasite', 'Widal', 'FBC', 'FBS', 'RBS', 'Stool M/C/C']\r\n    const testsObj = tests.map((item, index) => {\r\n        return (<option key={index} value={item}>{item}</option>)\r\n    })\r\n\r\n    const addItemToList = (selItem) => {\r\n        //Ensure that the selected item is not in the list...\r\n        if (selectedTests.indexOf(selItem) === -1) {\r\n            //Item is not found in the list...\r\n            setSelectedTests([...selectedTests, selItem])\r\n\r\n            //Also, remove this item from the original list.\r\n            tests.splice(tests.indexOf(selItem), 1)\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.setRecommendedTests(selectedTests);\r\n    }, [selectedTests])\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px' }}>\r\n                <div className='form-row'>\r\n                    <div className='input-group'>\r\n                        <label>Recommended tests/laboratories</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxTests'\r\n                            value={cbxTests}\r\n                            onChange={e => {\r\n                                setCbxTests(e.target.value)\r\n                                addItemToList(e.target.value)\r\n                            }}\r\n                        >\r\n                            <option value='' style={{ background: '#efefef01' }}>Select</option>\r\n                            { testsObj }\r\n                        </select>\r\n                    </div>\r\n                    {selectedTests.length > 0 && <div className='sel-items'>{selectedTests.join(\", \")}</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { MeetingTabHeaders } from './meeting-tab-headers'\r\nimport { Complaints } from './meeting-tabs/complaints'\r\nimport { NextConsult } from './meeting-tabs/next-consult'\r\nimport { Prescriptions } from './meeting-tabs/prescriptions'\r\nimport { SuggestedLifestyle } from './meeting-tabs/suggested-lifestyle'\r\nimport { TestsAndLabs } from './meeting-tabs/tests-and-labs'\r\nimport { ApiPath } from '../assets/common/base-url'\r\n\r\nexport const MeetingDialog = (props) => {\r\n\r\n    const patientData = useRef(JSON.parse(localStorage.getItem('patient')))\r\n    const [age, setAge] = useState('')\r\n    const [selectedTab, setSelectedTab] = useState(1)\r\n\r\n    const [complaints, setComplaints] = useState({ \"symptoms\": \"\", \"remarks\": \"\" })\r\n    const [physiotherapy, setPhysiotherapy] = useState([])\r\n    const [foodsToAvoid, setFoodsToAvoid] = useState([])\r\n    const [recommendedFoods, setRecommendedFoods] = useState([])\r\n    const [recommendedTests, setRecommendedTests] = useState([])\r\n    const [revisitData, setRevisitData] = useState({ \"revisitRequired\": \"\", \"revisitDate\": \"\", \"revisitDescription\": \"\" })\r\n    const [obs, setObs] = useState({ \"earlySigns\": \"\", \"remarks\": \"\" })\r\n\r\n\r\n    //Complaints...\r\n    const [cbxComplaints, setCbxComplaints] = useState('')\r\n    const [txtRemarks, setTxtRemarks] = useState('')\r\n    const [txtObservations, setTxtObservations] = useState('')\r\n    const [selectedSymptoms, setSelectedSymptoms] = useState([])\r\n\r\n    //Suggested Lifestyle...\r\n    const [txtSmokingHabits, setTxtSmokingHabits] = useState(patientData.lifeStyle?.smokingHabbit)\r\n    const [txtAlcohol, setTxtAlcohol] = useState(patientData.lifeStyle?.alcoholConsumption)\r\n    const [txtActivityLevel, setTxtActivityLevel] = useState(patientData.lifeStyle?.activityLevel)\r\n    const [txtFoodPreference, setTxtFoodPreference] = useState(patientData.lifeStyle?.foodPreference)\r\n    const [txtPhysiotherapy, setTxtPhysiotherapy] = useState('')\r\n    const [txtFoodsToAvoid, setTxtFoodsToAvoid] = useState('')\r\n\r\n\r\n    //Prescriptions part...\r\n    const [cbxName, setCbxName] = useState('')\r\n\r\n    //Labs and Tests\r\n    const [cbxTests, setCbxTests] = useState('')\r\n    const [selectedTests, setSelectedTests] = useState([])\r\n\r\n    //Next consultation\r\n    const [cbxRevisit, setCbxRevisit] = useState('')\r\n    const [cbxRevisitDate, setCbxRevisitDate] = useState('')\r\n    const [txtDescription, setTxtDescription] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        //fetch the required data fro the patient...\r\n        const dateDiff = new Date().getFullYear() - new Date(patientData.current.birthDate).getFullYear();\r\n        setAge(dateDiff);\r\n\r\n    }, [])\r\n\r\n    const updatePrescriptions = () => {\r\n        //Update all requirements...\r\n        const updateData = {\r\n            complaints: complaints,\r\n            physiotherapy: physiotherapy,\r\n            foodToAvoid: foodsToAvoid,\r\n            recommendedFood: recommendedFoods,\r\n            recommendedTests: recommendedTests,\r\n            revisit: revisitData,\r\n            observations: obs,\r\n            medicinesPrescribed: [cbxName]\r\n\r\n        }\r\n\r\n        //Proceed to update...\r\n        const params = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(updateData),\r\n        }\r\n\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"appointment/addPrescription\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    props.showToast(\"Prescription updated successfully!\", 'success');\r\n\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='dialog-background fade'>\r\n            <div className='dialog-container' style={{ minWidth: '900px' }}>\r\n                <div className='dialog-header'>\r\n                    <h2 className='nully' style={{ color: 'var(--bluish)' }}>\r\n                        <i className='icofont-stethoscope'></i> {'In-Call Consultation'}\r\n                    </h2>\r\n                </div>\r\n                <div className='dialog-body mb-2'>\r\n                    <div className='span-in-span'>\r\n                        <span><i className='icofont-user-alt-7' /> {patientData.current.name} ({age}): <span> {patientData.current.uidNo} - <i className='icofont-location-pin'></i> {patientData.current.address[0]?.city}</span></span>\r\n                        <span><i className='icofont-doctor' /> Consulting Doctor: <span>{props.doctorId}</span></span>\r\n                    </div>\r\n                    <div className='form-row-1-2'>\r\n                        <div className='left' style={{ minHeight: '400px', background: '#efefef', padding: 20 }}>\r\n                            <button className='link-main' onClick={() => alert('This to be added later!')}>Past Prescriptions...</button>\r\n                            <button className='link-main mb-2' onClick={() => alert('This to be added later!')}>Current Medications...</button>\r\n\r\n                            <div>\r\n                                <table className='dialog-left-panel'>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>Bld Grp</td>\r\n                                            <td>{patientData.current.general.bloodGroup}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Height</td>\r\n                                            <td>{patientData.current.general.height}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Weight</td>\r\n                                            <td>{patientData.current.general.weight}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>BMI</td>\r\n                                            <td>{patientData.current.general.bmi}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Chest Exp.</td>\r\n                                            <td>{patientData.current.general.chestExpansion}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Vision</td>\r\n                                            <td>{patientData.current.general.vision}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>BP</td>\r\n                                            <td>{patientData.current.general.bp}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Pulse</td>\r\n                                            <td>{patientData.current.general.pulse}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Oxy. Sat</td>\r\n                                            <td>{patientData.current.general.oxygenSaturation}</td>\r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className='right' style={{ height: '400px' }}>\r\n                            <MeetingTabHeaders\r\n                                selectedTab={selectedTab}\r\n                                setSelectedTab={value => setSelectedTab(value)}\r\n                            />\r\n                            {/* The tab pages... */}\r\n                            {selectedTab === 1 && <Complaints\r\n                                data={patientData}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                setComplaints={setComplaints}\r\n                                setObs={setObs}\r\n\r\n                                Complaints={{ cbxComplaints, setCbxComplaints }}\r\n                                Remarks={{ txtRemarks, setTxtRemarks }}\r\n                                Observations={{ txtObservations, setTxtObservations }}\r\n                                SelectedSymptoms={{ selectedSymptoms, setSelectedSymptoms }}\r\n                            />}\r\n\r\n                            {selectedTab === 2 && <SuggestedLifestyle\r\n                                data={patientData}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                setPhysiotherapy={setPhysiotherapy}\r\n                                setFoodsToAvoid={setFoodsToAvoid}\r\n                                setRecommendedFoods={setRecommendedFoods}\r\n\r\n                                SmokingHabits={{ txtSmokingHabits, setTxtSmokingHabits }}\r\n                                Alcohol={{ txtAlcohol, setTxtAlcohol }}\r\n                                ActivityLevel={{ txtActivityLevel, setTxtActivityLevel }}\r\n                                FoodPreference={{ txtFoodPreference, setTxtFoodPreference }}\r\n                                Physiotherapy={{ txtPhysiotherapy, setTxtPhysiotherapy }}\r\n                                FoodsToAvoid={{ txtFoodsToAvoid, setTxtFoodsToAvoid }}\r\n                            />}\r\n\r\n                            {selectedTab === 3 && <Prescriptions\r\n                                data={patientData}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                Name={{cbxName, setCbxName}}\r\n                            />}\r\n\r\n                            {selectedTab === 4 && <TestsAndLabs\r\n                                data={patientData}\r\n                                setRecommendedTests={setRecommendedTests}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n\r\n                                Tests={{ cbxTests, setCbxTests }}\r\n                                SelectedTests={{ selectedTests, setSelectedTests }}\r\n                            />}\r\n\r\n                            {selectedTab === 5 && <NextConsult\r\n                                data={patientData}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                setRevisitData={setRevisitData}\r\n\r\n                                Revisit={{ cbxRevisit, setCbxRevisit }}\r\n                                RevisitDate={{ cbxRevisitDate, setCbxRevisitDate }}\r\n                                Description={{ txtDescription, setTxtDescription }}\r\n                            />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='dialog-footer main'>\r\n                    <button className='btn-main mr-1' onClick={() => updatePrescriptions()}>Update</button>\r\n                    <button className='btn-main-outline' onClick={() => props.hideDialog()}>Cancel</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { CryptoApiPath } from '../assets/common/base-url';\r\nimport { Meet } from '@meet/web-sdk';\r\nimport { MeetingDialog } from './meeting-dialog';\r\n\r\nconst Meeting = props => {\r\n\r\n    const [token, setToken] = useState('')\r\n    const [txtPastPrescription, setTxtPastPrescription] = useState('')\r\n    const [showDialog, setShowDialog] = useState(false)\r\n    const [meetingData, setMeetingData] = useState({});\r\n    const [patientId, setPatientId] = useState('')\r\n    const [doctorId, setDoctorId] = useState('')\r\n\r\n    const apiRef = useRef();\r\n\r\n    useEffect(() => {\r\n        fetchToken()\r\n    }, [])\r\n\r\n    const fetchToken = () => {\r\n        //Get the top elements...\r\n        const searchString = window.location.search;\r\n        const urlParams = new URLSearchParams(searchString);\r\n\r\n        const meetingId = urlParams.get('meeting_id');\r\n        setDoctorId(urlParams.get('doctor_id'));\r\n        setPatientId(urlParams.get('patient_id'));\r\n        const gravatar = urlParams.get('gravatar');\r\n        const past_prescription = urlParams.get('past_prescription');\r\n\r\n        //Set the token for loading...\r\n        sessionStorage.setItem('token', urlParams.get('tk'));\r\n\r\n        //fetch token on form load....\r\n        fetch(CryptoApiPath + 'retriveTokenFor?meeting_id=' + meetingId + '&doctor=' + doctorId + '&gravatar=' + gravatar)\r\n            .then(response => (response.json()))\r\n            .then(res => {\r\n                if (res.status === 200 && res.statusText === \"OK\") {\r\n                    //Set the output\r\n                    setToken(res.result.token);\r\n                    setTxtPastPrescription(past_prescription);\r\n                    setMeetingData(res.result);\r\n\r\n                    console.log(res.result.token);\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const handleClose = data => {\r\n        console.log('Close Meeting', data);\r\n    }\r\n\r\n    const suspendDetected = (data) => {\r\n        console.log(data);\r\n    }\r\n\r\n    const manageApi = (apiObj, ref) => {\r\n        ref.current = apiObj;\r\n        ref.current.addEventListeners({\r\n            readyToClose: handleClose,\r\n            suspendDetected: suspendDetected\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <Meet\r\n                roomName={'room1'}  //meetingData.roomNumber\r\n                subject='Doctor Consultation'\r\n                jwt={token}\r\n                onApiReady={eApi => manageApi(eApi, apiRef)}\r\n                width={'100vw'}\r\n                height={'100vh'}\r\n\r\n            />\r\n            <div className='meeting-button-container'>\r\n                <div className='prescription'>\r\n                    <button\r\n                        id='btnPostPrescription'\r\n                        onClick={() => setShowDialog(true)}\r\n                        className='btn-main'\r\n                        style={{ width: '100%' }}\r\n                    >\r\n                        Prescription Dialog ...\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {\r\n                showDialog && <MeetingDialog\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    hideDialog={() => setShowDialog(false)}\r\n                    patientId={patientId}\r\n                    doctorId={meetingData.displayName}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Meeting;\r\n","export const constants = {\r\n\r\n    getOptions: {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    },\r\n    postOptions: {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'POST',\r\n    },\r\n    putOptions: {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'PUT',\r\n    },\r\n\r\n}","import { useEffect, useState } from \"react\";\r\nimport { CryptoApiPath } from \"../assets/common/base-url\";\r\nimport { constants } from \"../assets/common/constants\";\r\n\r\nconst useCheckAppointmentBooked = (uidNo, setAppointmentBooked, appointmentBooked) => {\r\n\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [doctorsData, setDoctorsData] = useState({});\r\n    const [pastAppointments, setPastAppointments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //Remember, that this should be for\r\n        // year, month, day, hour, minute, second\r\n        const timeValueOfToday = new Date('2022-01-01').getTime();      //Remove date in parenthesis later....\r\n        const timeValueOf3MonthsTime = new Date().getTime() + (60 * 60 * 24 * 90);\r\n\r\n        //Set other parameters...\r\n        const input1 = `starttime=${timeValueOfToday}&endtime=${timeValueOf3MonthsTime}`;\r\n        const options = constants.getOptions;\r\n\r\n        setIsLoading(true);\r\n\r\n        fetch(`${CryptoApiPath}getMeetingList?${input1}`, options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoading(false);\r\n                if (response.status === 200) {\r\n                    //Retrieve the result...\r\n                    const result = response.result?.filter(item => item.patient_id === uidNo)\r\n\r\n                    //Set other parameters...\r\n                    setDoctorsData(result[result.length - 1]);\r\n                    setPastAppointments(result)\r\n\r\n                    console.log(result[result.length]);\r\n\r\n                    if (result.length > 0) {\r\n                        //Fiter generated result thus...\r\n                        setAppointmentBooked(true);\r\n                    } else {\r\n                        setAppointmentBooked(false);\r\n                    }\r\n\r\n\r\n                } else {\r\n                    setError('Failed to fetch data. Please try again after some time.', 'exclamation');\r\n                }\r\n            })\r\n\r\n            .catch(err => {\r\n                setIsLoading(false);\r\n                setError(err, \"exclamation\");\r\n            })\r\n\r\n    }, [])\r\n\r\n    return ({ error, isLoading, doctorsData, pastAppointments });\r\n}\r\n\r\nexport default useCheckAppointmentBooked;\r\n","export const DHPHeader = () => {\r\n\r\n    return (\r\n        <div className='dhp-header'>\r\n            <div className='header-text'>\r\n                <h2>Digital Health Passport</h2>\r\n                <p>The pandemic of Corona Virus infection in 2020 has triggered the importance\r\n                    of fast response to health issues\r\n                </p>\r\n                <button className='btn-main' onClick={() => alert('Confirm Passort Status')}>Confirm Passport Status</button>\r\n            </div>\r\n            <div className='bar-code'>\r\n                <img src='/QR_code.png' alt='' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { ApiPath, CryptoApiPath } from '../assets/common/base-url';\r\nimport { constants } from '../assets/common/constants';\r\n\r\nexport const DoctorsDialog = props => {\r\n\r\n    const today = new Date();\r\n    const [cbxSpeciality, setCbxSpeciality] = useState('Allergist')\r\n    const [doctorsData, setDoctorsData] = useState('')\r\n    const [selectedDoctor, setSelectedDoctor] = useState('')\r\n    const [txtDate, setTxtDate] = useState(today.getFullYear() + \"-\" + today.getMonth() + 1 + \"-\" + today.getDate());\r\n    const [spanValue, setSpanValue] = useState(1);\r\n    const [timeOfCommencement, setTimeOfCommencement] = useState('')\r\n\r\n    //The componentDidMount equivalent...\r\n    //Fetch the doctors list...\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET'\r\n    }\r\n\r\n    useEffect(() => {\r\n        //To set the actual timing for the time of commencement\r\n        switch (spanValue) {\r\n            case 1:\r\n                setTimeOfCommencement(new Date(`${txtDate} 11:00:00`))\r\n                break;\r\n            case 2:\r\n                setTimeOfCommencement(new Date(`${txtDate} 14:00:00`))\r\n                break;\r\n            default:\r\n                setTimeOfCommencement(new Date(`${txtDate} 20:00:00`))\r\n                break;\r\n        }\r\n\r\n        console.log(timeOfCommencement);\r\n\r\n    }, [spanValue])\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    const selectDoctor = () => {\r\n        //Call api to schedule appointment...\r\n        //Get the details of the doctor in question...\r\n        if (cbxSpeciality === \"\" || txtDate === \"\") {\r\n            props.showToast(\"You must select both doctor's speciality and date to proceed.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const thisDoctor = doctorsData.find(item => item.uidNo === selectedDoctor)\r\n        props.setIsLoaderVisible(true);\r\n\r\n        const input1 = `doctor_id=${thisDoctor.uidNo}&doctor_name=${thisDoctor.name}&doctor_email_id=${thisDoctor.email || 'somedoctor@mailer.com'}&`;\r\n        const input2 = `patient_id=${props.data.uidNo}&patient_name=${props.data.name}&patient_email_id=${props.data.emailId || 'somepatient@gmail.com'}&`;\r\n        const input3 = `starttime=${timeOfCommencement.getTime()}&duration=${0.50 * 60 * 60}`\r\n        ////const input3 = `starttime=1642264897448&duration=${0.75 * 60 * 60}`\r\n\r\n        const options = constants.postOptions;\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(`${CryptoApiPath}scheduleAppointment?${input1}${input2}${input3}`, options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    //Did a proper scheduling...\r\n                    //Get the parameters...\r\n                    props.setIsLoaderVisible(false);\r\n\r\n                    props.setSpecialObject({\r\n                        speciality: cbxSpeciality,\r\n                        startTime: timeOfCommencement.getTime(),\r\n                        duration: 0.50 * 60,\r\n                        meetingID: response.result?.meeting_id,\r\n                        doctor_id: thisDoctor.uidNo,\r\n                        doctor_name: thisDoctor.name\r\n                    })\r\n\r\n                    //Set other parameters...\r\n                    props.setDoctorSelected(selectedDoctor)\r\n                    props.hideDoctorsDialog();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err, \"exclamation\");\r\n            })\r\n\r\n    }\r\n\r\n    const doctorsArray = doctorsData && doctorsData.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                key={index}\r\n                selectedDoctor={selectedDoctor}\r\n                setSelectedDoctor={setSelectedDoctor}\r\n                id={item.uidNo}\r\n                src={item.photo}\r\n                name={item.name}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                rating={4.3}\r\n                spanValue={spanValue}\r\n                setSpanValue={setSpanValue}\r\n\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"modal fade show\">\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"nully\">\r\n                            <i className='icofont-doctor-alt'></i> Select Doctor\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"modal-body mb-2\">\r\n                        <div className='form-row-3'>\r\n                            <div className='input-group'>\r\n                                <label>Specialization</label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    id=\"cbxSpeciality\"\r\n                                    value={cbxSpeciality}\r\n                                    onChange={e => setCbxSpeciality(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                    <option value=\"Allergist\">Allergist</option>\r\n                                    <option value=\"Cardiologist\">Cardiologist</option>\r\n                                    <option value=\"Dermatologist\">Dermatologist</option>\r\n                                    <option value=\"Endocrinologist\">Endocrinologist</option>\r\n                                    <option value=\"Gastroenterologist\">Gastroenterologist</option>\r\n                                    <option value=\"Geriatrician\">Geriatrician</option>\r\n                                    <option value=\"Nephrologist\">Nephrologist</option>\r\n                                    <option value=\"Neurologist\">Neurologist</option>\r\n                                    <option value=\"OB/GYN\">OB/GYN</option>\r\n                                    <option value=\"Ophthalmologist\">Ophthalmologist</option>\r\n                                    <option value=\"Pediatrician\">Pediatrician</option>\r\n                                    <option value=\"Psychiatrist\">Psychiatrist</option>\r\n                                    <option value=\"Urologist\">Urologist</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='input-group'>\r\n                                <label>Choose Date</label>\r\n                                <input\r\n                                    className='form-control'\r\n                                    type='date'\r\n                                    id='txtDate'\r\n                                    value={txtDate}\r\n                                    onChange={e => setTxtDate(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className='input-group'>\r\n                                <label>Wallet Balance</label>\r\n                                <input\r\n                                    className='form-control'\r\n                                    value=\"123 HTRAX\"\r\n                                    disabled\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-row'>\r\n\r\n                        </div>\r\n                        <div className='form-row'>\r\n                            <div className='doctors-list-container'>\r\n                                {doctorsArray}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button\r\n                            id=\"btnUpdate\"\r\n                            onClick={selectDoctor}\r\n                            className=\"btn-main mr-1\"\r\n                        ><i className=\"icofont-doctor\"></i> Choose Doctor\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-main-outline\"\r\n                            onClick={() => props.hideDoctorsDialog()}\r\n                        >Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DoctorsListItem = props => {\r\n\r\n    const [spanValue, setSpanValue] = useState(1);\r\n    const [selDoctor, setSelDoctor] = useState('');\r\n\r\n    const randomValue = useRef(Math.floor(Math.random() * 9))\r\n\r\n    return (\r\n        <div className={selDoctor === props.id ? 'doctor-area selected' : 'doctor-area'}>\r\n            <div className=\"chosen-doctor\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                {/* <p><span>♥</span>{props.rating}</p> */}\r\n                <div className=\"details\">\r\n                    <h3>{props.name}</h3>\r\n                    <p>{props.specialization}</p>\r\n                    <div>\r\n                        <span className={spanValue === 1 ? 'blue' : ''} onClick={() => setSpanValue(1)}>\r\n                            11:00 - 11:45\r\n                        </span>\r\n                        <span className={spanValue === 2 ? 'blue' : ''} onClick={() => setSpanValue(2)}>\r\n                            14:00 - 14:45\r\n                        </span>\r\n                        <span className={spanValue === 3 ? 'blue' : ''} onClick={() => setSpanValue(3)}>\r\n                            20:00 - 20:45\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"schedule\">\r\n                        <p><i className='icofont-clock-time'></i>{' Choose Schedule (UTC)'}</p>\r\n                        <button\r\n                            style={{ float: 'right', marginTop: '10px' }}\r\n                            className=\"btn-main\"\r\n                            onClick={() => {\r\n                                setSelDoctor(props.id)\r\n                                props.setSelectedDoctor(props.id)\r\n                                props.setSpanValue(spanValue)\r\n\r\n                            }}\r\n                        ><i className='icofont-check-circled' /> Select Doctor\r\n                        </button>\r\n\r\n                    </div>\r\n                    <div className='costing'>\r\n                        <p><i className='icofont-bitcoin'></i> 1.{randomValue.current} HTRAX</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const SplitDate = (longDate) => {\r\n    const dateParts = longDate ? longDate?.toString().split(\"T\") : [\"-\", \"-\"];\r\n    const dateSplit = dateParts[0].split(\"-\");\r\n\r\n    const waDate = longDate\r\n        ? `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`\r\n        : \"-\";\r\n    const shortCodedDate = (longDate)\r\n        ? `${dateSplit[2]}${dateSplit[1]}${dateSplit[0].substring(2)}`\r\n        : \"-\";\r\n\r\n    return ({\r\n        \"date\": waDate,\r\n        \"time\": waDate !== \"-\" ? waDate.substring(0, 8) : \"\",\r\n        \"dateTime\": longDate ? `${waDate} ${dateParts[1].substring(0, 8)}` : waDate,\r\n        \"codedDate\": shortCodedDate,\r\n    });\r\n}\r\n\r\nexport const ShortDateToCoded = (shortDate) => {\r\n    /**\r\n     * Converts the date\r\n     * to a 6-digit\r\n     * short format\r\n     */\r\n    const splitDate = shortDate ? shortDate.split(\"-\") : [\"-\", \"-\"]\r\n    return (\r\n        splitDate[2] + splitDate[1] + splitDate[0].substring(2)\r\n    )\r\n}\r\n\r\nfunction formatDate(val) {\r\n    if (val < 10) {\r\n        return `0${val}`\r\n    } else {\r\n        return `${val}`\r\n    }\r\n}\r\n\r\nexport const SplitDateFromTimestamp = timeStamp => {\r\n    const longDate = new Date(parseInt(timeStamp));\r\n\r\n    const waDate = formatDate(longDate.getDate()) +\r\n          \"/\" + formatDate(longDate.getMonth() + 1) +\r\n          \"/2022\" + //longDate.getFullYear() +\r\n          \" \" + formatDate(longDate.getHours()) +\r\n          \":\" + formatDate(longDate.getMinutes()) +\r\n          \":\" + formatDate(longDate.getSeconds())\r\n\r\n    return ({\r\n        \"date\": waDate.split(\" \")[0],\r\n        \"time\": waDate.split(\" \")[1],\r\n        \"timeNoSecs\": waDate.split(\" \")[1].substring(0, 5),\r\n        \"dateTime\": waDate,\r\n\r\n    });\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { DoctorsDialog } from './doctors-dialog';\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport { SplitDateFromTimestamp } from '../assets/common/split-date';\r\nimport { constants } from '../assets/common/constants';\r\n\r\nconst ScheduleAppointment = props => {\r\n\r\n    const [doctorSelected, setDoctorSelected] = useState('')\r\n    const [showDoctorDialog, setShowDoctorDialog] = useState(false);\r\n    const [doctorsData, setDoctorsData] = useState({})\r\n\r\n    const [txtPatientsInstruction, setTxtPatientsInstruction] = useState('')\r\n    const [txtSupportingInfo, setTxtSupportingInfo] = useState('')\r\n    const [fileConsent, setFileConsent] = useState('')\r\n    const [specialObject, setSpecialObject] = useState('')\r\n\r\n    const scheduleAppointment = () => {\r\n        //Use the endpoint for the appointment scheduling\r\n        const payLoad = {\r\n            \"meetingId\": specialObject.meetingID,\r\n            \"speciality\": specialObject.speciality,\r\n            \"startTIme\": specialObject.startTime,\r\n            \"duration\": specialObject.duration,\r\n            \"patientInstruction\": txtPatientsInstruction,\r\n            \"patientId\": props.data.uidNo,\r\n            \"doctorId\": specialObject.doctor_id,\r\n            \"supportingInfo\": {\r\n                \"filesConsent\": fileConsent\r\n            }\r\n        }\r\n\r\n        const options = { ...constants.postOptions, 'body': JSON.stringify(payLoad) }\r\n\r\n        props.setIsLoaderVisible(true);\r\n        fetch(ApiPath + \"appointment/bookAppointment\", options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response.status === \"success\") {\r\n                    //Success message\r\n                    props.showToast(\"Appointment with doctor scheduled successfully!\", \"success\");\r\n\r\n                    props.setAppointmentBooked()\r\n                    props.hideAppointmentDialog();\r\n                    //props.setScheduleObject({ ...payLoad, \"doctor_name\": specialObject.doctor_name })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err, 'exclamation')\r\n            })\r\n\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const params = constants.getOptions;\r\n    \r\n    useEffect(() => {\r\n        //Use the selected doctor to reload the doctor's profile and hsow data here...\r\n\r\n        if (doctorSelected) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + doctorSelected, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n\r\n            //Alwasy remember to reset this so that we dont have an infinite loop\r\n            setDoctorSelected(false);\r\n        }\r\n\r\n    }, [doctorSelected])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dialog-background fade\">\r\n                <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-stopwatch\"></i> Schedule Appointment</h2>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n\r\n                        <div className='form-row-1-2'>\r\n                            <div className='input-group'>\r\n                                <label>Choose Doctor</label>\r\n                                <button\r\n                                    className=\"btn-main-outline\"\r\n                                    onClick={() => setShowDoctorDialog(true)}\r\n                                >Browse for Doctor...\r\n                                </button>\r\n                            </div>\r\n                            <div className='doctor-area'>\r\n                                <div className={doctorSelected !== '' ? 'chosen-doctor' : 'd-none'}>\r\n                                    <img src='/portfolio/team-4.jpg' alt='' />\r\n                                    <div className=\"details\">\r\n                                        <h3>{doctorsData && \"Dr. \" + doctorsData.name}</h3>\r\n                                        <p>{doctorsData?.specialization?.certification}</p>\r\n                                        <div>\r\n                                            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}><i className='icofont-clock-time' /></span>\r\n                                            <span>{specialObject !== '' && SplitDateFromTimestamp(specialObject.startTime).dateTime}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={doctorSelected === '' ? 'no-doctor-yet' : 'd-none'}>\r\n                                    <img src='/res/doctor.png' alt='' width={50} />\r\n                                    <h2>No Doctor Chosen yet...</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row mb-2 mt-2\" style={{ borderBottom: '2px solid var(--light-golden-rod)' }}>\r\n\r\n                        </div>\r\n                        <div className='form-row'>\r\n                            <div className='input-group'>\r\n                                <label>Allow Doctor to view my medical history?</label>\r\n                                <select\r\n                                    id=\"fileConsent\"\r\n                                    value={fileConsent}\r\n                                    className='form-control'\r\n                                    onChange={e => setFileConsent(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-row-2'>\r\n                            <div className='input-group'>\r\n                                <label>Patients Instructions</label>\r\n                                <textarea\r\n                                    id='txtPatientsInstruction'\r\n                                    value={txtPatientsInstruction}\r\n                                    onChange={e => setTxtPatientsInstruction(e.target.value)}\r\n                                    rows={3}\r\n                                    className='form-control'\r\n                                />\r\n                            </div>\r\n                            <div className='input-group'>\r\n                                <label>Supporting Info</label>\r\n                                <textarea\r\n                                    id='txtSupportingInfo'\r\n                                    value={txtSupportingInfo}\r\n                                    onChange={e => setTxtSupportingInfo(e.target.value)}\r\n                                    rows={3}\r\n                                    className='form-control'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer main\">\r\n                        <button\r\n                            id=\"btnUpdate\"\r\n                            onClick={scheduleAppointment}\r\n                            className=\"btn-main mr-1\"\r\n                        ><i className=\"icofont-checked\"></i> Schedule\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-main-outline\"\r\n                            onClick={() => props.hideAppointmentDialog()}\r\n                        >Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                showDoctorDialog && <DoctorsDialog\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    hideDoctorsDialog={() => setShowDoctorDialog(false)}\r\n                    setDoctorSelected={setDoctorSelected}\r\n                    data={props.data}\r\n                    setSpecialObject={setSpecialObject}\r\n\r\n                />\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScheduleAppointment;\r\n","import { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport ScheduleAppointment from '../../appointments/schedule-appointment';\r\n\r\nexport const Appointments = props => {\r\n\r\n    const { appointmentBooked, doctorsData } = props;\r\n    const [showAppointmentDialog, setShowAppointmentDialog] = useState(false);\r\n    const [appTime, setAppTime] = useState('');\r\n    const [dateToString, setDateToString] = useState('');\r\n\r\n    const remainingTime = () => {\r\n        const apptTime = new Date(parseInt(doctorsData?.starttime)).getTime();\r\n        const today = new Date().getTime();\r\n\r\n        //Set date to string\r\n        setDateToString(new Date(apptTime).toDateString())\r\n\r\n        // // if ((apptTime - today) < 0) {\r\n        // //     props.setAppointmentBooked(false);\r\n        // //     return 'Meeting Expired!'\r\n        // // }\r\n\r\n        //Else proceed...\r\n        const diff = new Date(apptTime - today);\r\n\r\n        //return the value in hours and days...\r\n        let returnValue = \"\";\r\n        if (parseInt(diff.getHours() / 24) < 1) {\r\n            //Less than 1 day...\r\n            if (diff.getHours() === 0) {\r\n                returnValue = `${diff.getMinutes()} minutes`;\r\n            } else {\r\n                returnValue = `${diff.getHours()} hours and ${diff.getMinutes()} minutes`\r\n            }\r\n\r\n        } else {\r\n            if (diff.getHours() === 0) {\r\n                returnValue = `${diff.getHours() % 24} days ${diff.getMinutes()} minutes`;\r\n            } else {\r\n                returnValue = `${diff.getHours() % 24} days ${diff.getHours()} hours and ${diff.getMinutes()} minutes`\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAppTime(remainingTime);\r\n    }, [doctorsData])\r\n\r\n    const noPastAppointments = (props.pastAppointments.length !== 0) ? 'book-appointment' : 'd-none';\r\n    const showPastAppointments = (props.pastAppointments.length === 0) ? 'past-appointments' : 'd-none';\r\n\r\n    return (\r\n        <>\r\n            <div className='appointment'>\r\n                <h2><i className='icofont-double-right'></i> Upcoming Appointment</h2>\r\n                {!appointmentBooked\r\n                    ? <div className=\"book-appointment\">\r\n\r\n                        <img src=\"/img/svg/doctor_appointment.svg\" alt=\"\" />\r\n                        <img className='warning' src=\"/warning-96.png\" alt=\"\" />\r\n                        <h4>You do not have any upcoming appointment!</h4>\r\n\r\n                        <button\r\n                            className=\"btn-main\"\r\n                            onClick={() => {\r\n                                setShowAppointmentDialog(true)\r\n                            }}\r\n                        >Book an Appointment...\r\n                        </button>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div className='details'>\r\n                            <img src=\"/portfolio/team-3.jpg\" alt=\"\" />\r\n                            <h3>Your upcoming virtual appointment with</h3>\r\n                            <h4>{`Dr. ${doctorsData?.doctor_name}`}</h4>\r\n\r\n                            <h5><i className='icofont-clock-time' /> is in {appTime}</h5>\r\n                            <p><i className='icofont-calendar' /> {dateToString}</p>\r\n                            <Link\r\n                                to={doctorsData !== '' && '/meeting/meeting-page?meeting_id=' +\r\n                                    doctorsData?.meetinng_id + '&doctor_id=' + doctorsData?.doctor_id +\r\n                                    '&gravatar=./portfolio/avatar.png&past_prescription=' + props.data?.pastPrescriptions[0]?.name +\r\n                                    '&patient_id=' + props.data?.uidNo + '&tk=' + sessionStorage.getItem('token')}\r\n                                target='_blank'>\r\n                                <i className='icofont-video-cam' /> Join Video Consultation\r\n                            </Link>\r\n                        </div>\r\n                        <h2><i className='icofont-double-right'></i> Past Appointments</h2>\r\n                        <div className={noPastAppointments}>\r\n\r\n                            <img src=\"/img/svg/doctor_appointment.svg\" alt=\"\" style={{width:'200px'}} />\r\n                            <img className='warning' src=\"/warning-96.png\" alt=\"\" />\r\n                            <h4>No previous appointment!</h4>\r\n\r\n                        </div>\r\n                        <div className={showPastAppointments}>\r\n                            <div className=\"appt-card\">\r\n                                <div className='card-top'>\r\n                                    <img src='/portfolio/team-2.jpg' alt='' />\r\n                                    <div className=\"card-top-text\">\r\n                                        <h3>Dr. James 12345</h3>\r\n                                        <h5>Cardiologist</h5>\r\n                                        <span>12 years of experience</span>\r\n                                        <p><i className='icofont-location-pin' /> London - UK | Karisho Cardio Clinic</p>\r\n                                    </div>\r\n                                </div>\r\n                                <h6>Next Availability at:</h6>\r\n                                <span><i className=\"icofont-video\" /> 10:00AM Tomorrow</span>\r\n                            </div>\r\n                            <div className=\"appt-card\">\r\n                                <div className='card-top'>\r\n                                    <img src='/portfolio/team-4.jpg' alt='' />\r\n                                    <div className=\"card-top-text\">\r\n                                        <h3>Dr. Carol Appenlica</h3>\r\n                                        <h5>Dermatologist</h5>\r\n                                        <span>7 years of experience</span>\r\n                                        <p><i className='icofont-location-pin' /> Chicago - US | SafeHope Medical Center</p>\r\n                                    </div>\r\n                                </div>\r\n                                <h6>Next Availability at:</h6>\r\n                                <span><i className=\"icofont-video\" /> 10:00AM Tomorrow</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </>\r\n                }\r\n            </div>\r\n            {\r\n                showAppointmentDialog && <ScheduleAppointment\r\n                    data={JSON.parse(sessionStorage.getItem('patient'))}\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    setAppointmentBooked={() => props.setAppointmentBooked(true)}\r\n                    hideAppointmentDialog={() => setShowAppointmentDialog(false)}\r\n\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","export const MedicalRecordsTabHeaders = props => {\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-drug\"></i>Prescriptions\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-surgeon-alt\"></i>Visits\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-prescription\"></i>Lab Reports\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MedicalHistoryDialog } from \"../others/medical-history-dialog\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\n\r\nexport const Prescriptions = props => {\r\n\r\n    const [prescriptionsArray] = useState(props.data.pastPrescriptions)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [prescriptionsExist, setPrescriptionsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        prescriptionsArray.length === 0\r\n            ? setPrescriptionsExist(false)\r\n            : setPrescriptionsExist(true);\r\n\r\n    }, [prescriptionsArray])\r\n\r\n\r\n    //Set the array of prescriptions to show...\r\n    const currentMeds = prescriptionsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n                nameField={item.name}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                prescriptionsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Past Prescriptions</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No Past Prescription...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication d-none\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add prescription\r\n            </button>\r\n\r\n            {dialogVisible && <MedicalHistoryDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).pastPrescriptions}\r\n                updateField={'pastPrescriptions'}\r\n                questionString={\"Have you taken any medicines in past?\"}\r\n                title={\"Prescription\"}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useState } from \"react\"\r\nimport { MedicalRecordsTabHeaders } from \"../medical-records/medical-records-tab-headers\"\r\nimport { Prescriptions } from \"../medical-records/prescriptions\"\r\n\r\nexport const MedicalRecords = props => {\r\n\r\n    const [selectedTab, setSelectedTab] = useState(1)\r\n\r\n    return (\r\n        <div className='appointment'>\r\n            <h2 style={{ marginBottom: '30px' }}><i className='icofont-double-right'></i> Medical Records</h2>\r\n            <MedicalRecordsTabHeaders\r\n                selectedTab={selectedTab}\r\n                setSelectedTab={setSelectedTab}\r\n            />\r\n            {selectedTab === 1 &&\r\n                <Prescriptions\r\n                    data={props.data}\r\n                    medicationsExist={false}\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    setResetData={props.setResetData}\r\n\r\n                />\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const SideBarItem = props => {\r\n\r\n    const { headerText, contentText, selectedIndex, setSelectedIndex, index } = props;\r\n    const isActive = selectedIndex === index ? true : false;\r\n    \r\n    return (\r\n        <div\r\n            className={isActive ? 'side-bar-item active' : 'side-bar-item'}\r\n            onClick={() => setSelectedIndex(index)}\r\n        >\r\n            <div>\r\n                <h2>{headerText}</h2>\r\n                <p>{contentText}</p>\r\n            </div>\r\n            <i className='icofont-rounded-right'></i>\r\n        </div>\r\n    )\r\n}\r\n","export const sideBarList = [\r\n    {\r\n        index: 1,\r\n        headerText: 'My Appointments',\r\n        contentText: 'View all appointments, including upcoming and past appointments',\r\n        isActive: true,\r\n    },\r\n    {\r\n        index: 2,\r\n        headerText: 'Medical Records',\r\n        contentText: 'The purpose of a medical clearance is to identify specific health needs and medical conditions that may require speciality management, follow up or monitoring.',\r\n    },\r\n    {\r\n        index: 3,\r\n        headerText: 'Medical Insurance',\r\n        contentText: 'With a valid insurance package, be sure to get the best of healtcare advice from a specialist.',\r\n    },\r\n    {\r\n        index: 4,\r\n        headerText: 'Genetic Information',\r\n        contentText: 'As an integral part of medical treatment, genomic data in the EHR must therefore be continuously and easily accessible.',\r\n    },\r\n    {\r\n        index: 5,\r\n        headerText: 'Vaccination Reports',\r\n        contentText: 'Provides a history of all vaccines received with exact dates, vaccination type, dose, purpose and any other information related to the vaccination.',\r\n    },\r\n]\r\n","export const MedicalInsurance = () => {\r\n    return (\r\n        <div className='appointment'>\r\n            <h2><i className='icofont-double-right'></i> Medical Insurance</h2>\r\n            <div className='not-found'>\r\n                <img src='/not-found.svg' />\r\n                <h4>No Records Found!</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const GeneticInformation = () => {\r\n    return (\r\n        <div className='appointment'>\r\n            <h2><i className='icofont-double-right'></i> Genetic Information</h2>\r\n            <div className='not-found'>\r\n                <img src='/not-found.svg' />\r\n                <h4>No Records Found!</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const VaccinationReports = () => {\r\n    return (\r\n        <div className='appointment'>\r\n            <h2><i className='icofont-double-right'></i> Vaccination Reports</h2>\r\n            <div className='not-found'>\r\n                <img src='/not-found.svg' />\r\n                <h4>No Records Found!</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const HealthProfileBar = () => {\r\n\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [patientsData, setPatientsData] = useState(() => JSON.parse(sessionStorage.getItem('patient')));\r\n\r\n    useEffect(() => {\r\n        //Check every 30 secs...\r\n        setInterval(() => {\r\n            //First, fetch the patients data\r\n            setPatientsData(() => JSON.parse(sessionStorage.getItem('patient')));\r\n        }, 30000);\r\n\r\n        checkCircleSector()\r\n        const progressStatus = document.querySelector(\".progress-status\");\r\n\r\n        if (percentage < 50) {\r\n            progressStatus.style.background = 'var(--light-golden-rod)';\r\n        } else if (percentage > 50 && percentage < 70) {\r\n            progressStatus.style.background = 'var(--bluish)';\r\n        } else if (percentage > 69) {\r\n            progressStatus.style.background = 'var(--main-green)';\r\n        }\r\n\r\n        progressStatus.style.width = `${percentage}%`;\r\n\r\n    }, [percentage])\r\n\r\n    const checkCircleSector = () => {\r\n        //Returns a value based on the percentage completion of\r\n        //the patient's data..\r\n        //First, get all the relative values required...\r\n        const pix = patientsData.photo === \"\" ? 0 : 5;\r\n        const lifeStyle1 = (patientsData.lifeStyle?.activityLevel && patientsData.lifeStyle?.activityLevel === \"\") ? 0 : 3;\r\n        const lifeStyle2 = patientsData.lifeStyle?.alcoholConsumption === \"\" ? 0 : 3;\r\n        const lifeStyle3 = patientsData.lifeStyle?.foodPreference === \"\" ? 0 : 3;\r\n        const lifeStyle4 = patientsData.lifeStyle?.smokingHabbit === \"\" ? 0 : 3;\r\n\r\n        //general\r\n        const general1 = patientsData.general?.bloodGroup === \"\" ? 0 : 2;\r\n        const general2 = patientsData.general?.bmi === \"\" ? 0 : 2;\r\n        const general3 = patientsData.general?.bp === \"\" ? 0 : 2;\r\n        const general4 = patientsData.general?.chestExpansion === \"\" ? 0 : 2;\r\n        const general5 = patientsData.general?.height === \"\" ? 0 : 2;\r\n        const general6 = patientsData.general?.oxygenSaturation === \"\" ? 0 : 2;\r\n        const general7 = patientsData.general?.pulse === \"\" ? 0 : 2;\r\n        const general8 = patientsData.general?.vision === \"\" ? 0 : 2;\r\n        const general9 = patientsData.general?.weight === \"\" ? 0 : 2;\r\n\r\n        const general = general1 + general2 + general3 + general4 + general5 + general6 + general7 + general8 + general9;\r\n\r\n        //Name and phone\r\n        const fullName = patientsData.name === \"\" ? 0 : 10;\r\n        const phoneNo = patientsData.phoneNumber === \"\" ? 0 : 10;\r\n        const gender = patientsData.gender === \"\" ? 0 : 5;\r\n        const birthDate = patientsData.birthDate === \"\" ? 0 : 5;\r\n        const email = patientsData.emailId === \"\" ? 0 : 5;\r\n        const maritalStatus = patientsData.maritalStatus === \"\" ? 0 : 5;\r\n        const pastPrescriptions = patientsData.pastPrescriptions?.length === 0 ? 0 : 5;\r\n        const currentMedications = patientsData.currentMedications?.length === 0 ? 0 : 5;\r\n        const diagnosisReport = patientsData.diagnosisReport?.length === 0 ? 0 : 5;\r\n        const address = patientsData.address?.length === 0 || Object.keys(patientsData.address[0]).length === 0 ? 0 : 5;\r\n        const contactPerson = patientsData.contactPerson?.length === 0 ? 0 : 5;\r\n\r\n        const totalValue = pix + lifeStyle1 + lifeStyle2 + lifeStyle3 + lifeStyle4 + general +\r\n            fullName + phoneNo + gender + email + maritalStatus + pastPrescriptions +\r\n            currentMedications + diagnosisReport + address + contactPerson + birthDate;\r\n\r\n        //Set the variable...\r\n        setPercentage(totalValue);\r\n\r\n        // //const circle2 = document.getElementById('secondCircle');\r\n        // //circle2.style.strokeDashoffset = `calc(440 - (440 * ${totalValue}) / 100)`;\r\n\r\n\r\n        //\r\n        // // if (totalValue < 50) {\r\n        // //     circle2.style.stroke = 'var(--light-golden-rod)';\r\n        // // } else if (totalValue > 50 && totalValue < 70) {\r\n        // //     circle2.style.stroke = 'var(--bluish)';\r\n        // // } else if (totalValue > 69) {\r\n        // //     circle2.style.stroke = 'var(--main-green)';\r\n        // // }\r\n    }\r\n\r\n    return (\r\n        <div className='health-status'>\r\n            <h2>Your Health Profile</h2>\r\n            <div>\r\n                <span className='progress-bar'></span>\r\n                <span className='progress-status'></span>\r\n            </div>\r\n\r\n            <h4>{percentage}% Complete</h4>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport useCheckAppointmentBooked from \"../hooks/useCheckAppointmentBooked\";\r\n\r\nimport { DHPHeader } from \"../components/dhp-header\";\r\nimport { NavBar } from \"../components/nav-bar\";\r\nimport { Appointments } from \"./side-tab-pages/appointments\";\r\nimport { MedicalRecords } from \"./side-tab-pages/medical-records\";\r\nimport { SideBarItem } from \"./others/side-bar-item\";\r\nimport { sideBarList } from \"./others/side-bar-list\";\r\nimport { MedicalInsurance } from \"./side-tab-pages/medical-insurance\";\r\nimport { GeneticInformation } from \"./side-tab-pages/genetic-information\";\r\nimport { VaccinationReports } from \"./side-tab-pages/vaccination-reports\";\r\nimport { HealthProfileBar } from \"./others/health-profile-bar\";\r\n\r\nconst DigitalHealthPassport = props => {\r\n\r\n    const [selectedIndex, setSelectedIndex] = useState(1);\r\n    const [appointmentBooked, setAppointmentBooked] = useState(false);\r\n    const [patientsData] = useState(JSON.parse(sessionStorage.getItem('patient')))\r\n\r\n    const { isLoading, doctorsData, pastAppointments } = useCheckAppointmentBooked(patientsData.uidNo, setAppointmentBooked, appointmentBooked);\r\n\r\n    const sideBarItems = sideBarList.map(item => {\r\n        return <SideBarItem\r\n            key={item.index}\r\n            headerText={item.headerText}\r\n            contentText={item.contentText}\r\n            index={item.index}\r\n            selectedIndex={selectedIndex}\r\n            setSelectedIndex={value => setSelectedIndex(value)}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <div className='dhp-container'>\r\n            {isLoading ? props.setIsLoaderVisible(true) : props.setIsLoaderVisible(false)}\r\n            <NavBar\r\n                activeLink={1}\r\n                picture={patientsData.photo}\r\n                data={patientsData}\r\n            />\r\n            <DHPHeader />\r\n            <HealthProfileBar />\r\n            <div className='dhp-body'>\r\n                <div className=\"left-side-bar\">\r\n                    {sideBarItems}\r\n                </div>\r\n                <div className='main-content'>\r\n                    {selectedIndex === 1 && <Appointments\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        appointmentBooked={appointmentBooked}\r\n                        setAppointmentBooked={setAppointmentBooked}\r\n                        doctorsData={doctorsData}\r\n                        pastAppointments={pastAppointments}\r\n                    />\r\n                    }\r\n                    {selectedIndex === 2 && <MedicalRecords\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        doctorsData={doctorsData}\r\n                        data={patientsData}\r\n                    />}\r\n\r\n                    {selectedIndex === 3 && <MedicalInsurance />}\r\n                    {selectedIndex === 4 && <GeneticInformation />}\r\n                    {selectedIndex === 5 && <VaccinationReports />}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DigitalHealthPassport;\r\n","import { Link, useHistory } from 'react-router-dom'\r\n\r\nconst Page404 = () => {\r\n    const history = useHistory();\r\n\r\n    const previousPage = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='page-404-container'>\r\n                <h1>Page Not Found!</h1>\r\n                <img src='/404.svg' alt='' />\r\n                <div className='buttons-404'>\r\n                    <button id='previous' onClick={previousPage}>Go Back</button>\r\n                    <Link id='homePage' to=\"/\">Home Page</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { countries } from '../assets/common/countries';\r\n\r\nexport default function CountrySelect(props) {\r\n    return (\r\n        <Autocomplete\r\n            id=\"country-select-demo\"\r\n            sx={{ width: 300 }}\r\n            options={countries}\r\n            autoHighlight\r\n            getOptionLabel={(option) => option.label}\r\n            renderOption={(opts, option) => (\r\n                <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...opts}>\r\n                    <img\r\n                        loading=\"lazy\"\r\n                        width=\"20\"\r\n                        src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\r\n                        srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\r\n                        alt=\"\"\r\n                    />\r\n                    {option.label} ({option.code}) +{option.phone}\r\n                </Box>\r\n            )}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={props.label}\r\n                    inputProps={{\r\n                        ...params.inputProps,\r\n                        autoComplete: 'new-password', // disable autocomplete and autofill\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport FileInput from '../../components/file-input';\r\n\r\nexport const AddQualificationDialog = (props) => {\r\n\r\n    const [txtCode, setTxtCode] = useState(props.qualifications?.count > 0 ? props?.qualifications[props.dataIndex]?.code : '');\r\n    const [txtDocument, setTxtDocument] = useState('');\r\n    const [txtStartDate, setTxtStartDate] = useState('')\r\n    const [txtEndDate, setTxtEndDate] = useState('')\r\n    const [txtIssuer, setTxtIssuer] = useState('')\r\n\r\n    const updateQualification = () => {\r\n        //Add the qualification to a list...\r\n        //First, set the object....\r\n        if (txtCode === \"\") {\r\n            props.showToast(\"Enter proper qualification to proceed.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        if (txtStartDate === \"\" || txtEndDate === \"\") {\r\n            props.showToast(\"Enter appropriate start date and end date\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        if (txtIssuer === \"\") {\r\n            props.showToast(\"Enter Issuing authority to proceed.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const qualifications = {\r\n            \"code\": txtCode,\r\n            \"document\": txtDocument,\r\n            \"period\": {\r\n                \"start\": txtStartDate,\r\n                \"end\": txtEndDate\r\n            },\r\n            \"issuer\": txtIssuer,\r\n            \"issuerId\": props.qualificationsList?.length,\r\n        }\r\n\r\n        props.setQualificationsList([...props.qualificationsList, qualifications])\r\n\r\n        console.log([...props.qualificationsList, JSON.stringify(qualifications)]);\r\n\r\n        //Done? then close window...\r\n        props.showToast(\"Qualification added!\", \"success\");\r\n        props.hideDialog();\r\n\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}>\r\n                        <i className=\"icofont-plus\" /> Add Qualification\r\n                    </h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                            <label><span>*</span>Qualification</label>\r\n                            <input\r\n                                className='form-control'\r\n                                id=\"txtCode\"\r\n                                value={txtCode}\r\n                                onChange={e => setTxtCode(e.target.value)}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                            <label>Attach Cerfiticate</label>\r\n                            <FileInput\r\n                                setFileOutput={setTxtDocument}\r\n                                acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row-2'>\r\n                        <div className='input-group'>\r\n                            <label><span>*</span>Select Period - From</label>\r\n                            <input\r\n                                className='form-control'\r\n                                id=\"txtStartDate\"\r\n                                value={txtStartDate}\r\n                                onChange={e => setTxtStartDate(e.target.value)}\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label><span>*</span>To</label>\r\n                            <input\r\n                                className='form-control'\r\n                                id=\"txtEndDate\"\r\n                                value={txtEndDate}\r\n                                onChange={e => setTxtEndDate(e.target.value)}\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row mb-2\">\r\n                        <div className='input-group'>\r\n                            <label><span>*</span>Issuing Authority</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtIssuer\"\r\n                                value={txtIssuer}\r\n                                onChange={e => setTxtIssuer(e.target.value)}\r\n                                type=\"text\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateQualification}>\r\n                        <i className=\"icofont-plus\" /> Add\r\n                    </button>\r\n                    <button\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { shortDateString } from \"../../assets/common/operations\";\r\n\r\nexport const QualificationsItem = props => {\r\n    return (\r\n        <div className=\"qual-container\">\r\n\r\n            <i className=\"icofont-graduate\" />\r\n            <div className=\"qual-header\">\r\n                <h3>{props.issuer}</h3>\r\n                <div className=\"icons\">\r\n                     {props.document !== \"\" && <i\r\n                        className=\"icofont-attachment mr-1\"\r\n                        title=\"Preview Attachment\"\r\n                        onClick={() => {\r\n                            props.setImageURL(props.document)\r\n                            props.showImageDialog();\r\n                        }}\r\n                    />}\r\n                   <i\r\n                        className=\"icofont-edit-alt d-none\"\r\n                        title=\"Edit\"\r\n                        onClick={() => {\r\n                            //Edit the item by setting the parameters necessary...\r\n                            props.setEditIndex(props.itemIndex);\r\n                            props.showQualDialog()\r\n                        }}\r\n                    />\r\n                   <i\r\n                        className=\"icofont-close-circled\"\r\n                        title=\"Remove\"\r\n                        onClick={() => {\r\n                            //Remove the item from the list...\r\n                            props.dataList.splice(props.itemIndex, 1)\r\n                            props.setQualificationsList(props.dataList)\r\n                        }}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"qual-main\">\r\n                <div className=\"text\">\r\n                    <h4>• {props.code}</h4>\r\n                    <p><span>{shortDateString(props.period?.start)}</span> - <span>{shortDateString(props.period?.end)}</span></p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport FileInput from \"../components/file-input\";\r\nimport CountrySelect from \"../components/country-select\";\r\nimport { AddQualificationDialog } from \"./dialogs/add-qualification-dialog\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { QualificationsItem } from \"./lists-objects/qualifications-item\"\r\nimport { ImageDialog } from \"../components/image-dialog\";\r\n\r\nconst DoctorsProfileUpdate = (props) => {\r\n\r\n    const [profilePicture, setProfilePicture] = useState('');\r\n    const [txtContactAddress, setTxtContactAddress] = useState('');\r\n    const [txtContactCity, setTxtContactCity] = useState('');\r\n    const [txtContactState, setTxtContactState] = useState('');\r\n    const [txtContactCountry, setTxtContactCountry] = useState('');\r\n    const [txtClinicAddress, setTxtClinicAddress] = useState('');\r\n    const [txtClinicCity, setTxtClinicCity] = useState('');\r\n    const [txtClinicState, setTxtClinicState] = useState('');\r\n    const [txtClinicCountry, setTxtClinicCountry] = useState('');\r\n    const [txtPhone, setTxtPhone] = useState('');\r\n    const [txtEmail, setTxtEmail] = useState('');\r\n    const [chkProfileConsent, setChkProfileConsent] = useState(false);\r\n    const [cbxSpecialization, setCbxSpecialization] = useState('');\r\n    const [practiceDoc, setPracticeDoc] = useState('');\r\n    const [specializationDoc, setSpecializationDoc] = useState('');\r\n    const [txtIssueDate, setTxtIssueDate] = useState('');\r\n    const [txtExpiryDate, setTxtExpiryDate] = useState('');\r\n    const [txtIssuingAuthority, setTxtIssuingAuthority] = useState('');\r\n    const [txtIcePhone, setTxtIcePhone] = useState('');\r\n    const [txtAvailableFrom, setTxtAvailableFrom] = useState('');\r\n    const [txtAvailableTo, setTxtAvailableTo] = useState('');\r\n    const [proofOfClinicDocument, setProofOfClinicDocument] = useState('')\r\n    const [txtProofFrom, setTxtProofFrom] = useState('');\r\n    const [txtProofTo, setTxtProofTo] = useState('');\r\n\r\n    const [selfOwned, setSelfOwned] = useState(true);\r\n    const [chkAgree, setChkAgree] = useState(false)\r\n    const [txtClinicOwner, setTxtClinicOwner] = useState('')\r\n    const [txtClinicPhone, setTxtClinicPhone] = useState('')\r\n    const [txtClinicEmail, setTxtClinicEmail] = useState('')\r\n\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n    const [imageURL, setImageURL] = useState(\"\");\r\n    const [editQualificationIndex, setEditQualificationIndex] = useState(0);\r\n\r\n    const [showQualificationDialog, setShowQualificationDialog] = useState(false);\r\n    const [qualificationsList, setQualificationsList] = useState([])\r\n\r\n\r\n    const doctorsSpecializations = [\"Allergist\", \"Cardiologist\", \"Dermatologist\", \"Endocrinologist\", \"Gastroenterologist\",\r\n        \"General Physician\", \"Geriatrician\", \"Nephrologist\", \"Neurologist\", \"OB/GYN\", \"Ophthalmologist\",\r\n        \"Orthopaedist\", \"Pediatrician\", \"Psychiatrist\", \"Urologist\"]\r\n\r\n    const specializationOptions = doctorsSpecializations.map(item => (<option key={item} value={item}>{item}</option>));\r\n\r\n    const qualifications = qualificationsList.map((item, index) => {\r\n        return (<QualificationsItem\r\n            key={index}\r\n            itemIndex={index}\r\n            period={item.period}\r\n            code={item.code}\r\n            document={item.document}\r\n            issuer={item.issuer}\r\n            showImageDialog={() => setImageDialogVisible(true)}\r\n            setImageURL={setImageURL}\r\n            dataList={qualificationsList}\r\n            setQualificationsList={setQualificationsList}\r\n            setEditIndex={value => setEditQualificationIndex(value)}\r\n            showQualDialog={() => setShowQualificationDialog(true)}\r\n\r\n        />)\r\n    })\r\n\r\n    const [fullname, setFullname] = useState('')\r\n    const [email, setEmail] = useState('');\r\n\r\n    useEffect(() => {\r\n        //This is for the default loading...\r\n        const tempData = JSON.parse(sessionStorage.getItem(\"temp\"));\r\n        setFullname(tempData?.name);\r\n        setEmail(tempData?.emailId);\r\n        setTxtPhone(tempData?.phoneNumber)\r\n        setTxtEmail(tempData?.emailId)\r\n\r\n    }, [])\r\n\r\n    const updateDoctorsData = () => {\r\n        //Set the contact data...\r\n        //Validate first...\r\n        if (txtContactAddress === \"\" || txtContactCity === \"\" || txtContactState === \"\") {\r\n            props.showToast(\"Ensure all personal contact data is supplied before proceeding.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const homeContact = {\r\n            \"type\": \"Home\",\r\n            \"houseNumber\": \"\",\r\n            \"street\": txtContactAddress,\r\n            \"city\": txtContactCity,\r\n            \"district\": \"\",\r\n            \"state\": txtContactState,\r\n            \"postalCode\": \"\",\r\n            \"country\": txtContactCountry,\r\n            \"period\": {\r\n                \"start\": \"\",\r\n                \"end\": \"\"\r\n            }\r\n        }\r\n\r\n        //Validate clinic contact\r\n        if (txtClinicAddress === \"\" || txtClinicCity === \"\" || txtClinicState === \"\") {\r\n            props.showToast(\"Ensure all clinic contact data is supplied before proceeding.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const clinicContact = {\r\n            \"type\": \"Clinic\",\r\n            \"houseNumber\": \"\",\r\n            \"street\": txtClinicAddress,\r\n            \"city\": txtClinicCity,\r\n            \"district\": \"\",\r\n            \"state\": txtClinicState,\r\n            \"postalCode\": \"\",\r\n            \"country\": txtClinicCountry,\r\n            \"period\": {\r\n                \"start\": \"\",\r\n                \"end\": \"\"\r\n            }\r\n        }\r\n\r\n        //Specialization...\r\n        if (cbxSpecialization === \"\" || specializationDoc === \"\" || practiceDoc === \"\" || txtIssueDate === \"\" || txtExpiryDate === \"\"\r\n            || txtIssuingAuthority === \"\") {\r\n            props.showToast(\"Specialization fields are all required.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        //Else add..\r\n        const specialization = {\r\n            \"type\": cbxSpecialization,\r\n            \"cerfification\": specializationDoc,\r\n        }\r\n\r\n        const license = {\r\n            \"certification\": practiceDoc,\r\n            \"expireDate\": txtExpiryDate,\r\n            \"issueDate\": txtIssueDate,\r\n            \"issuer\": txtIssuingAuthority,\r\n            \"issuerID\": \"\"\r\n        }\r\n\r\n        //In Case of Emergency\r\n        if (txtIcePhone === \"\" || txtAvailableFrom === \"\" || txtAvailableTo === \"\") {\r\n            props.showToast(\"Provide complete information for the I.C.E. fields before proceeding.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const ice = {\r\n            \"call\": {\r\n                \"period\": {\r\n                    \"start\": txtAvailableFrom,\r\n                    \"end\": txtAvailableTo\r\n                },\r\n                \"value\": txtIcePhone\r\n            },\r\n            \"sms\": {\r\n                \"period\": {\r\n                    \"start\": txtAvailableFrom,\r\n                    \"end\": txtAvailableTo\r\n                },\r\n                \"value\": txtIcePhone\r\n            }\r\n        }\r\n\r\n        //Proof of clinic...\r\n        if (proofOfClinicDocument === \"\") {\r\n            props.showToast(\"Upload document of proof of clinic / address before proceeding.\", \"exclamation\");\r\n            return;\r\n        } else if (!selfOwned) {\r\n            if (txtClinicOwner === \"\" || txtClinicPhone === \"\" || txtClinicEmail === \"\") {\r\n                props.showToast(\"Enter renter's details before proceeding.\", \"exclamation\");\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        const proofOfClinic = {\r\n            \"document\": proofOfClinicDocument,\r\n            \"type\": selfOwned ? \"self-owned\" : \"rented\",\r\n            \"renter\": {\r\n                \"name\": txtClinicOwner,\r\n                \"phone\": txtClinicPhone,\r\n                \"email\": txtClinicEmail\r\n            },\r\n            \"period\": {\r\n                \"start\": txtProofFrom,\r\n                \"end\": txtProofTo\r\n            }\r\n        }\r\n\r\n        //Check if the agree to terms box is checked...\r\n        if (!chkAgree) {\r\n            props.showToast(\"You must agree to undertaking to proceed.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            'address': [homeContact, clinicContact],\r\n            'photo': profilePicture,\r\n            'profileConsent': chkProfileConsent.toString(),\r\n            'qualification': qualificationsList,\r\n            'license': license,\r\n            'specialization': specialization,\r\n            'ice': ice,\r\n            'proofOfClinic': proofOfClinic,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n        props.showToast(\"This might take a while, as there's a lot of information to upload... Please be patient.\", 'information');\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n\r\n                    //Redirect to the doctor's profile page...\r\n                    history.push(\"/doctors/login\");\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const rentedClass = selfOwned ? \"form-row-3 d-none\" : \"form-row-3\";\r\n\r\n    return (\r\n        <>\r\n            <div className='background'>\r\n                <div className='grid-background d-none'></div>\r\n                <div className=\"plain-container\">\r\n                    <h2 className=\"registration-caption\"><i className=\"icofont-rounded-double-right\"></i> Complete Your Registration</h2>\r\n                    {/* Personal details... */}\r\n                    <div className='box-container'>\r\n                        <div className=\"doc-profile-header\">\r\n                            <h2>1</h2>\r\n                        </div>\r\n                        <h3>Personal Details</h3>\r\n                        <div className='doc-profile'>\r\n                            <div className=\"flex-center\" style={{ marginBottom: 0, marginRight: '30px' }}>\r\n                                <div className='image-box'>\r\n                                    <img src={profilePicture || '/portfolio/avatar.png'} alt='' />\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <FileInput\r\n                                        setFileOutput={setProfilePicture}\r\n                                        acceptFileTypes={\".png, .jpg, .jpeg\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"details\">\r\n                                <div className=\"name-group\">\r\n                                    <h4>Fullname</h4>\r\n                                    <p>{fullname}</p>\r\n                                </div>\r\n                                <div className=\"name-group\">\r\n                                    <h4>Email</h4>\r\n                                    <p>{email}</p>\r\n                                </div>\r\n                                <div className=\"name-group\">\r\n                                    <h4>Specialization</h4>\r\n                                    <p>{cbxSpecialization}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Contact */}\r\n                    <div className=\"box-container\">\r\n                        <div className=\"doc-profile-header\">\r\n                            <h2>2</h2>\r\n                        </div>\r\n                        <h3>Contact Details</h3>\r\n                        <div className=\"form-row-2\">\r\n                            <div className=\"input-group\">\r\n                                <textarea\r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    id=\"txtContactAddress\"\r\n                                    rows={3}\r\n                                    value={txtContactAddress}\r\n                                    onChange={e => setTxtContactAddress(e.target.value)}\r\n                                />\r\n                                <label>Contact Address</label>\r\n\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <textarea\r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    id=\"txtClinicAddress\"\r\n                                    rows={3}\r\n                                    value={txtClinicAddress}\r\n                                    onChange={e => setTxtClinicAddress(e.target.value)}\r\n                                />\r\n                                <label>Clinic Address</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row-2\">\r\n                            <div className=\"form-row-2\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        id=\"txtContactCity\"\r\n                                        value={txtContactCity}\r\n                                        onChange={e => setTxtContactCity(e.target.value)}\r\n                                    />\r\n                                    <label>Contact City</label>\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        id=\"txtContactState\"\r\n                                        value={txtContactState}\r\n                                        onChange={e => setTxtContactState(e.target.value)}\r\n                                    />\r\n                                    <label>Contact State</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row-2\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        id=\"txtClinicCity\"\r\n                                        value={txtClinicCity}\r\n                                        onChange={e => setTxtClinicCity(e.target.value)}\r\n                                    />\r\n                                    <label>Clinic City</label>\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        id=\"txtClinicState\"\r\n                                        value={txtClinicState}\r\n                                        onChange={e => setTxtClinicState(e.target.value)}\r\n                                    />\r\n                                    <label>Clinic State</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Country row */}\r\n                        <div className=\"form-row-2 mb-2\">\r\n                            <div className=\"form-row-2-1\">\r\n                                <CountrySelect\r\n                                    label={\"Contact Country\"}\r\n                                    id=\"txtContactCountry\"\r\n                                    value={txtContactCountry}\r\n                                    onChange={e => setTxtContactCountry(e.target.value)}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-row-2-1\">\r\n                                <CountrySelect\r\n                                    label={\"Clinic Country\"}\r\n                                    id=\"txtClinicCountry\"\r\n                                    value={txtClinicCountry}\r\n                                    onChange={e => setTxtClinicCountry(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-row-2'>\r\n                            <div className='input-group'>\r\n                                <PhoneInput\r\n                                    placeholder=\"\"\r\n                                    value={txtPhone}\r\n                                    onChange={phone => setTxtPhone(phone)}\r\n                                    className='form-control'\r\n                                    style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    id=\"txtEmail\"\r\n                                    value={txtEmail}\r\n                                    onChange={e => setTxtEmail(e.target.value)}\r\n                                    style={{ paddingTop: '12px', paddingBottom: '12px' }}\r\n                                    required\r\n                                />\r\n                                <label>Email</label>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"form-row\">\r\n                            <div className=\"check-box\">\r\n                                <label>\r\n                                    <input\r\n                                        checked={chkProfileConsent}\r\n                                        type=\"checkbox\"\r\n                                        className=\"custom-checkbox\"\r\n                                        id=\"chkProfileConsent\"\r\n                                        onChange={() => setChkProfileConsent(!chkProfileConsent)}\r\n\r\n                                    />  Allow patient to view profile\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Qualifications */}\r\n                    <div className=\"box-container\">\r\n                        <div className=\"doc-profile-header\">\r\n                            <h2>3</h2>\r\n                        </div>\r\n                        <h3>Qualifications</h3>\r\n                        <div className=\"qualifications\">\r\n                            {qualificationsList.length === 0\r\n                                ? <div className='not-found'>\r\n                                    <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                                    <h4 style={{ fontSize: '15px' }}>No Qualifications added...</h4>\r\n\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    {qualifications}\r\n                                </>}\r\n                            <button\r\n                                className=\"btn-main mb-2\"\r\n                                onClick={() => setShowQualificationDialog(true)}\r\n                            >\r\n                                Add qualification...\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Specialization */}\r\n                    <div className=\"box-container\">\r\n                        <div className=\"doc-profile-header\">\r\n                            <h2>4</h2>\r\n                        </div>\r\n                        <h3>Specialization</h3>\r\n                        <div className=\"form-row-2\">\r\n                            <div className=\"input-group\">\r\n                                <label>Specialization</label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    id=\"cbxSpecialization\"\r\n                                    value={cbxSpecialization}\r\n                                    onChange={e => setCbxSpecialization(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                    {specializationOptions}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row-2 mb-1\">\r\n                            <div className=\"input-group\">\r\n                                <label>Specialization document (upload)</label>\r\n                                <FileInput\r\n                                    setFileOutput={setSpecializationDoc}\r\n                                    acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row-2\">\r\n                            <div className=\"input-group\">\r\n                                <label>License to practice document (upload)</label>\r\n                                <FileInput\r\n                                    setFileOutput={setPracticeDoc}\r\n                                    acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row-2\">\r\n                            <div className=\"input-group\">\r\n                                <label>Issue date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtIssueDate\"\r\n                                    value={txtIssueDate}\r\n                                    onChange={e => setTxtIssueDate(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Expiry date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtExpiryDate\"\r\n                                    value={txtExpiryDate}\r\n                                    onChange={e => setTxtExpiryDate(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"input-group\">\r\n                                <label>Issuing Authority</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtIssuingAuthority\"\r\n                                    value={txtIssuingAuthority}\r\n                                    onChange={e => setTxtIssuingAuthority(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* ICE - In Case of Emergency */}\r\n                    <div className=\"box-container\">\r\n                        <div className=\"doc-profile-header\">\r\n                            <h2>5</h2>\r\n                        </div>\r\n                        <h3>ICE - (<b>I</b>n <b>C</b>ase of <b>E</b>mergency)</h3>\r\n                        <div className=\"form-row-2\">\r\n                            <div className=\"input-group\">\r\n                                <label>Phone (&amp; SMS)</label>\r\n                                <PhoneInput\r\n                                    placeholder=\"Enter mobile number\"\r\n                                    value={txtIcePhone}\r\n                                    onChange={phone => setTxtIcePhone(phone)}\r\n                                    className='form-control'\r\n                                    style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row-2\">\r\n                            <div className=\"input-group\">\r\n                                <label>Availability - From</label>\r\n                                <input\r\n                                    type=\"time\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtAvailableFrom\"\r\n                                    value={txtAvailableFrom}\r\n                                    onChange={e => setTxtAvailableFrom(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>To</label>\r\n                                <input\r\n                                    type=\"time\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtAvailableTo\"\r\n                                    value={txtAvailableTo}\r\n                                    onChange={e => setTxtAvailableTo(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Others */}\r\n                    <div className=\"box-container\">\r\n                        <div className=\"doc-profile-header\">\r\n                            <h2>6</h2>\r\n                        </div>\r\n                        <h3>Proof of Clinic / Address</h3>\r\n\r\n                        <div className=\"form-row-2-1-1 mb-1\">\r\n                            <div className=\"input-group\">\r\n                                <label>Upload document</label>\r\n                                <FileInput\r\n                                    setFileOutput={setProofOfClinicDocument}\r\n                                    acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Occupation Period</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtProofFrom\"\r\n                                    value={txtProofFrom}\r\n                                    onChange={e => setTxtProofFrom(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>To</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtProofTo\"\r\n                                    value={txtProofTo}\r\n                                    onChange={e => setTxtProofTo(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"questions\">\r\n                            <div className='question mb-1'>\r\n                                <p style={{ color: '#888' }}>What kind of operation do you run?</p>\r\n                                <div className=\"radio-group\">\r\n                                    <div className=\"radio-button\">\r\n                                        <label>\r\n                                            <input\r\n                                                type='radio'\r\n                                                className='custom-radio'\r\n                                                name='operationType'\r\n                                                checked={selfOwned}\r\n                                                onChange={() => setSelfOwned(true)}\r\n                                            />Self Owned\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"radio-button\">\r\n                                        <label>\r\n                                            <input\r\n                                                type='radio'\r\n                                                className='custom-radio'\r\n                                                name='operationType'\r\n                                                checked={!selfOwned}\r\n                                                onChange={() => setSelfOwned(false)}\r\n                                            />Rented\r\n                                        </label>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={ rentedClass }>\r\n                            <div className=\"input-group\">\r\n                                <label>Owner Name</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    id=\"txtClinicOwner\"\r\n                                    value={txtClinicOwner}\r\n                                    onChange={e => setTxtClinicOwner(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Phone</label>\r\n                                <PhoneInput\r\n                                    placeholder=\"\"\r\n                                    value={txtClinicPhone}\r\n                                    onChange={phone => setTxtClinicPhone(phone)}\r\n                                    className='form-control'\r\n                                    style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtClinicEmail\"\r\n                                    value={txtClinicEmail}\r\n                                    onChange={e => setTxtClinicEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row-2 mb-2\">\r\n                            <div className=\"information-box\">\r\n                                <i className=\"icofont-info-circle\" />\r\n                                <p><b>Exit guidelines:</b> in case the doctor changes clinic there is a mandate\r\n                                    to update clinic proof in order to continue access. See undertaking in link\r\n                                    below\r\n                                </p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"form-row mb-2\">\r\n                            <div className=\"check-box\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"custom-checkbox\"\r\n                                        id=\"chkAgree\"\r\n                                        value={chkAgree}\r\n                                        checked={chkAgree}\r\n                                        onChange={() => setChkAgree(!chkAgree)}\r\n                                    /> I agree to <a href=\"#\"> undertaking</a>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"flex-center\">\r\n                        <button\r\n                            className=\"btn-main\"\r\n                            onClick={updateDoctorsData}\r\n                        ><i className=\"icofont-upload-alt\" /> Update Changes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddQualificationDialog\r\n                dataIndex={editQualificationIndex}\r\n                showDialog={showQualificationDialog}\r\n                hideDialog={() => setShowQualificationDialog(false)}\r\n                setQualificationsList={setQualificationsList}\r\n                qualificationsList={qualificationsList}\r\n                showToast={props.showToast}\r\n            />\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageURL}\r\n                setImageDisplay={imageDialogVisible}\r\n                hideImageDialog={setImageDialogVisible}\r\n            />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DoctorsProfileUpdate;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst ProfileUpdateSuccessful = (props) => {\r\n    return (\r\n        <div className=\"background\">\r\n            <div className=\"plain-container\">\r\n                <div className=\"box-container profile-successful\">\r\n                    <h2>Profile Updated Successfully!</h2>\r\n                    <i className=\"icofont-thumbs-up\" />\r\n                    <p>\r\n                    Data accepted! You will be contacted via email/SMS on the status of your authentication, after which\r\n                        you will be providd with a unique id for platform access.\r\n                    </p>\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/doctors/login\" className=\"btn-main\">\r\n                            <i className=\"icofont-login\" /> Login Page\r\n                        </Link>\r\n                        <Link to=\"https://mah-com/\" className=\"btn-main-outline\">\r\n                            <i className=\"icofont-home\" /> Home Page\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileUpdateSuccessful;\r\n","import { useState } from \"react\";\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport FileInput from \"../../components/file-input\";\r\nimport CountrySelect from \"../../components/country-select\";\r\nimport { AddQualificationDialog } from \"../dialogs/add-qualification-dialog\";\r\nimport { ApiPath } from \"../../assets/common/base-url\";\r\nimport { QualificationsItem } from \"../lists-objects/qualifications-item\"\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\n\r\nexport const ProfilePage = (props) => {\r\n\r\n    const [profilePicture, setProfilePicture] = useState(props.data.photo);\r\n    const [txtContactAddress, setTxtContactAddress] = useState('');\r\n    const [txtContactCity, setTxtContactCity] = useState('');\r\n    const [txtContactState, setTxtContactState] = useState('');\r\n    const [txtContactCountry, setTxtContactCountry] = useState('');\r\n    const [txtClinicAddress, setTxtClinicAddress] = useState('');\r\n    const [txtClinicCity, setTxtClinicCity] = useState('');\r\n    const [txtClinicState, setTxtClinicState] = useState('');\r\n    const [txtClinicCountry, setTxtClinicCountry] = useState('');\r\n    const [txtPhone, setTxtPhone] = useState(props.data?.phone);\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.email);\r\n    const [chkProfileConsent, setChkProfileConsent] = useState(false);\r\n    const [cbxSpecialization, setCbxSpecialization] = useState(props.data.specialization.type);\r\n    const [practiceDoc, setPracticeDoc] = useState('');\r\n    const [specializationDoc, setSpecializationDoc] = useState('');\r\n    const [txtIssueDate, setTxtIssueDate] = useState('');\r\n    const [txtExpiryDate, setTxtExpiryDate] = useState('');\r\n    const [txtIssuingAuthority, setTxtIssuingAuthority] = useState('');\r\n    const [txtIcePhone, setTxtIcePhone] = useState('');\r\n    const [txtAvailableFrom, setTxtAvailableFrom] = useState('');\r\n    const [txtAvailableTo, setTxtAvailableTo] = useState('');\r\n    const [proofOfClinicDocument, setProofOfClinicDocument] = useState('')\r\n    const [selfOwned, setSelfOwned] = useState(true);\r\n    const [chkAgree, setChkAgree] = useState(false)\r\n    const [txtClinicOwner, setTxtClinicOwner] = useState('')\r\n    const [txtClinicPhone, setTxtClinicPhone] = useState('')\r\n    const [txtClinicEmail, setTxtClinicEmail] = useState('')\r\n\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n    const [imageURL, setImageURL] = useState(\"\");\r\n    const [editQualificationIndex, setEditQualificationIndex] = useState(0);\r\n\r\n    const [showQualificationDialog, setShowQualificationDialog] = useState(false);\r\n    const [qualificationsList, setQualificationsList] = useState([])\r\n\r\n\r\n    const doctorsSpecializations = [\"Allergist\", \"Cardiologist\", \"Dermatologist\", \"Endocrinologist\", \"Gastroenterologist\",\r\n        \"General Physician\", \"Geriatrician\", \"Nephrologist\", \"Neurologist\", \"OB/GYN\", \"Ophthalmologist\",\r\n        \"Orthopaedist\", \"Pediatrician\", \"Psychiatrist\", \"Urologist\"]\r\n\r\n    const specializationOptions = doctorsSpecializations.map(item => (<option key={item} value={item}>{item}</option>));\r\n\r\n    const qualifications = qualificationsList.map((item, index) => {\r\n        return (<QualificationsItem\r\n            key={index}\r\n            itemIndex={index}\r\n            period={item.period}\r\n            code={item.code}\r\n            document={item.document}\r\n            issuer={item.issuer}\r\n            showImageDialog={() => setImageDialogVisible(true)}\r\n            setImageURL={setImageURL}\r\n            dataList={qualificationsList}\r\n            setQualificationsList={setQualificationsList}\r\n            setEditIndex={value => setEditQualificationIndex(value)}\r\n            showQualDialog={() => setShowQualificationDialog(true)}\r\n\r\n        />)\r\n    })\r\n\r\n    const [fullname] = useState(props.data.name)\r\n    const [email] = useState(props.data.emailId);\r\n\r\n\r\n    const updateDoctorsData = () => {\r\n        //Set the contact data...\r\n        //Validate first...\r\n        if (txtContactAddress === \"\" || txtContactCity === \"\" || txtContactState === \"\") {\r\n            props.showToast(\"Ensure all personal contact data is supplied before proceeding.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const homeContact = {\r\n            \"type\": \"Home\",\r\n            \"houseNumber\": \"\",\r\n            \"street\": txtContactAddress,\r\n            \"city\": txtContactCity,\r\n            \"district\": \"\",\r\n            \"state\": txtContactState,\r\n            \"postalCode\": \"\",\r\n            \"country\": txtContactCountry,\r\n            \"period\": {\r\n                \"start\": \"\",\r\n                \"end\": \"\"\r\n            }\r\n        }\r\n\r\n        //Validate clinic contact\r\n        if (txtClinicAddress === \"\" || txtClinicCity === \"\" || txtClinicState === \"\") {\r\n            props.showToast(\"Ensure all clinic contact data is supplied before proceeding.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const clinicContact = {\r\n            \"type\": \"Clinic\",\r\n            \"houseNumber\": \"\",\r\n            \"street\": txtClinicAddress,\r\n            \"city\": txtClinicCity,\r\n            \"district\": \"\",\r\n            \"state\": txtClinicState,\r\n            \"postalCode\": \"\",\r\n            \"country\": txtClinicCountry,\r\n            \"period\": {\r\n                \"start\": \"\",\r\n                \"end\": \"\"\r\n            }\r\n        }\r\n\r\n        //Specialization...\r\n        if (cbxSpecialization === \"\" || specializationDoc === \"\" || practiceDoc === \"\" || txtIssueDate === \"\" || txtExpiryDate === \"\"\r\n            || txtIssuingAuthority === \"\") {\r\n            props.showToast(\"Specialization fields are all required.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        //Else add..\r\n        const specialization = {\r\n            \"type\": cbxSpecialization,\r\n            \"cerfification\": specializationDoc,\r\n        }\r\n\r\n        const license = {\r\n            \"certification\": practiceDoc,\r\n            \"expireDate\": txtExpiryDate,\r\n            \"issueDate\": txtIssueDate,\r\n            \"issuer\": txtIssuingAuthority,\r\n            \"issuerID\": \"\"\r\n        }\r\n\r\n        //In Case of Emergency\r\n        if (txtIcePhone === \"\" || txtAvailableFrom === \"\" || txtAvailableTo === \"\") {\r\n            props.showToast(\"Provide complete information for the I.C.E. fields before proceeding.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const ice = {\r\n            \"call\": {\r\n                \"period\": {\r\n                    \"start\": txtAvailableFrom,\r\n                    \"end\": txtAvailableTo\r\n                },\r\n                \"value\": txtIcePhone\r\n            },\r\n            \"sms\": {\r\n                \"period\": {\r\n                    \"start\": txtAvailableFrom,\r\n                    \"end\": txtAvailableTo\r\n                },\r\n                \"value\": txtIcePhone\r\n            }\r\n        }\r\n\r\n        //Proof of clinic...\r\n        if (proofOfClinicDocument === \"\") {\r\n            props.showToast(\"Upload document of proof of clinic / address before proceeding.\", \"exclamation\");\r\n            return;\r\n        } else if (!selfOwned) {\r\n            if (txtClinicOwner === \"\" || txtClinicPhone === \"\" || txtClinicEmail === \"\") {\r\n                props.showToast(\"Enter renter's details before proceeding.\", \"exclamation\");\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        const proofOfClinic = {\r\n            \"document\": proofOfClinicDocument,\r\n            \"type\": selfOwned ? \"self-owned\" : \"rented\",\r\n            \"renter\": {\r\n                \"name\": txtClinicOwner,\r\n                \"phone\": txtClinicPhone,\r\n                \"email\": txtClinicEmail\r\n            }\r\n        }\r\n\r\n        //Check if the agree to terms box is checked...\r\n        if (!chkAgree) {\r\n            props.showToast(\"You must agree to undertaking to proceed.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            'address': [homeContact, clinicContact],\r\n            'photo': profilePicture,\r\n            'profileConsent': chkProfileConsent.toString(),\r\n            'qualification': qualificationsList,\r\n            'license': license,\r\n            'specialization': specialization,\r\n            'ice': ice,\r\n            'proofOfClinic': proofOfClinic,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n        props.showToast(\"This might take a while, as there's a lot of information to upload... Please be patient.\", 'information');\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n\r\n                    //Redirect to the doctor's profile page...\r\n                    history.push(\"/doctors/login\");\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const rentedClass = selfOwned ? \"form-row-3 d-none\" : \"form-row-3\";\r\n\r\n    return (\r\n        <>\r\n            {/* Personal details... */}\r\n            <div className='box-container'>\r\n                <div className=\"doc-profile-header\">\r\n                    <h2>1</h2>\r\n                </div>\r\n                <h3>Personal Details</h3>\r\n                <div className='doc-profile'>\r\n                    <div className=\"flex-center\" style={{ marginBottom: 0, marginRight: '30px' }}>\r\n                        <div className='image-box'>\r\n                            <img src={profilePicture || '/portfolio/avatar.png'} alt='' />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <FileInput\r\n                                setFileOutput={setProfilePicture}\r\n                                acceptFileTypes={\".png, .jpg, .jpeg\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"details\">\r\n                        <div className=\"name-group\">\r\n                            <h4>Fullname</h4>\r\n                            <p>{fullname}</p>\r\n                        </div>\r\n                        <div className=\"name-group\">\r\n                            <h4>Email</h4>\r\n                            <p>{email}</p>\r\n                        </div>\r\n                        <div className=\"name-group\">\r\n                            <h4>Specialization</h4>\r\n                            <p>{cbxSpecialization}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Contact */}\r\n            <div className=\"box-container\">\r\n                <div className=\"doc-profile-header\">\r\n                    <h2>2</h2>\r\n                </div>\r\n                <h3>Contact Details</h3>\r\n                <div className=\"form-row-2\">\r\n                    <div className=\"input-group\">\r\n                        <textarea\r\n                            required\r\n                            className=\"form-control\"\r\n                            id=\"txtContactAddress\"\r\n                            rows={3}\r\n                            value={txtContactAddress}\r\n                            onChange={e => setTxtContactAddress(e.target.value)}\r\n                        />\r\n                        <label>Contact Address</label>\r\n\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <textarea\r\n                            required\r\n                            className=\"form-control\"\r\n                            id=\"txtClinicAddress\"\r\n                            rows={3}\r\n                            value={txtClinicAddress}\r\n                            onChange={e => setTxtClinicAddress(e.target.value)}\r\n                        />\r\n                        <label>Clinic Address</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row-2\">\r\n                    <div className=\"form-row-2\">\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                required\r\n                                id=\"txtContactCity\"\r\n                                value={txtContactCity}\r\n                                onChange={e => setTxtContactCity(e.target.value)}\r\n                            />\r\n                            <label>Contact City</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                required\r\n                                id=\"txtContactState\"\r\n                                value={txtContactState}\r\n                                onChange={e => setTxtContactState(e.target.value)}\r\n                            />\r\n                            <label>Contact State</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                required\r\n                                id=\"txtClinicCity\"\r\n                                value={txtClinicCity}\r\n                                onChange={e => setTxtClinicCity(e.target.value)}\r\n                            />\r\n                            <label>Clinic City</label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                required\r\n                                id=\"txtClinicState\"\r\n                                value={txtClinicState}\r\n                                onChange={e => setTxtClinicState(e.target.value)}\r\n                            />\r\n                            <label>Clinic State</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* Country row */}\r\n                <div className=\"form-row-2 mb-2\">\r\n                    <div className=\"form-row-2-1\">\r\n                        <CountrySelect\r\n                            label={\"Contact Country\"}\r\n                            id=\"txtContactCountry\"\r\n                            value={txtContactCountry}\r\n                            onChange={e => setTxtContactCountry(e.target.value)}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <CountrySelect\r\n                            label={\"Clinic Country\"}\r\n                            id=\"txtClinicCountry\"\r\n                            value={txtClinicCountry}\r\n                            onChange={e => setTxtClinicCountry(e.target.value)}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-2'>\r\n                    <div className='input-group'>\r\n                        <PhoneInput\r\n                            placeholder=\"\"\r\n                            value={txtPhone}\r\n                            onChange={phone => setTxtPhone(phone)}\r\n                            className='form-control'\r\n                            style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"email\"\r\n                            id=\"txtEmail\"\r\n                            value={txtEmail}\r\n                            onChange={e => setTxtEmail(e.target.value)}\r\n                            style={{ paddingTop: '12px', paddingBottom: '12px' }}\r\n                            required\r\n                        />\r\n                        <label>Email</label>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"form-row\">\r\n                    <div className=\"check-box\">\r\n                        <label>\r\n                            <input\r\n                                checked={chkProfileConsent}\r\n                                type=\"checkbox\"\r\n                                className=\"custom-checkbox\"\r\n                                id=\"chkProfileConsent\"\r\n                                onChange={() => setChkProfileConsent(!chkProfileConsent)}\r\n\r\n                            />  Allow patient to view profile\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Qualifications */}\r\n            <div className=\"box-container\">\r\n                <div className=\"doc-profile-header\">\r\n                    <h2>3</h2>\r\n                </div>\r\n                <h3>Qualifications</h3>\r\n                <div className=\"qualifications\">\r\n                    {qualificationsList.length === 0\r\n                        ? <div className='not-found'>\r\n                            <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                            <h4 style={{ fontSize: '15px' }}>No Qualifications added...</h4>\r\n\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            {qualifications}\r\n                        </>}\r\n                    <button\r\n                        className=\"btn-main mb-2\"\r\n                        onClick={() => setShowQualificationDialog(true)}\r\n                    >\r\n                        Add qualification...\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Specialization */}\r\n            <div className=\"box-container\">\r\n                <div className=\"doc-profile-header\">\r\n                    <h2>4</h2>\r\n                </div>\r\n                <h3>Specialization</h3>\r\n                <div className=\"form-row-2\">\r\n                    <div className=\"input-group\">\r\n                        <label>Specialization</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            id=\"cbxSpecialization\"\r\n                            value={cbxSpecialization}\r\n                            onChange={e => setCbxSpecialization(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            {specializationOptions}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row-2 mb-1\">\r\n                    <div className=\"input-group\">\r\n                        <label>Specialization document (upload)</label>\r\n                        <FileInput\r\n                            setFileOutput={setSpecializationDoc}\r\n                            acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row-2\">\r\n                    <div className=\"input-group\">\r\n                        <label>License to practice document (upload)</label>\r\n                        <FileInput\r\n                            setFileOutput={setPracticeDoc}\r\n                            acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row-2\">\r\n                    <div className=\"input-group\">\r\n                        <label>Issue date</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            id=\"txtIssueDate\"\r\n                            value={txtIssueDate}\r\n                            onChange={e => setTxtIssueDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Expiry date</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            id=\"txtExpiryDate\"\r\n                            value={txtExpiryDate}\r\n                            onChange={e => setTxtExpiryDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"input-group\">\r\n                        <label>Issuing Authority</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"txtIssuingAuthority\"\r\n                            value={txtIssuingAuthority}\r\n                            onChange={e => setTxtIssuingAuthority(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* ICE - In Case of Emergency */}\r\n            <div className=\"box-container\">\r\n                <div className=\"doc-profile-header\">\r\n                    <h2>5</h2>\r\n                </div>\r\n                <h3>ICE - (<b>I</b>n <b>C</b>ase of <b>E</b>mergency)</h3>\r\n                <div className=\"form-row-2\">\r\n                    <div className=\"input-group\">\r\n                        <label>Phone (&amp; SMS)</label>\r\n                        <PhoneInput\r\n                            placeholder=\"Enter mobile number\"\r\n                            value={txtIcePhone}\r\n                            onChange={phone => setTxtIcePhone(phone)}\r\n                            className='form-control'\r\n                            style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row-2\">\r\n                    <div className=\"input-group\">\r\n                        <label>Availability - From</label>\r\n                        <input\r\n                            type=\"time\"\r\n                            className=\"form-control\"\r\n                            id=\"txtAvailableFrom\"\r\n                            value={txtAvailableFrom}\r\n                            onChange={e => setTxtAvailableFrom(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>To</label>\r\n                        <input\r\n                            type=\"time\"\r\n                            className=\"form-control\"\r\n                            id=\"txtAvailableTo\"\r\n                            value={txtAvailableTo}\r\n                            onChange={e => setTxtAvailableTo(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Others */}\r\n            <div className=\"box-container\">\r\n                <div className=\"doc-profile-header\">\r\n                    <h2>6</h2>\r\n                </div>\r\n                <h3>Proof of Clinic / Address</h3>\r\n\r\n                <div className=\"form-row-2 mb-1\">\r\n                    <div className=\"input-group\">\r\n                        <label>Upload document</label>\r\n                        <FileInput\r\n                            setFileOutput={setProofOfClinicDocument}\r\n                            acceptFileTypes={\".png, .jpg, .jpeg, .pdf\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"questions\">\r\n                    <div className='question mb-1'>\r\n                        <p style={{ color: '#888' }}>What kind of operation do you run?</p>\r\n                        <div className=\"radio-group\">\r\n                            <div className=\"radio-button\">\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        className='custom-radio'\r\n                                        name='operationType'\r\n                                        checked={selfOwned}\r\n                                        onChange={() => setSelfOwned(true)}\r\n                                    />Self Owned\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"radio-button\">\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        className='custom-radio'\r\n                                        name='operationType'\r\n                                        checked={!selfOwned}\r\n                                        onChange={() => setSelfOwned(false)}\r\n                                    />Rented\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={rentedClass}>\r\n                    <div className=\"input-group\">\r\n                        <label>Owner Name</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            id=\"txtClinicOwner\"\r\n                            value={txtClinicOwner}\r\n                            onChange={e => setTxtClinicOwner(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Phone</label>\r\n                        <PhoneInput\r\n                            placeholder=\"\"\r\n                            value={txtClinicPhone}\r\n                            onChange={phone => setTxtClinicPhone(phone)}\r\n                            className='form-control'\r\n                            style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"txtClinicEmail\"\r\n                            value={txtClinicEmail}\r\n                            onChange={e => setTxtClinicEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row-2 mb-2\">\r\n                    <div className=\"information-box\">\r\n                        <i className=\"icofont-info-circle\" />\r\n                        <p><b>Exit guidelines:</b> in case the doctor changes clinic there is a mandate\r\n                            to update clinic proof in order to continue access. See undertaking in link\r\n                            below\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"form-row mb-2\">\r\n                    <div className=\"check-box\">\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                className=\"custom-checkbox\"\r\n                                id=\"chkAgree\"\r\n                                value={chkAgree}\r\n                                checked={chkAgree}\r\n                                onChange={() => setChkAgree(!chkAgree)}\r\n                            /> I agree to <a href=\"#\"> undertaking</a>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"flex-center\">\r\n                <button\r\n                    className=\"btn-main\"\r\n                    onClick={updateDoctorsData}\r\n                ><i className=\"icofont-upload-alt\" /> Update Changes</button>\r\n            </div>\r\n\r\n            <AddQualificationDialog\r\n                dataIndex={editQualificationIndex}\r\n                showDialog={showQualificationDialog}\r\n                hideDialog={() => setShowQualificationDialog(false)}\r\n                setQualificationsList={setQualificationsList}\r\n                qualificationsList={qualificationsList}\r\n                showToast={props.showToast}\r\n            />\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageURL}\r\n                setImageDisplay={imageDialogVisible}\r\n                hideImageDialog={setImageDialogVisible}\r\n            />\r\n            }\r\n        </>\r\n    );\r\n}\r\n","export const DoctorsProfileHeader = ({ doctorsData }) => {\r\n\r\n    return (\r\n        <div className='doctor-header'>\r\n            <div className='header-title'>\r\n                <h4>Profile</h4>\r\n            </div>\r\n            <div className='mah-image'>\r\n                <img src='/mah-logo.png' alt='' />\r\n            </div>\r\n            <div className='doctors-data'>\r\n                <img src={doctorsData.photo} alt='' />\r\n                <h5>Dr. {doctorsData.name}</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const DoctorsProfileRightSidebar = props => {\r\n\r\n    return (\r\n        <div className='right-sidebar'>\r\n            <div className=\"special-header\">\r\n                <h3>Specialists in area</h3>\r\n            </div>\r\n\r\n            <RightSideBarSpecialistDoctors />\r\n            <RightSideBarSpecialistDoctors />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst RightSideBarSpecialistDoctors = props => {\r\n    return (\r\n        <div className='right-sidebar-profile'>\r\n            <div className='image'>\r\n                <img src='/portfolio/team-1.jpg' alt='' />\r\n            </div>\r\n            <div className='text'>\r\n                <h5>Dr. Singh Amoduh</h5>\r\n                <p>Dermatologist</p>\r\n                <span><i className='icofont-location-pin' /> Heathrow</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const CalendarHeader = props => {\r\n\r\n    const { onNext, onBack, dateDisplay } = props;\r\n\r\n    const setNewPeriod = () => {\r\n        alert(\"This will eventually set a new date, selected from a modal, containing a month and year picker.\");\r\n    }\r\n\r\n    return (\r\n        <div id=\"header\">\r\n            <div className='calendar-header'>\r\n                <button\r\n                    onClick={onBack}\r\n                    id=\"backButton\"\r\n                >\r\n                    <i className='icofont-rounded-left' />\r\n                </button>\r\n                <div\r\n                    className=\"month-display\"\r\n                    onClick={setNewPeriod}\r\n                >{dateDisplay}\r\n                </div>\r\n                <button\r\n                    onClick={onNext}\r\n                    id=\"nextButton\"\r\n                >\r\n                    <i className='icofont-rounded-right' />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const Day = props => {\r\n    const { day, onClick } = props;\r\n    const className = `day ${day.value === 'padding' ? 'padding' : ''} ${day.isCurrentDay ? 'currentDay' : ''} ${day.event !== null ? 'event' : ''}`;\r\n    const eventTitle = day.event?.status ? day.event.status : '';\r\n\r\n    return (\r\n        <div onClick={onClick} className={className} title={eventTitle}>\r\n            <h6>{day.value === 'padding' ? '' : day.value}</h6>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import { CalendarHeader } from './calendar-header';\r\nimport { Day } from './day';\r\nimport { useState } from 'react';\r\nimport { useDate } from './useDate'\r\nimport { useEventsAndNav } from './useEventsAndNav';\r\n\r\nconst CalendarPicker = props => {\r\n    const [nav, setNav] = useState(0);\r\n    const events = useEventsAndNav(nav, props.setIsLoaderVisible, props.showToast)\r\n\r\n    const setDayValue = (input) => {\r\n        if (input.value !== 'padding') {\r\n            props.setSelectedEventDate(input.date);\r\n            props.showDialog()\r\n        }\r\n    }\r\n\r\n    const { days, dateDisplay } = useDate(events, nav);\r\n\r\n    return (\r\n        <>\r\n            <div className='calendar-container'>\r\n                <CalendarHeader\r\n                    dateDisplay={dateDisplay}\r\n                    onNext={() => setNav(nav + 1)}\r\n                    onBack={() => setNav(nav - 1)}\r\n                />\r\n                <div id='weekdays' title='weekdays'>\r\n                    <div title=\"Sunday\">S</div>\r\n                    <div title=\"Monday\">M</div>\r\n                    <div title=\"Tuesday\">T</div>\r\n                    <div title=\"Wednesday\">W</div>\r\n                    <div title=\"Thursday\">T</div>\r\n                    <div title=\"Friday\">F</div>\r\n                    <div title=\"Saturday\">S</div>\r\n                </div>\r\n                <div className=\"calendar-body\" title=\"Calendar\">\r\n                    {days && days.map((item, index) => {\r\n                        return (\r\n                            <Day\r\n                                key={index}\r\n                                day={item}\r\n                                onClick={() => setDayValue(item)}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CalendarPicker;\r\n","import { useEffect, useState } from \"react\";\r\nimport { constants } from \"../../assets/common/constants\";\r\nimport { CryptoApiPath } from \"../../assets/common/base-url\";\r\n\r\nexport const useEventsAndNav = (nav, setIsLoaderVisible, showToast) => {\r\n\r\n    const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Get the starttime and endtime in milliseconds\r\n        const dt = new Date();\r\n\r\n        if (nav !== 0) {\r\n            dt.setMonth(new Date().getMonth() + nav);\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        const month = dt.getMonth();\r\n        const year = dt.getFullYear();\r\n\r\n        const firstDayOfMonth = new Date(year, month, 1);\r\n        const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n        const startTime = firstDayOfMonth.getTime() / 1000;         //In secs for now\r\n        const endTime = startTime + (60 * 60 * 24 * daysInMonth)    //Also in seconds for now...\r\n\r\n        fetch(`${CryptoApiPath}getMeetinglist?starttime=${startTime}&endtime=${endTime}`, constants.getOptions)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoaderVisible(false)\r\n                if (response.statusText === \"OK\") {\r\n                    setEvents(response.result)\r\n                } else {\r\n                    setIsLoaderVisible(response?.message, \"exclamation\")\r\n                    setEvents([])\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setIsLoaderVisible(false)\r\n                showToast(error.message, \"exclamation\")\r\n            })\r\n\r\n    }, [nav])\r\n\r\n    return events;\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useDate = (events, nav) => {\r\n  const [dateDisplay, setDateDisplay] = useState('');\r\n  const [days, setDays] = useState([]);\r\n\r\n  const eventForDate = date => {\r\n    //First, fitler the date by getting the time component...\r\n    let dateEvent;\r\n\r\n    //The starttime comes in milliseconds... Thus,\r\n    // get the first and last hour/time in this\r\n    // day in order to know whether it falls into\r\n    // the range...\r\n    const dateInMilliseconds = new Date(date).getTime() / 1000;\r\n    const dateEndInMilliseconds = dateInMilliseconds + (60 * 60 * 24)\r\n\r\n    dateEvent = (events.length > 0)\r\n      ? events?.find(e => e?.starttime >= dateInMilliseconds && e?.starttime <= dateEndInMilliseconds)\r\n      : {};\r\n\r\n    return dateEvent;\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const dt = new Date();\r\n\r\n    if (nav !== 0) {\r\n      dt.setMonth(new Date().getMonth() + nav);\r\n    }\r\n\r\n    const day = dt.getDate();\r\n    const month = dt.getMonth();\r\n    const year = dt.getFullYear();\r\n\r\n    const firstDayOfMonth = new Date(year, month, 1);\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n    const dateString = firstDayOfMonth.toLocaleDateString('en-us', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n    });\r\n\r\n    setDateDisplay(`${dt.toLocaleDateString('en-us', { month: 'long' })} ${year}`);\r\n    const paddingDays = weekdays.indexOf(dateString.split(', ')[0]);\r\n\r\n    const daysArr = [];\r\n\r\n    for (let i = 1; i <= paddingDays + daysInMonth; i++) {\r\n      const d = i - paddingDays > 9 ? i - paddingDays : \"0\" + (i - paddingDays);\r\n      const mnt = (month + 1) > 9 ? month + 1 - month : \"0\" + (month + 1)\r\n      const dayString = `${d}/${mnt}/${year}`;\r\n\r\n      if (i > paddingDays) {\r\n        daysArr.push({\r\n          value: i - paddingDays,\r\n          event: eventForDate(dayString) === {} ? null : eventForDate(dayString),\r\n          isCurrentDay: i - paddingDays === day && nav === 0,\r\n          date: dayString,\r\n        });\r\n      } else {\r\n        daysArr.push({\r\n          value: 'padding',\r\n          event: null,\r\n          isCurrentDay: false,\r\n          date: '',\r\n        });\r\n      }\r\n    }\r\n\r\n    setDays(daysArr);\r\n  }, [events, nav]);\r\n\r\n  return {\r\n    days,\r\n    dateDisplay,\r\n  };\r\n};\r\n","import { shortDateString } from '../../assets/common/operations';\r\n\r\nexport const AppointmentBox = props => {\r\n    return (\r\n        <div className='appt-box' onClick={() => props.showAppointmentDialog()}>\r\n            <i className='icofont-calendar' />\r\n            <div className='details'>\r\n                <h5>{ props.patient }</h5>\r\n                <span>\r\n                    <i className='icofont-stopwatch' />\r\n                    <p>{ shortDateString(props.date) } • { props.time }</p>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { shortDateString } from \"../../assets/common/operations\"\r\n\r\nexport const AppointmentDialog = props => {\r\n    return (\r\n        <div className=\"dialog-background fade\">\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}>\r\n                        <i className=\"icofont-calendar\" /> Upcoming Appointment\r\n                    </h2>\r\n                </div>\r\n                <div className=\"dialog-body px-2\">\r\n                    <div className=\"form-row border-top mb-2\">\r\n                        <div className=\"d-flex-centered mt-2 pb-2\">\r\n                            <img src=\"/doctors.svg\" alt=\"\" width={'150px'} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"upcoming-appt-details\">\r\n                            <i className=\"icofont-user\" />\r\n                            <div className='patient-details'>\r\n                                <h3>{props.apptDetails.name}</h3>\r\n                                <p><i className='icofont-stopwatch' /> { shortDateString(props.apptDetails.date) } • {props.apptDetails.time} </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main px-2\">\r\n                    <a href=\"#\" target=\"_blank\" className=\"btn-main mr-1\">\r\n                        <i className=\"icofont-video\" /> Join Meeting\r\n                    </a>\r\n                    <buttton className=\"btn-main mr-1\">\r\n                        <i className=\"icofont-meeting-add\" /> Re-schedule\r\n                    </buttton>\r\n                    <button className=\"btn-main d-none\">\r\n                        <i className=\"icofont-upload-alt\" /> Update Selection\r\n                    </button>\r\n                    <button\r\n                        onClick={() => props.hideDialog()}\r\n                        className=\"btn-main-outline\"\r\n                    >\r\n                        <i className=\"icofont-logout\" /> Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const ScheduledAppointmentDialogTabHeaders = props => {\r\n    return (\r\n        <div className=\"tab-container\">\r\n        <div\r\n            className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n            onClick={() => props.setSelectedTab(1)}\r\n        >\r\n            <i className=\"icofont-drug\"></i>Medications\r\n        </div>\r\n        <div\r\n            className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n            onClick={() => props.setSelectedTab(2)}\r\n        >\r\n            <i className=\"icofont-notepad\"></i>Notes\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","export const Medications = props => {\r\n    return (\r\n        <div className=\"py-2\">\r\n            Medications Page\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const Notes = ({ setInput, inputValue }) => {\r\n\r\n    const [txtInput, setTxtInput] = useState(inputValue)\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n        setTxtInput(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-row py-2\">\r\n            <div className=\"input-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    id=\"txtInput\"\r\n                    name=\"txtInput\"\r\n                    value={txtInput}\r\n                    onChange={handleChange}\r\n                    rows={5}\r\n                    placeholder=\"Enter consultation notes here...\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { ScheduledAppointmentDialogTabHeaders } from \"../components/scheduled-appointment-dialog-tab-headers\";\r\nimport { Medications } from \"../tab-pages/medications\";\r\nimport { Notes } from \"../tab-pages/notes\";\r\n\r\nconst ScheduledAppointmentDialog = (props) => {\r\n\r\n    const [selectedTab, setSelectedTab] = useState(1);\r\n    const [txtNotes, setTxtNotes] = useState('');\r\n\r\n    return (\r\n        <div className=\"modal show fade\">\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"nully\">\r\n                            <i className=\"icofont-calendar\" /> Scheduled Appointments</h2>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"date-caption\">\r\n                            <i className=\"icofont-clock-time\" />\r\n                            <h4>{props.selectedEventDate}</h4>\r\n                        </div>\r\n                        <div className=\"display-group\">\r\n                            <div className=\"display-group-lhs\">\r\n                                <div className=\"display-title\">\r\n                                    <h4>Appointments</h4>\r\n                                </div>\r\n                                <div className=\"appt-group\">\r\n                                    <div className=\"appt selected\">\r\n                                        <div className=\"appt-main\">\r\n                                            <img src=\"/portfolio/team-3.jpg\" alt=\"\" />\r\n                                            <div className=\"name-and-define\">\r\n                                                <h5>Sergio Fernandez</h5>\r\n                                                <span>Male • 40yrs</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"others\">\r\n                                            <i className=\"icofont-ui-delete\" />\r\n                                            <span className=\"period\"><i className=\"icofont-stopwatch\" /> {'10:00 - 10:50'}</span>\r\n                                        </div>\r\n                                        <i className=\"icofont-rounded-right\" />\r\n                                    </div>\r\n                                    <div className=\"appt\">\r\n                                        <div className=\"appt-main\">\r\n                                            <img src=\"/portfolio/team-2.jpg\" alt=\"\" />\r\n                                            <div className=\"name-and-define\">\r\n                                                <h5>Luchiano Ferez</h5>\r\n                                                <span>Male • 33yrs</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"others\">\r\n                                            <i className=\"icofont-ui-delete\" />\r\n                                            <span className=\"period\"><i className=\"icofont-stopwatch\" /> {'10:00 - 10:50'}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"appt\">\r\n                                        <div className=\"appt-main\">\r\n                                            <img src=\"/portfolio/team-4.jpg\" alt=\"\" />\r\n                                            <div className=\"name-and-define\">\r\n                                                <h5>Cherrie Marks</h5>\r\n                                                <span>Female • 52yrs</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"others\">\r\n                                            <i className=\"icofont-ui-delete\" />\r\n                                            <span className=\"period\"><i className=\"icofont-stopwatch\" /> {'10:00 - 10:50'}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"appt\">\r\n                                        <div className=\"appt-main\">\r\n                                            <img src=\"/portfolio/team-1.jpg\" alt=\"\" />\r\n                                            <div className=\"name-and-define\">\r\n                                                <h5>Antonio Gu</h5>\r\n                                                <span>Male • 30yrs</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"others\">\r\n                                            <i className=\"icofont-ui-delete\" />\r\n                                            <span className=\"period\"><i className=\"icofont-stopwatch\" /> {'10:00 - 10:50'}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"appt\">\r\n                                        <div className=\"appt-main\">\r\n                                            <img src=\"/portfolio/team-1.jpg\" alt=\"\" />\r\n                                            <div className=\"name-and-define\">\r\n                                                <h5>Antonio Gu</h5>\r\n                                                <span>Male • 25yrs</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"others\">\r\n                                            <i className=\"icofont-ui-delete\" />\r\n                                            <span className=\"period\"><i className=\"icofont-stopwatch\" /> {'10:00 - 10:50'}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"display-group-rhs\">\r\n                                <div className=\"patient-data\">\r\n                                    <div className=\"patient-header\">\r\n                                        <img src=\"/portfolio/team-3.jpg\" alt=\"\" />\r\n                                        <h3>Sergio Fernandez</h3>\r\n                                        <span>Male • 40yrs</span>\r\n                                    </div>\r\n                                    <div className=\"patient-details\">\r\n                                        {/* We should have some medical history data here... */}\r\n                                        {/* MEDICAL HISTORY GROUP / TABS */}\r\n                                        <ScheduledAppointmentDialogTabHeaders\r\n                                            selectedTab={selectedTab}\r\n                                            setSelectedTab={setSelectedTab}\r\n                                        />\r\n                                        {\r\n                                            selectedTab === 1 && <Medications />\r\n                                        }\r\n                                        {selectedTab === 2 && <Notes\r\n                                            setInput={setTxtNotes}\r\n                                            inputValue={txtNotes}\r\n                                        />}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"btn-main mr-1\">\r\n                            <i className=\"icofont-retweet\" /> Reschedule</button>\r\n                        <button\r\n                            className=\"btn-main-outline\"\r\n                            onClick={() => props.hideDialog()}\r\n                        ><i className=\"icofont-logout\" /> Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScheduledAppointmentDialog;\r\n","import CalendarPicker from '../../components/Calendar/calendar-picker';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppointmentBox } from '../lists-objects/appointment-box';\r\nimport { AppointmentDialog } from '../dialogs/appointment-dialog';\r\nimport { useState } from 'react';\r\nimport ScheduledAppointmentDialog from '../dialogs/scheduled-appointments-dialog';\r\n\r\nexport const DoctorsProfileSideBar = props => {\r\n    const { appointments, menuActive } = props;\r\n    const [apptDetails, setApptDetails] = useState({});\r\n    const [showAppointmentDialog, setShowAppointmentDialog] = useState(false)\r\n    const [showScheduledAppointmentDialog, setShowScheduledAppointmentDialog] = useState(false)\r\n    const [selectedEventDate, setSelectedEventDate] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const appointmentBoxes = appointments.map((item, index) => {\r\n        return (\r\n            <AppointmentBox\r\n                key={index}\r\n                patient={item.name}\r\n                time={item.time}\r\n                date={item.date}\r\n                showAppointmentDialog={() => {\r\n                    setApptDetails(item)\r\n                    setShowAppointmentDialog(true)\r\n                }}\r\n            />\r\n        )\r\n    })\r\n\r\n    const handleSignOut = () => {\r\n        //Sign out\r\n        sessionStorage.setItem('token', null);\r\n        sessionStorage.setItem('doctor', null);\r\n        sessionStorage.setItem('id_val', null);\r\n        sessionStorage.setItem('patient', null);\r\n\r\n        history.push(\"./login\");\r\n    }\r\n\r\n    const sideBarClass = menuActive ? 'doctor-sidebar toggle' : 'doctor-sidebar';\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={sideBarClass}>\r\n                <div className='side-links'>\r\n                    <span className={props.selectedMenu === 1 && 'active'} onClick={() => props.setSelectedMenu(1)}>\r\n                        <i className=\"icofont-clock-time\"></i>\r\n                        <h4>Availability Setup</h4>\r\n                    </span>\r\n                    <span className={props.selectedMenu === 2 && 'active'} onClick={() => props.setSelectedMenu(2)}>\r\n                        <i className=\"icofont-doctor-alt\"></i>\r\n                        <h4>Profile Update</h4>\r\n                    </span>\r\n                    <span className={props.selectedMenu === 3 && 'active'} onClick={() => props.setSelectedMenu(3)}>\r\n                        <i className=\"icofont-settings-alt\"></i>\r\n                        <h4>Appointment Setup</h4>\r\n                    </span>\r\n                    <span className={props.selectedMenu === 4 && 'active'} onClick={() => props.setSelectedMenu(4)}>\r\n                        <i className=\"icofont-cash-on-delivery-alt\"></i>\r\n                        <h4>Charge Sheet</h4>\r\n                    </span>\r\n                </div>\r\n                <div className='calendar-widget'>\r\n                    <div className=\"special-header\">\r\n                        <h3>Appointments</h3>\r\n                    </div>\r\n                    <div>\r\n                        <CalendarPicker\r\n                            events={appointments}\r\n                            showDialog={() => setShowScheduledAppointmentDialog(true)}\r\n                            showToast={props.showToast}\r\n                            setIsLoaderVisible={props.setIsLoaderVisible}\r\n                            setSelectedEventDate={setSelectedEventDate}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='upcoming-apptmt'>\r\n                    <div className=\"special-header\">\r\n                        <h3>Upcoming Appointments</h3>\r\n                    </div>\r\n                    <div className='appointment-boxes'>\r\n                        {appointmentBoxes}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='upcoming-apptmt'>\r\n                    <div className=\"special-header\">\r\n                        <h3>Past Appointments</h3>\r\n                    </div>\r\n                    <div className='appointment-boxes'>\r\n                        {appointmentBoxes}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='side-links'>\r\n                    <span onClick={handleSignOut}>\r\n                        <i className='icofont-sign-out' />\r\n                        <h4>Sign Out</h4>\r\n                    </span>\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                showAppointmentDialog && <AppointmentDialog\r\n                    apptDetails={apptDetails}\r\n                    hideDialog={() => setShowAppointmentDialog(false)}\r\n                />\r\n            }\r\n            {\r\n                showScheduledAppointmentDialog && <ScheduledAppointmentDialog\r\n                    selectedEventDate={selectedEventDate}\r\n                    hideDialog={() => setShowScheduledAppointmentDialog(false)}\r\n\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","export const DoctorsProfileSubHeader = props => {\r\n\r\n    const toggleMenu = () => {\r\n        props.setMenuActive(!props.menuActive);\r\n    }\r\n\r\n    return (\r\n        <div className='doctors-sub-header'>\r\n            <div className='nav-menu' onClick={toggleMenu}>\r\n                <i className='icofont-navigation-menu' />\r\n            </div>\r\n            <h6><i className='icofont-bell-alt' /> Upcoming Appointment</h6>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nconst AppointmentSetupPage = () => {\r\n\r\n    const [availability, setAvailability] = useState('available');\r\n\r\n    return (\r\n        <div className='box-container'>\r\n            <h3>Apointment Availability</h3>\r\n            <div className=\"availability-grid mb-2\">\r\n                <div className='question-group'>\r\n                    <p>Indicate your current avaiability status</p>\r\n                    <div className=\"radio-group mb-2\">\r\n                        <div className=\"radio-button\">\r\n                            <label>\r\n                                <input\r\n                                    type='radio'\r\n                                    className='custom-radio'\r\n                                    name='status'\r\n                                    checked={availability === 'available'}\r\n                                    onChange={() => setAvailability('available')}\r\n                                />\r\n                                Available\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"radio-button\">\r\n                            <label>\r\n                                <input\r\n                                    type='radio'\r\n                                    className='custom-radio'\r\n                                    name='status'\r\n                                    checked={availability === 'busy'}\r\n                                    onChange={() => setAvailability('busy')}\r\n                                />\r\n                                Busy\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"radio-button\">\r\n                            <label>\r\n                                <input\r\n                                    type='radio'\r\n                                    className='custom-radio'\r\n                                    name='status'\r\n                                    checked={availability === 'out-of-office'}\r\n                                    onChange={() => setAvailability('out-of-office')}\r\n                                />\r\n                                Out of office\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row-2-1-1\">\r\n                <div></div><div></div>\r\n                <div className='input-group'>\r\n                    <button className='btn-main'>\r\n                        <i className='icofont-tick-mark' /> Update Changes\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AppointmentSetupPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { SplitDateFromTimestamp } from '../../assets/common/split-date';\r\n\r\nexport const SlotsDialog = props => {\r\n\r\n    const [txtTimeSlot, setTxtTimeSlot] = useState('');\r\n    const [txtDuration, setTxtDuration] = useState('30');\r\n    const [selectedSlots, setSelectedSlots] = useState([]);\r\n    const [refreshList, setRefreshList] = useState(false);\r\n    const [outputList, setOutputList] = useState([]);\r\n\r\n    const timeSlots = [\"00:00\", \"01:00\", \"02:00\", \"03:00\", \"04:00\", \"05:00\", \"06:00\",\r\n        \"07:00\", \"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\",\r\n        \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\"];\r\n\r\n    const timeSlotsOptions = timeSlots.map(item => (<option value={item} key={item}>{item}</option>))\r\n\r\n    const addTimeSlot = () => {\r\n        //Get the present time slot and add to the list...\r\n        const startTime = parseInt(txtTimeSlot) * 60 * 60 * 1000; //Converting to milli-seconds;\r\n        const duration = parseInt(txtDuration) * 60 * 1000;     //Still converting to milli-seconds...\r\n        const timeSum = SplitDateFromTimestamp(startTime + duration - (3600 * 1000));       //subtract 1 hour...\r\n\r\n        const endTime = timeSum.timeNoSecs;\r\n\r\n        //add this to the selected slots...\r\n        setSelectedSlots([...selectedSlots, `${txtTimeSlot} - ${endTime}`]);\r\n        setRefreshList(true);\r\n    }\r\n\r\n    const removeSelectedItem = index => {\r\n        //Remove the selected item with index 'index' from\r\n        //The selected slots array...\r\n        const slots = selectedSlots;\r\n        slots.splice(index, 1);\r\n\r\n        setSelectedSlots(slots);\r\n        setRefreshList(true);\r\n    }\r\n\r\n    const chooseSelectedSlots = () => {\r\n        props.setSelectedTimeSlots(selectedSlots);\r\n        props.hideDialog();\r\n    }\r\n\r\n    useEffect(() => {\r\n        //On component did mount...\r\n        if (props.timeSlots?.length > 0) {\r\n            //Do something...\r\n            setSelectedSlots(props.timeSlots);\r\n            setRefreshList(true);\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (refreshList) {\r\n            //Refetch the list...\r\n            let output;\r\n            output = selectedSlots?.length > 0 && selectedSlots?.map((item, index) => {\r\n                return (\r\n                    <span key={index}>\r\n                        {item}<i\r\n                            className=\"icofont-close\"\r\n                            onClick={() => removeSelectedItem(index)}\r\n                        />\r\n                    </span>\r\n                )\r\n            })\r\n\r\n            setOutputList(output);\r\n\r\n            //reset the refresList...\r\n            setRefreshList(false);\r\n        }\r\n\r\n    }, [refreshList])\r\n\r\n    return (\r\n        <div className=\"dialog-background fade\">\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-stopwatch\" /> Time Slots Select</h2>\r\n                </div>\r\n                <div className=\"dialog-body px-2 border-top\">\r\n                    <div className=\"special-header\">\r\n                        <h3 style={{ marginLeft: '0px' }}>Set slots for {props.selectedWeekDay}</h3>\r\n                    </div>\r\n                    <div className=\"form-row-3 mb-2 border-bottom\">\r\n                        <div className=\"input-group\">\r\n                            <label>Time Slot</label>\r\n                            <select\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"txtTimeSlot\"\r\n                                value={txtTimeSlot}\r\n                                onChange={e => setTxtTimeSlot(e.target.value)}\r\n                            >\r\n                                {timeSlotsOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Duration</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                step={5}\r\n                                className=\"form-control align-right\"\r\n                                id=\"txtDuration\"\r\n                                value={txtDuration}\r\n                                onChange={e => setTxtDuration(e.target.value)}\r\n                            />\r\n                            <span className='align-right'>mins</span>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <button onClick={addTimeSlot} className=\"btn-main mt-3\">\r\n                                <i className=\"icofont-plus\" /> Add\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={selectedSlots?.length === 0 ? \"d-none\" : \"form-row\"}>\r\n                        <legend>\r\n                            <h4>Selected slots ({props.selectedWeekDay})</h4>\r\n                            <div className=\"slots\">\r\n                                {outputList}\r\n                            </div>\r\n                        </legend>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main px-2\">\r\n                    <button\r\n                        onClick={chooseSelectedSlots}\r\n                        className=\"btn-main mr-1\"\r\n                    >\r\n                        <i className=\"icofont-tick-mark\" /> Choose Selection\r\n                    </button>\r\n                    <button\r\n                        onClick={() => props.hideDialog()}\r\n                        className=\"btn-main-outline\"\r\n                    >\r\n                        <i className=\"icofont-logout\" /> Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { DynamicSort } from '../../assets/common/operations';\r\nimport { SlotsDialog } from '../dialogs/slots-dialog';\r\nimport { ApiSecondaryPath } from \"../../assets/common/base-url\";\r\n\r\nconst AvailabilitySetup = props => {\r\n\r\n    const [onlineAvailability, setOnlineAvailability] = useState('online');\r\n    const [txtAddressLink, setTxtAddressLink] = useState('')\r\n    const [reminderCalls, setReminderCalls] = useState(true)\r\n    const [txtReminderCallTime, setTxtReminderCallTime] = useState('5');\r\n    const [cbxDayOfWeek, setCbxDayOfWeek] = useState('');\r\n    const [selectedTimeSlots, setSelectedTimeSlots] = useState([]);\r\n    const [daysSlotsData, setDaysSlotsData] = useState([]);\r\n    const [filterTimeSlots, setFilterTimeSlots] = useState([]);\r\n\r\n    const [slotsDialogVisible, setSlotsDialogVisible] = useState(false)\r\n\r\n    const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\n    const weekdaysSelect = daysOfWeek.map(item => {\r\n        return (<option value={item} key={item}>{item}</option>)\r\n    })\r\n\r\n    const displaySlotDialog = () => {\r\n        //First check that the cbx is not empty...\r\n        if (cbxDayOfWeek === \"\") {\r\n            alert(\"Select day of week to proceed.\");\r\n            return;\r\n        }\r\n\r\n        //Also, get the timeSlots from the array as it concerns the edit...\r\n        const foundData = daysSlotsData.find(item => item.dayOfWeek === cbxDayOfWeek)?.timeSlots;\r\n        setFilterTimeSlots(foundData);\r\n\r\n        //else, proceed...\r\n        setSlotsDialogVisible(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Here, we set the entire collective of the the daysSlotsData\r\n        // to the proper value, based on the recently selected timeSlots...\r\n        if (daysSlotsData.length === 0 && selectedTimeSlots.length !== 0) {\r\n            //Here, just push the data...\r\n            const newSlotObj = {\r\n                dayOfWeek: cbxDayOfWeek,\r\n                dayOfWeekIndex: daysOfWeek.indexOf(cbxDayOfWeek),\r\n                timeSlots: [...selectedTimeSlots]\r\n            }\r\n\r\n            setDaysSlotsData([newSlotObj])\r\n\r\n        } else {\r\n            //Do some work before getting there...\r\n            const remArray = daysSlotsData.filter(item => item.dayOfWeek !== cbxDayOfWeek);\r\n\r\n            //The above array is to be replaced by the new one...\r\n            const newSlotObj = {\r\n                dayOfWeek: cbxDayOfWeek,\r\n                dayOfWeekIndex: daysOfWeek.indexOf(cbxDayOfWeek),\r\n                timeSlots: [...selectedTimeSlots]\r\n            }\r\n\r\n            const newArray = [...remArray, newSlotObj].sort(DynamicSort(\"dayOfWeekIndex\"))\r\n            setDaysSlotsData(newArray)\r\n        }\r\n\r\n    }, [selectedTimeSlots])\r\n\r\n    const slotsGridItems = daysSlotsData.map((item, index) => {\r\n        return (\r\n            <Slots\r\n                key={index}\r\n                selectedSlots={item.timeSlots}\r\n                dayOfWeek={item.dayOfWeek}\r\n            />\r\n        )\r\n    })\r\n\r\n    const updateDoctorsTimeSlots = () => {\r\n        //Save the time losts...\r\n        if (daysSlotsData.length === 0) {\r\n            //not working...\r\n            props.showToast(\"No selected slots to update!\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        //Else, continue to update...\r\n        // First, remodel the array to show data in the expected update format...\r\n        let saveObject = {};\r\n        const workingDays = [];\r\n\r\n        daysSlotsData.forEach(item => {\r\n            const obj = {\r\n                [item.dayOfWeek.toLowerCase()]: {\r\n                    \"available_slot_details\": [item.timeSlots]\r\n                }\r\n            }\r\n\r\n            workingDays.push(item.dayOfWeek)\r\n\r\n            saveObject = { ...saveObject, obj }\r\n\r\n        })\r\n\r\n        //Remove the unnecessary first empty string..\r\n        workingDays.splice(0, 1);\r\n\r\n        const data = {\r\n            \"doctorId\": props.data.uidNo,\r\n            \"slots\": {\r\n                \"monday\": {\r\n                    \"available_slot_details\": daysSlotsData.find(item => item.dayOfWeek === 'Monday')?.timeSlots,\r\n                },\r\n                \"tuesday\": {\r\n                    \"available_slot_details\": daysSlotsData.find(item => item.dayOfWeek === 'Tuesday')?.timeSlots,\r\n                },\r\n                \"wednesday\": {\r\n                    \"available_slot_details\": daysSlotsData.find(item => item.dayOfWeek === 'Wednesday')?.timeSlots,\r\n                },\r\n                \"thursday\": {\r\n                    \"available_slot_details\": daysSlotsData.find(item => item.dayOfWeek === 'Thursday')?.timeSlots,\r\n                },\r\n                \"friday\": {\r\n                    \"available_slot_details\": daysSlotsData.find(item => item.dayOfWeek === 'Friday')?.timeSlots,\r\n                },\r\n                \"saturday\": {\r\n                    \"available_slot_details\": daysSlotsData.find(item => item.dayOfWeek === 'Saturday')?.timeSlots,\r\n                },\r\n                \"sunday\": {\r\n                    \"available_slot_details\": daysSlotsData.find(item => item.dayOfWeek === 'Sunday')?.timeSlots,\r\n                },\r\n\r\n            },\r\n            \"working_day\": workingDays\r\n        }\r\n\r\n        console.table(workingDays)\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"POST\",\r\n        }\r\n\r\n        //save Weekly record of doctor / time slots for doctor...\r\n        fetch(ApiSecondaryPath + 'create', options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                if (response && response.ok) {\r\n                    props.showToast(\"Time slots updated successfully!\", \"success\");\r\n\r\n                } else {\r\n                    props.showToast(response.message, \"exclamation\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.showToast(error.message, \"exclamation\");\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='box-container'>\r\n                <h3>Availability</h3>\r\n                <div className=\"availability-grid\">\r\n                    <div className='question-group'>\r\n                        <p>Indicate your avaiability?</p>\r\n                        <div className=\"radio-group mb-2\">\r\n                            <div className=\"radio-button\">\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        className='custom-radio'\r\n                                        name='availability'\r\n                                        checked={onlineAvailability === 'online'}\r\n                                        onChange={() => setOnlineAvailability('online')}\r\n                                    />\r\n                                    Online\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"radio-button\">\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        className='custom-radio'\r\n                                        name='availability'\r\n                                        checked={onlineAvailability === 'offline'}\r\n                                        onChange={() => setOnlineAvailability('offline')}\r\n                                    />\r\n                                    Offline\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"radio-button\">\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        className='custom-radio'\r\n                                        name='availability'\r\n                                        checked={onlineAvailability === 'both'}\r\n                                        onChange={() => setOnlineAvailability('both')}\r\n                                    />\r\n                                    Both\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"input-group\">\r\n                                <label>Address Link (for both)</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"txtAddressLink\"\r\n                                    value={txtAddressLink}\r\n                                    onChange={e => setTxtAddressLink(e.target.value)}\r\n                                    disabled={onlineAvailability !== 'both'}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='question-group border-left'>\r\n                        <p>Receive Reminder calls?</p>\r\n                        <div className='radio-group mb-2'>\r\n                            <div className=\"radio-button\">\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        className='custom-radio'\r\n                                        name='reminderCalls'\r\n                                        checked={reminderCalls}\r\n                                        onChange={() => setReminderCalls(true)}\r\n                                    />Yes\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"radio-button\">\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        className='custom-radio'\r\n                                        name='reminderCalls'\r\n                                        checked={!reminderCalls}\r\n                                        onChange={() => setReminderCalls(false)}\r\n                                    />No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row-2\">\r\n                            <div className=\"input-group\">\r\n                                <label>Set Reminder Time</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    step={5}\r\n                                    className=\"form-control align-right\"\r\n                                    id=\"txtReminderCallTime\"\r\n                                    value={txtReminderCallTime}\r\n                                    onChange={e => setTxtReminderCallTime(e.target.value)}\r\n                                    disabled={!reminderCalls}\r\n                                />\r\n                                <span className='align-right'>mins</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='box-container'>\r\n                <h3>Time Slots</h3>\r\n                <div className='form-row-3 pb-2 border-bottom'>\r\n                    <div className=\"input-group\">\r\n                        <label>Choose Day of Week</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id=\"cbxDayOfWeek\"\r\n                            value={cbxDayOfWeek}\r\n                            onChange={e => setCbxDayOfWeek(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            {weekdaysSelect}\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <button\r\n                            className=\"btn-main mt-3\"\r\n                            onClick={displaySlotDialog}\r\n                        >Choose slots...</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row mb-2\">\r\n                    <h3 className='section-header'>• Selected Slots</h3>\r\n                    <div className=\"slots-grid\">\r\n                        {slotsGridItems}\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className='form-row-3'>\r\n                    <div></div>\r\n                    <div className='input-group mb-3'>\r\n                        <button\r\n                            onClick={updateDoctorsTimeSlots}\r\n                            className='btn-main d-block'\r\n                        >\r\n                            <i className='icofont-upload-alt' /> Update Slots\r\n                        </button>\r\n                    </div>\r\n                    <div></div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                slotsDialogVisible && <SlotsDialog\r\n                    selectedWeekDay={cbxDayOfWeek}\r\n                    timeSlots={filterTimeSlots}\r\n                    setSelectedTimeSlots={setSelectedTimeSlots}\r\n                    hideDialog={() => setSlotsDialogVisible(false)}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AvailabilitySetup;\r\n\r\nconst Slots = props => {\r\n\r\n    const timeSlots = props.selectedSlots.map((item, index) => {\r\n        return (\r\n            <span key={index}>{item}<i className=\"icofont-close d-none\" /></span>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className={props.dayOfWeek !== \"\" ? \"slot-data\" : 'd-none'}>\r\n                <h4>{props.dayOfWeek}</h4>\r\n                <div className=\"slots\">\r\n                    {timeSlots}\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}","import { useState } from 'react';\r\n\r\nconst ChargeSheet = props => {\r\n\r\n    const [txtConsultationCharge, setTxtConsultationCharge] = useState('0');\r\n    const [txtEmergencyCharge, setTxtEmergencyCharge] = useState('0');\r\n    const [txtHomeConsultationCharge, setTxtHomeConsultationCharge] = useState('0');\r\n\r\n    return (\r\n        <div className=\"box-container\">\r\n            <h3>Charge Sheet</h3>\r\n            <div className=\"form-row-2-1-1 ml-2 mb-2 border-bottom\">\r\n                <label className=\"amount-label\">Consultation Charge</label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control align-right\"\r\n                        id=\"txtConsultationCharge\"\r\n                        value={txtConsultationCharge}\r\n                        onChange={e => setTxtConsultationCharge(e.target.value)}\r\n                    />\r\n                </div>\r\n                <label className=\"amount-label\">USD/hr</label>\r\n            </div>\r\n            <div className=\"form-row-2-1-1 ml-2 mb-2 border-bottom\">\r\n                <label className=\"amount-label\">Emergency Charge</label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control align-right\"\r\n                        id=\"txtEmergencyCharge\"\r\n                        value={txtEmergencyCharge}\r\n                        onChange={e => setTxtEmergencyCharge(e.target.value)}\r\n                    />\r\n                </div>\r\n                <label className=\"amount-label\">USD/hr</label>\r\n            </div>\r\n            <div className=\"form-row-2-1-1 ml-2 mb-2 border-bottom\">\r\n                <label className=\"amount-label\">Home Consultation</label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control align-right\"\r\n                        id=\"txtHomeConsultationCharge\"\r\n                        value={txtHomeConsultationCharge}\r\n                        onChange={e => setTxtHomeConsultationCharge(e.target.value)}\r\n                    />\r\n                </div>\r\n                <label className=\"amount-label\">USD/hr</label>\r\n            </div>\r\n            <div className=\"form-row-2-1-1\">\r\n                <div></div><div></div>\r\n                <div className='input-group'>\r\n                <button className='btn-main'>\r\n                    <i className='icofont-tick-mark' /> Update Charges\r\n                </button>\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChargeSheet;\r\n","import { useEffect, useState } from 'react';\r\nimport { ProfilePage } from \"./profile-pages/profile-page\"\r\nimport { DoctorsProfileHeader } from './components/profile-header';\r\nimport { DoctorsProfileRightSidebar } from './components/profile-right-sidebar';\r\nimport { DoctorsProfileSideBar } from './components/profile-sidebar';\r\nimport { DoctorsProfileSubHeader } from './components/profile-sub-header';\r\nimport AppointmentSetupPage from './profile-pages/appointment-setup';\r\nimport AvailabilitySetup from './profile-pages/availability-setup';\r\nimport ChargeSheet from './profile-pages/charge-sheet';\r\n\r\nconst DoctorsProfile = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n\r\n    const [appointments] = useState([\r\n        { 'name': 'First Patient', 'date': '2022-02-12', 'event': 'Clinicals', 'time': '12:00' },\r\n        { 'name': 'Second Patient', 'date': '2022-02-13', 'event': 'Test', 'time': '14:00' },\r\n        { 'name': 'Third Patient', 'date': '2022-02-13', 'event': 'Test', 'time': '15:00' },\r\n    ]); //Sample data for now...\r\n\r\n    const [menuActive, setMenuActive] = useState(false);\r\n    const [selectedMenu, setSelectedMenu] = useState(1);\r\n\r\n    useEffect(() => {\r\n        //Import the data for now...\r\n        setDoctorsData(JSON.parse(sessionStorage.getItem(\"doctor\")));\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"background\">\r\n                <DoctorsProfileHeader\r\n                    doctorsData={doctorsData}\r\n                />\r\n                <div className='body-container'>\r\n                    <DoctorsProfileSideBar\r\n                        selectedMenu={selectedMenu}\r\n                        setSelectedMenu={setSelectedMenu}\r\n                        appointments={appointments}\r\n                        menuActive={menuActive}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />\r\n                    <div className='main'>\r\n                        <DoctorsProfileSubHeader\r\n                            menuActive={menuActive}\r\n                            setMenuActive={setMenuActive}\r\n                        />\r\n                        <div className='sub-main'>\r\n                            <div className='central-panel'>\r\n                                {selectedMenu === 1 && <AvailabilitySetup\r\n                                    showToast={props.showToast}\r\n                                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                    data={doctorsData}\r\n                                />}\r\n                                {selectedMenu === 2 && <ProfilePage\r\n                                    showToast={props.showToast}\r\n                                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                    data={doctorsData}\r\n                                />}\r\n                                {selectedMenu === 3 && <AppointmentSetupPage />}\r\n                                {selectedMenu === 4 && <ChargeSheet />}\r\n\r\n                            </div>\r\n                            <DoctorsProfileRightSidebar\r\n\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DoctorsProfile;\r\n","import React from 'react';\r\n\r\nconst rowStyle = {\r\n    display: 'flex'\r\n}\r\n\r\nconst squareStyle = {\r\n    'width': '60px',\r\n    'height': '60px',\r\n    'backgroundColor': '#ddd',\r\n    'margin': '4px',\r\n    'display': 'flex',\r\n    'justifyContent': 'center',\r\n    'alignItems': 'center',\r\n    'fontSize': '20px',\r\n    'color': 'white'\r\n}\r\n\r\nconst boardStyle = {\r\n    'backgroundColor': '#eee',\r\n    'width': '208px',\r\n    'alignItems': 'center',\r\n    'justifyContent': 'center',\r\n    'display': 'flex',\r\n    'flexDirection': 'column',\r\n    'border': '3px #eee solid'\r\n}\r\n\r\nconst containerStyle = {\r\n    'display': 'flex',\r\n    'alignItems': 'center',\r\n    'flexDirection': 'column'\r\n}\r\n\r\nconst instructionsStyle = {\r\n    'marginTop': '5px',\r\n    'marginBottom': '5px',\r\n    'fontWeight': 'bold',\r\n    'fontSize': '16px',\r\n}\r\n\r\nconst buttonStyle = {\r\n    'marginTop': '15px',\r\n    'marginBottom': '16px',\r\n    'width': '80px',\r\n    'height': '40px',\r\n    'backgroundColor': '#8acaca',\r\n    'color': 'white',\r\n    'fontSize': '16px',\r\n}\r\n\r\nclass Square extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            output: '',\r\n            blocked: false\r\n        }\r\n    }\r\n\r\n    clickBoard = () => {\r\n\r\n        if (!this.state.blocked) {\r\n            this.props.boardClick();\r\n\r\n            //Also, set the new item on the board...\r\n            this.setState({\r\n                output: this.props.setItem,\r\n                blocked: true\r\n            }, () => this.props.setInput(this.props.setItem))\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                onClick={this.clickBoard}\r\n                className=\"square\"\r\n                style={squareStyle}>\r\n                {this.state.output}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            //variables for each board...\r\n            item11: 'X',\r\n            item12: '',\r\n            item13: '',\r\n            item21: '',\r\n            item22: '',\r\n            item23: '',\r\n            item31: '',\r\n            item32: '',\r\n            item33: '',\r\n            playStatus: true,\r\n            playItem: \"X\",\r\n            gameplay: 'in-session',\r\n            winner: 'None'\r\n        }\r\n    }\r\n\r\n    resetGame = () => {\r\n        //Reset all the items to the default values....\r\n        this.setState({\r\n            item11: 'X',\r\n            item12: '',\r\n            item13: '',\r\n            item21: '',\r\n            item22: '',\r\n            item23: '',\r\n            item31: '',\r\n            item32: '',\r\n            item33: '',\r\n            playStatus: true,\r\n            playItem: \"X\",\r\n            gameplay: 'in-session',\r\n            winner: 'None'\r\n        })\r\n\r\n    }\r\n\r\n    boardClick = () => {\r\n        //This toggles the clicked variable and sets it on the board...\r\n        const formerState = this.state.playStatus;\r\n\r\n        //Toggle X and O...\r\n        if (this.state.playStatus) {\r\n            this.setState({\r\n                playItem: \"X\",\r\n                playStatus: !formerState\r\n            })\r\n        } else {\r\n            this.setState({\r\n                playItem: \"O\",\r\n                playStatus: !formerState\r\n            })\r\n        }\r\n\r\n        this.checkGamePlay(this.state.playItem);\r\n\r\n    }\r\n\r\n    checkGamePlay = (input) => {\r\n        //Check the X's or O's\r\n        if ((this.state.item11 === input && this.state.item12 === input && this.state.item13 === input) || //horizontals\r\n            (this.state.item21 === input && this.state.item22 === input && this.state.item23 === input) ||\r\n            (this.state.item31 === input && this.state.item32 === input && this.state.item33 === input) ||\r\n            (this.state.item11 === input && this.state.item21 === input && this.state.item31 === input) ||  //verticals\r\n            (this.state.item12 === input && this.state.item22 === input && this.state.item32 === input) ||\r\n            (this.state.item13 === input && this.state.item23 === input && this.state.item33 === input) ||\r\n            (this.state.item11 === input && this.state.item22 === input && this.state.item33 === input) || //diagonals\r\n            (this.state.item13 === input && this.state.item22 === input && this.state.item31 === input)) {\r\n            //Match on horizontals...\r\n            this.setState({\r\n                winner: input\r\n            })\r\n\r\n        }\r\n\r\n        console.log(this.state.item11 + \" \" + this.state.item12 + \" \" + this.state.item13)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={containerStyle} className=\"gameBoard\">\r\n                <div id=\"statusArea\" className=\"status\" style={instructionsStyle}>Next player: <span>{this.state.playItem}</span></div>\r\n                <div id=\"winnerArea\" className=\"winner\" style={instructionsStyle}>Winner: <span>{this.state.winner}</span></div>\r\n                <button style={buttonStyle} onClick={this.resetGame}>Reset</button>\r\n                <div style={boardStyle}>\r\n                    <div className=\"board-row\" style={rowStyle}>\r\n                        <Square setInput={val => this.setState({ item11: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                        <Square setInput={val => this.setState({ item12: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                        <Square setInput={val => this.setState({ item13: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                    </div>\r\n                    <div className=\"board-row\" style={rowStyle}>\r\n                        <Square setInput={val => this.setState({ item21: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                        <Square setInput={val => this.setState({ item22: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                        <Square setInput={val => this.setState({ item23: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                    </div>\r\n                    <div className=\"board-row\" style={rowStyle}>\r\n                        <Square setInput={val => this.setState({ item31: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                        <Square setInput={val => this.setState({ item32: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                        <Square setInput={val => this.setState({ item33: val })} boardClick={this.boardClick} setItem={this.state.playItem} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class Test extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Login } from './login/login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Register } from './register/register';\nimport Loader from './components/loader';\nimport { useState } from 'react';\nimport Toast from './components/toast';\nimport Patients from './patients-profile/patients';\nimport Doctors from './doctors-profile/doctors';\nimport { DoctorsLogin } from './login/doctors-login';\nimport Dashboard from './admin/dashboard/dashboard';\nimport Meeting from './meeting/meeting';\nimport DigitalHealthPassport from './dhp/digital-health-passport'\nimport Page404 from './page-404';\nimport DoctorsProfileUpdate from './doctors/profile-update';\nimport ProfileUpdateSuccessful from './doctors/profile-update-successful';\nimport DoctorsProfile from './doctors/doctors-profile';\n\nimport { Test } from './test'\n\nfunction App() {\n\n  const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n  const [toastVis, setToastVis] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [msgBoxType, setMsgBoxType] = useState(\"success\");\n\n  const ShowToast = (message, messageBoxType) => {\n    setToastMsg(message);\n    setMsgBoxType(messageBoxType);\n    setToastVis(true);\n  }\n\n  return (\n    <>\n      <Loader isVisible={isLoaderVisible} />\n      <Toast\n        toastMessage={toastMsg}\n        msgBoxType={msgBoxType}\n        toastVisibility={toastVis}\n        setToastVisibility={setToastVis}\n      />\n      <Router basename='/'>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Login showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/patients/profile\" exact>\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/profile\" exact>\n            <Doctors showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/login\" exact>\n            <DoctorsLogin showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/admin/dashboard\" exact>\n            <Dashboard showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/meeting/meeting-page\" exact>\n            {/* Re-route to the patient's main page... */}\n            <Meeting showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path='/patients/digital-health-passport' exact>\n            <DigitalHealthPassport showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path='/doctors/complete-profile-registration' exact>\n            <DoctorsProfileUpdate showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path='/doctors/profile-update-successful' exact>\n            <ProfileUpdateSuccessful showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path='/doctors/appointment-onboarding' exact>\n            <DoctorsProfile showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path='/test' exact>\n            <Test />\n          </Route>\n\n          <Route path=\"*\">\n            {/* Re-route to the patient's main page... */}\n            <Page404 showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/doctors.css'\nimport './assets/css/dashboard.css'\nimport './assets/css/new-loader.css'\nimport './assets/css/main.css'\nimport './assets/css/modal.css'\nimport './assets/css/calendar.css'\nimport './assets/css/controls.css'\nimport './assets/css/toast.css'\nimport './assets/css/scrollbar.css'\nimport './assets/css/dhp.css'\nimport './assets/css/dialog.css'\nimport './assets/css/tab-pages.css'\nimport './assets/css/progress-bar.css'\nimport './assets/200/icofont/icofont.min.css'\nimport './assets/200/boxicons/css/boxicons.min.css'\nimport './assets/200/ionicons/css/ionicons.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}