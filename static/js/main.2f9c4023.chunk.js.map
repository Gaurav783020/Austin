{"version":3,"sources":["assets/common/base-url.js","login/OTPLogin.js","login/login.js","register/register.js","components/loader.js","components/toast.js","components/header.js","patients-profile/tab-pages/patient-tab-headers.js","patients-profile/tab-pages/contact.js","patients-profile/tab-pages/personal.js","patients-profile/tab-pages/medical.js","components/image-dialog.js","assets/common/file-to-base64.js","patients-profile/tab-pages/others/past-prescriptions-dialog.js","patients-profile/tab-pages/medical-history.js","patients-profile/tab-pages/lifestyle.js","patients-profile/patients.js","doctors-profile/tab-pages/doctors-tab-headers.js","doctors-profile/tab-pages/personal.js","doctors-profile/tab-pages/contact.js","doctors-profile/tab-pages/portfolio.js","doctors-profile/doctors.js","login/doctors-login.js","admin/dashboard/cards.js","admin/dashboard/cards-values.js","admin/dashboard/cardbox.js","admin/dashboard/doctors-list-item.js","admin/dashboard/doctors.js","admin/dashboard/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["ApiPath","OTPLogin","props","history","useHistory","useState","countdownTimer","setCountdownTimer","input1","setInput1","input2","setInput2","input3","setInput3","input4","setInput4","input5","setInput5","input6","setInput6","useEffect","setInterval","value","displayClasss","showDialog","className","id","onClick","hideDialog","phoneNumber","type","maxLength","onChange","e","target","keyCode","document","getElementById","focus","data","loginId","role","validatedbyotp","options","JSON","stringify","setIsLoaderVisible","fetch","then","response","json","statusCode","showToast","sessionStorage","setItem","token","uidNo","push","message","catch","err","Login","setValue","displayOTP","setDisplayOTP","style","minHeight","src","defaultCountry","placeholder","to","display","Register","name","setName","setRole","phone","setPhone","password","setPassword","verifyPassword","setVerifyPassword","marginTop","marginBottom","autoComplete","substring","width","Loader","displayClass","isVisible","Toast","visStatus","toastVisibility","toastMessage","setTimeout","setToastVisibility","iconSrc","contentStyle","headerStyle","msgBoxType","borderLeft","color","innerText","alt","Header","background","outline","border","cursor","fontFamily","marginRight","PatientTabHeaders","selectedTab","setSelectedTab","Contact","setShowDialog","address","houseNumber","street","city","state","district","postalCode","countries","setCountries","method","showPhone","contactPerson","length","contactDetails","relationship","country","emailId","contact","setResetData","ContactDialog","addressData","txtPhone","setTxtPhone","addressType","setAddressType","txtHouseNo","setTxtHouseNo","txtStreet","setTxtStreet","txtCity","setTxtCity","txtDistrict","setTxtDistrict","txtState","setTxtState","txtPostalCode","setTxtPostalCode","txtCountry","setTxtCountry","txtEmail","setTxtEmail","txtContactPerson","setTxtContactPerson","txtRelationship","setTxtRelationship","txtContactPhone","setTxtContactPhone","displayDialog","countryList","map","item","index","rows","getItem","error","Personal","gender","maritalStatus","birthDate","communicationLang","languagePref","deceased","deceasedBoolean","deceasedDateTime","PersonalDialog","showDeceased","setShowDeceased","cbxDeceased","setCbxDeceased","fullName","setFullName","cbxGender","setCbxGender","cbxMaritalStatus","setCbxMaritalStatus","txtBirthDate","setTxtBirthDate","txtLanguage","setTxtLanguage","txtDeceasedDate","setTxtDeceasedDate","Medical","allergies","managingOrganization","general","bloodGroup","height","weight","bmi","chestExpansion","vision","bp","pulse","oxygenSaturation","MedicalDialog","boxContent","setBoxContent","txtAllergies","setTxtAllergies","txtManagingOrg","setTxtManagingOrg","setBloodGroup","setHeight","setWeight","setVision","setChestExpansion","bloodPressure","setBloodPressure","setPulse","setOxygenSaturation","setBmi","createItems","content","Array","isArray","split","trim","onBlur","ImageDialog","imageContainerDisplay","embedContainer","imageSource","imageExtension","toString","indexOf","dialogClass","setImageDisplay","hideImageDialog","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","PastPrescriptionsDialog","pastPrescriptions","txtPastPrescriptions","setTxtPastPrescriptions","cbxMedicines","setCbxMedicines","txtAddMedication","setTxtAddMedication","txtMedicationDescription","setTxtMedicationDescription","borderRadius","padding","transform","fileUpload","querySelector","files","size","setTxtCurrentMedications","saveImageToBase64","accept","medication","description","uploads","MedicalHistory","showPrescriptionsDialog","setShowPrescriptionsDialog","showImageDialog","setShowImageDialog","setImageSource","currentMedications","diagnosisReport","mandateExtension","isURL","MedicalHistoryDialog","txtCurrentMedications","txtDiagnosisReport","setTxtDiagnosisReport","cbxIsOnMedications","setCbxIsOnMedications","val","Lifestyle","lifeStyle","smokingHabbit","alcoholConsumption","activityLevel","foodPreference","LifestyleDialog","txtSmokingHabits","setTxtSmokingHabits","txtAlcohol","setTxtAlcohol","txtActivityLevel","setTxtActivityLevel","txtFoodPreference","setTxtFoodPreference","Patients","patientsData","setPatientsData","resetData","outputText","setOutputText","picture","setPicture","appointmentBooked","setAppointmentBooked","idValue","params","refPicture","useRef","dropZone","fileInput","addEventListener","preventDefault","dataTransfer","removeEventListener","console","log","res","photo","obj","Object","entries","reduce","str","p","alert","current","DoctorsTabHeaders","emailAddress","txtAddress","setTxtAddress","updateContact","Portfolio","specialization","certification","license","issueDate","qualification","PortfolioDialog","txtQualification","setTxtQualification","txtSpecialization","setTxtSpecialization","txtSpecializationType","setTxtSpecializationType","txtLicense","setTxtLicense","txtLicenseIssueDate","setTxtLicenseIssueDate","Doctors","doctorsData","setDoctorsData","DoctorsLogin","txtDoctorsID","setTxtDoctorsID","txtPassword","setTxtPassword","Cards","numbers","totalCases","icofontClass","lastUpdatedTime","cardsValues","cases","CardBox","vals","DoctorsListItem","selectedDoctor","rating","status","toLowerCase","fetchUsersData","displayActivate","verification","Dashboard","txtSearch","setTxtSearch","doctorsList","setDoctorsList","setSelectedDoctor","headers","fetchDoctors","output","filter","listItems","_id","Math","floor","random","App","isLoaderVisible","toastVis","setToastVis","toastMsg","setToastMsg","setMsgBoxType","ShowToast","messageBoxType","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"saAAaA,EAAU,+B,cCmLRC,EA/KE,SAACC,GAEd,IAAMC,EAAUC,cAEhB,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA4BV,mBAAS,IAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACFd,GAAkB,GAClBe,aAAY,WACRd,GAAkB,SAAAe,GAAK,OAAKA,EAAQ,OACrC,OAGR,CAAChB,IAEJ,IAoDMiB,EAAgBrB,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAWF,EAAhB,SACI,qBAAKE,UAAU,uBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,QAAd,uCACA,sBAAMC,GAAG,cAAcC,QAASzB,EAAM0B,WAAtC,qBAEJ,sBAAKH,UAAU,cAAf,UACI,8FAGA,oBAAIA,UAAU,WAAd,SAA0BvB,EAAM2B,cAChC,sBAAKJ,UAAU,cAAf,UACI,uBACIK,KAAK,OACLC,UAAW,EACXL,GAAG,SACHJ,MAAOd,EACPwB,SAAU,SAAAC,GACNxB,EAAUwB,EAAEC,OAAOZ,OACD,IAAdW,EAAEE,SAAgBC,SAASC,eAAe,UAAUC,WAGhE,uBACIR,KAAK,OACLC,UAAW,EACXL,GAAG,SACHJ,MAAOZ,EACPsB,SAAU,SAAAC,GACNtB,EAAUsB,EAAEC,OAAOZ,OACD,IAAdW,EAAEE,SAAgBC,SAASC,eAAe,UAAUC,WAGhE,uBACIR,KAAK,OACLC,UAAW,EACXL,GAAG,SACHJ,MAAOV,EACPoB,SAAU,SAAAC,GACNpB,EAAUoB,EAAEC,OAAOZ,OACD,IAAdW,EAAEE,SAAgBC,SAASC,eAAe,UAAUC,WAGhE,uBACIR,KAAK,OACLC,UAAW,EACXL,GAAG,SACHJ,MAAOR,EACPkB,SAAU,SAAAC,GACNlB,EAAUkB,EAAEC,OAAOZ,OACD,IAAdW,EAAEE,SAAgBC,SAASC,eAAe,UAAUC,WAGhE,uBACIR,KAAK,OACLC,UAAW,EACXL,GAAG,SACHJ,MAAON,EACPgB,SAAU,SAAAC,GACNhB,EAAUgB,EAAEC,OAAOZ,OACD,IAAdW,EAAEE,SAAgBC,SAASC,eAAe,UAAUC,WAGhE,uBACIR,KAAK,OACLC,UAAW,EACXL,GAAG,SACHJ,MAAOJ,EACPc,SAAU,SAAAC,GACNd,EAAUc,EAAEC,OAAOZ,OACD,IAAdW,EAAEE,SAAgBC,SAASC,eAAe,UAAUC,cAMpE,sBAAKb,UAAU,eAAf,UACI,gCACI,wDACA,+CAEJ,sCAASnB,QAGb,qBAAKmB,UAAU,WAAf,SACI,0DAGR,sBAAKA,UAAU,gBAAf,UACI,wBAAQA,UAAU,eAAeE,QAhJnC,WAAO,IAAD,EAIpB,GAAY,WAHAnB,EAASE,EAASE,EAASE,EAASE,EAASE,EAGzD,CAOA,IAAMqB,EAAO,CACTC,QAAStC,EAAM2B,YACfY,KAAM,UACNC,eAAgB,QAGdC,EAAU,CACZ,QAAW,CACP,eAAgB,oBAEpB,OAAU,OACV,KAAQC,KAAKC,UAAUN,IAG3BrC,EAAM4C,oBAAmB,GAEzB,UAAAC,MAAM/C,EAAU,QAAS2C,UAAzB,SACMK,MAAK,SAAAC,GAAQ,OAAMA,EAASC,UAC7BF,MAAK,SAAAC,GACF/C,EAAM4C,oBAAmB,GAEG,MAAxBG,EAASE,YACTjD,EAAMkD,UAAU,oBAAqB,WAGrCC,eAAeC,QAAQ,QAASL,EAASM,OACzCF,eAAeC,QAAQ,SAAUL,EAASO,OAE1CrD,EAAQsD,KAAK,sBAGbvD,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAAC,GACH1D,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUQ,EAAIF,QAAS,uBAzCjCxD,EAAMkD,UAAU,mGAAoG,gBA0IxG,sBACA,wBAAQ3B,UAAU,aAAaE,QAASzB,EAAM0B,WAA9C,+BCrKXiC,EAAQ,SAAC3D,GAElB,IAAQkD,EAAkClD,EAAlCkD,UAAWN,EAAuB5C,EAAvB4C,mBAEnB,EAA0BzC,mBAAS,IAAnC,mBAAOiB,EAAP,KAAcwC,EAAd,KACA,EAAoCzD,oBAAS,GAA7C,mBAAO0D,EAAP,KAAmBC,EAAnB,KAuCA,OACI,qCACI,qBAAKvC,UAAU,YAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,eAAewC,MAAO,CAAEC,UAAW,SAAlD,UACI,qBAAKC,IAAI,mBAET,sBAAK1C,UAAU,YAAf,UACI,+BAAI,mBAAGA,UAAU,0BAAjB,yBAEA,0DACA,qBAAKA,UAAU,wBAAf,SACI,uBACIC,GAAG,QACHJ,MAAOA,EACPU,SAAU,SAAAC,GAAC,OAAI6B,EAAS7B,EAAEC,OAAOZ,QACjC8C,eAAe,KACf3C,UAAU,gBACV4C,YAAY,gBACZtC,UAAW,GACXD,KAAK,WAIb,iEACA,cAAC,IAAD,CAAMwC,GAAG,IAAT,kCAEA,wBACI5C,GAAG,WACHD,UAAU,eACVE,QAnEX,WAAO,IAAD,EAEbY,EAAO,CACTC,QAASlB,EACTmB,KAAM,UACNC,eAAgB,SAGdC,EAAU,CACZ,QAAW,CACP,eAAgB,oBAEpB,OAAU,OACV,KAAQC,KAAKC,UAAUN,IAG3BO,GAAmB,GAEnB,UAAAC,MAAM/C,EAAU,QAAS2C,UAAzB,SACMK,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC5BF,MAAK,SAAAC,GAEFH,GAAmB,GAES,MAAxBG,EAASE,WACTC,EAAUH,EAASS,QAAS,eAG5BM,GAAc,MAGrBL,OAAM,SAAAC,GACHd,GAAmB,GACnBM,EAAUQ,EAAIF,QAAS,mBA+BX,sBAKA,qBAAKjC,UAAU,kBAAf,SACI,sDAAwB,cAAC,IAAD,CAAM6C,GAAG,YAAT,gCAE5B,qBAAK7C,UAAU,kBAAf,SACI,oDAAsB,cAAC,IAAD,CAAM6C,GAAG,iBAAT,gCAG9B,qBAAK7C,UAAU,cAAcwC,MAAO,CAAEM,QAAS,QAA/C,SACI,qFAGR,sBAAK9C,UAAU,gBAAf,UACI,qBAAK0C,IAAI,kBACT,qBAAK1C,UAAU,aAAf,SACI,qGASZsC,GAAc,cAAC,EAAD,CACVvC,WAAYuC,EACZlC,YAAaP,EACbM,WAAY,kBAAMoC,GAAc,IAChCZ,UAAWA,EACXN,mBAAoBA,QC1G3B0B,EAAW,SAAC,GAAuC,IAArC1B,EAAoC,EAApCA,mBAAoBM,EAAgB,EAAhBA,UAE3C,EAAwB/C,mBAAS,IAAjC,mBAAOoE,EAAP,KAAaC,EAAb,KACA,EAAwBrE,mBAAS,IAAjC,mBAAOoC,EAAP,KAAakC,EAAb,KACA,EAA0BtE,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KACA,EAAgCxE,mBAAS,IAAzC,mBAAOyE,EAAP,KAAiBC,EAAjB,KACA,EAA4C1E,mBAAS,IAArD,mBAAO2E,EAAP,KAAuBC,EAAvB,KAEM9E,EAAUC,cAyDhB,OACI,qBAAKqB,UAAU,YAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAK0C,IAAI,mBAET,sBAAK1C,UAAU,YAAYwC,MAAO,CAAEiB,WAAY,GAAhD,UACI,oBAAIjB,MAAO,CAAEkB,aAAc,IAA3B,0BAGA,sBAAK1D,UAAU,YAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,kEACA,uBACIC,GAAG,OACHJ,MAAOmD,EACPzC,SAAU,SAAAC,GAAC,OAAIyC,EAAQzC,EAAEC,OAAOZ,QAChCQ,KAAK,OACLL,UAAU,eACV2D,aAAa,aAIzB,qBAAK3D,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,yCACA,yBACIC,GAAG,OACHJ,MAAOmB,EACPT,SAAU,SAAAC,GAAC,OAAI0C,EAAQ1C,EAAEC,OAAOZ,QAChCG,UAAU,eAJd,UAMI,wBAAQH,MAAM,KACd,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,4BAIZ,qBAAKG,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,0CACA,uBACIC,GAAG,QACHJ,MAAOsD,EACP5C,SAAU,SAAAC,GAAC,OAAI4C,EAAS5C,EAAEC,OAAOZ,QACjCQ,KAAK,MACLL,UAAU,eACV2D,aAAa,MACbrD,UAAW,UAIvB,qBAAKN,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,6CACA,uBACIC,GAAG,WACHJ,MAAOwD,EACP9C,SAAU,SAAAC,GAAC,OAAI8C,EAAY9C,EAAEC,OAAOZ,QACpCQ,KAAK,WACLL,UAAU,eACV2D,aAAa,aAIzB,qBAAK3D,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,oDACA,uBACIC,GAAG,gBACHJ,MAAO0D,EACPhD,SAAU,SAAAC,GAAC,OAAIgD,EAAkBhD,EAAEC,OAAOZ,QAC1CQ,KAAK,WACLL,UAAU,eACV2D,aAAa,aAIzB,wBACI1D,GAAG,WACHD,UAAU,eACVE,QAzIX,WAAO,IAAD,EAEnB,GAAa,KAAT8C,GAAwB,KAAThC,GAAyB,KAAVmC,GAA6B,KAAbE,EAKlD,GAAIA,IAAaE,EAAjB,CAMA,IAAMzC,EAAO,CACTkC,KAAMA,EACNhC,KAAMA,EACNZ,YAAa+C,EACbE,SAAUA,GAGRnC,EAAU,CACZ,QAAW,CACP,eAAgB,oBAEpB,OAAU,OACV,KAAQC,KAAKC,UAAUN,IAG3BO,GAAmB,GAEnB,UAAAC,MAAM/C,EAAU,WAAY2C,UAA5B,SACMK,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC5BF,MAAK,SAAAC,GACFH,GAAmB,GACfG,GAAoC,MAAxBA,EAASE,YACrBC,EAAU,iEAAkE,WAEhC,MAAxCH,EAASV,KAAKiB,MAAM6B,UAAU,EAAG,GACjClF,EAAQsD,KAAK,KAEbtD,EAAQsD,KAAK,mBAKjBL,EAAUH,EAASS,QAAS,kBAGnCC,OAAM,SAAAC,GACHd,GAAmB,GACnBM,EAAUQ,EAAIF,QAAS,uBA1C3BN,EAAU,kDAAmD,oBAL7DA,EAAU,kCAAmC,gBAmI7B,yBAOJ,qBAAK3B,UAAU,kBAAf,SACI,kDAAoB,cAAC,IAAD,CAAM6C,GAAG,IAAT,mCAKhC,sBAAK7C,UAAU,gBAAf,UACI,qBAAK0C,IAAI,uBAAuBF,MAAO,CAAEqB,MAAO,SAChD,qBAAK7D,UAAU,aAAf,SACI,yGCnJT8D,EAjBA,SAAC,GAAmB,IAEzBC,EAFwB,EAAhBC,UAE+B,gBAAX,SAElC,OACI,qBAAKhE,UAAW+D,EAAhB,SACI,sBAAK/D,UAAU,uBAAf,UACI,sBAAMwC,MAAO,CAAE,MAAO,KACtB,sBAAMA,MAAO,CAAE,MAAO,KACtB,sBAAMA,MAAO,CAAE,MAAO,KACtB,sBAAMA,MAAO,CAAE,MAAO,KACtB,sBAAMA,MAAO,CAAE,MAAO,WCiEvByB,EA3ED,SAACxF,GAEX,IAAMyF,EAAazF,EAAM0F,gBAAmB,QAAU,eAChDlC,EAAiC,oBAAvBxD,EAAM2F,aAAqC,yEAA2E3F,EAAM2F,aAMxI3F,EAAM0F,iBACNE,YAAW,WACP5F,EAAM6F,oBAAmB,KAC1B,KAGP,IAAIC,EAAU,GACRC,EAAe,GACfC,EAAc,GAEpB,OAAQhG,EAAMiG,YACV,IAAK,UACDH,EAAU,eACVC,EAAaG,WAAa,8BAE1BF,EAAYG,MAAQ,oBACpBH,EAAYI,UAAY,UAExB,MAEJ,IAAK,cACDN,EAAU,YACVC,EAAaG,WAAa,0BAE1BF,EAAYG,MAAQ,gBACpBH,EAAYI,UAAY,cAExB,MAEJ,IAAK,cACDN,EAAU,eACVC,EAAaG,WAAa,8BAE1BF,EAAYG,MAAQ,oBACpBH,EAAYI,UAAY,QAOhC,OAUI,cATA,CASA,OAAK7E,UAAWkE,EAAhB,UACI,qBAAKlE,UAAU,OAAf,SACI,qBAAKC,GAAG,YAAYyC,IAAK6B,EAASO,IAAI,OAE1C,sBAAK9E,UAAU,UAAUwC,MAAOgC,EAAhC,UACI,sBAAKxE,UAAU,iBAAf,UACI,oBAAIC,GAAG,aAAauC,MAAOiC,EAA3B,6BACA,sBAAMxE,GAAG,cAAcC,QA9DvC,WACIzB,EAAM6F,oBAAmB,IA6Db,qBAEJ,mBAAGrE,GAAG,gBAAN,SAAoC,yBAAZgC,GAAkD,kBAAZA,EAA+B,iBAAmBA,WCpEnH8C,EAAS,WAElB,IAAMrG,EAAUC,cAoBhB,OACI,sBAAKqB,UAAU,aAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,eAAC,IAAD,CAAM6C,GAAG,IAAT,UAAc,qBAAKH,IAAI,gBAAgBmB,MAAM,OAA7C,uBAEJ,wBAAQrB,MAxBI,CAChBM,QAAS,QACTkC,WAAY,cACZJ,MAAO,QACPK,QAAS,OACTC,OAAQ,OACRC,OAAQ,UACRC,WAAY,UACZC,YAAa,QAgBmBnF,QAbpB,WAEZ0B,eAAeC,QAAQ,QAAS,MAChCD,eAAeC,QAAQ,SAAU,MAEjCnD,EAAQsD,KAAK,MAQT,0BC5BCsD,EAAoB,SAAC7G,GAE9B,OACI,sBAAKuB,UAAU,gBAAf,UACI,sBACIA,UAAiC,IAAtBvB,EAAM8G,YAAoB,aAAe,MACpDrF,QAAS,kBAAMzB,EAAM+G,eAAe,IAFxC,UAII,mBAAGxF,UAAU,oBAJjB,cAMA,sBACIA,UAAiC,IAAtBvB,EAAM8G,YAAoB,aAAe,MACpDrF,QAAS,kBAAMzB,EAAM+G,eAAe,IAFxC,UAII,mBAAGxF,UAAU,sBAJjB,aAMA,sBACIA,UAAiC,IAAtBvB,EAAM8G,YAAoB,aAAe,MACpDrF,QAAS,kBAAMzB,EAAM+G,eAAe,IAFxC,UAII,mBAAGxF,UAAU,mBAJjB,aAMA,sBACIA,UAAiC,IAAtBvB,EAAM8G,YAAoB,aAAe,MACpDrF,QAAS,kBAAMzB,EAAM+G,eAAe,IAFxC,UAII,mBAAGxF,UAAU,oBAJjB,aAMA,sBACIA,UAAiC,IAAtBvB,EAAM8G,YAAoB,aAAe,MACpDrF,QAAS,kBAAMzB,EAAM+G,eAAe,IAFxC,UAII,mBAAGxF,UAAU,kBAJjB,mBC1BCyF,EAAU,SAAChH,GAAW,IAAD,sDAE9B,EAAoCG,oBAAS,GAA7C,mBAAOmB,EAAP,KAAmB2F,EAAnB,KACMC,EAAO,UAAGlH,EAAMqC,YAAT,aAAG,EAAY6E,QACtBC,GAAc,UAAAD,EAAQ,UAAR,eAAYC,cAAc,UAAAD,EAAQ,UAAR,eAAYC,aAAc,KAAO,GACzEC,GAAS,UAAAF,EAAQ,UAAR,eAAYE,SAAS,UAAAF,EAAQ,UAAR,eAAYE,QAAS,KAAO,GAC1DC,GAAO,UAAAH,EAAQ,UAAR,eAAYG,OAAO,UAAAH,EAAQ,UAAR,eAAYG,MAAO,KAAO,GACpDC,GAAQ,UAAAJ,EAAQ,UAAR,eAAYI,QAAQ,UAAAJ,EAAQ,UAAR,eAAYI,OAAQ,KAAO,GACvDC,GAAW,UAAAL,EAAQ,UAAR,eAAYK,WAAW,UAAAL,EAAQ,UAAR,eAAYK,UAAW,KAAO,GAChEC,GAAa,UAAAN,EAAQ,UAAR,eAAYM,aAAa,UAAAN,EAAQ,UAAR,eAAYM,YAAa,MAAQ,GAC7E,EAAkCrH,mBAAS,IAA3C,mBAAOsH,EAAP,KAAkBC,EAAlB,KAEAxG,qBAAU,WAEN2B,MAAM,sDAAuD,CAAE8E,OAAQ,QAClE7E,MAAK,SAAAC,GAAc,OAAOA,EAASC,UACnCF,MAAK,SAAAC,GACF2E,EAAa3E,EAAS,SAE/B,IAIH,IAAM6E,GAAY,UAAA5H,EAAMqC,YAAN,eAAYwF,cAAcC,QAAS,EAAI,gBAAkB,GACrEC,GAAiB,UAAA/H,EAAMqC,YAAN,eAAYwF,cAAcC,QAAS,GAAnC,WACb,UAAA9H,EAAMqC,YAAN,eAAYwF,iBAAZ,UAA6B7H,EAAMqC,YAAnC,iBAA6B,EAAYwF,cAAc,UAAvD,aAA6B,EAA8BtD,MAD9C,cACuD,UAAAvE,EAAMqC,YAAN,eAAYwF,iBAAZ,UAA6B7H,EAAMqC,YAAnC,iBAA6B,EAAYwF,cAAc,UAAvD,aAA6B,EAA8BG,cADlH,KAGvB,OACI,qCACI,sBAAKzG,UAAU,mBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,uDAEJ,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,gBAAjB,SACI,kCACI,+BACI,uCACA,uCAAKvB,EAAMqC,YAAX,aAAK,EAAYV,cACjB,qBAAIF,QAAS,kBAAMwF,GAAc,IAAjC,UAAwC,mBAAG1F,UAAU,oBAArD,cAEJ,+BACI,yCACA,6BAAK2F,GAAWA,IAAY,GACtB,GADD,UAEIC,GAFJ,OAEkBC,GAFlB,OAE2BC,GAF3B,OAEkCE,GAFlC,OAE6CD,GAF7C,OAEqDE,KAE1D,0BAEJ,+BACI,yCACA,6BAAKN,EAAO,UAAGA,EAAQ,UAAX,aAAG,EAAYe,QAAU,MACrC,0BAEJ,+BACI,wCACA,6BAAKjI,EAAMqC,KAAK6F,UAChB,0BAEJ,+BACI,gDACA,+BACMH,EAAgB,uBAClB,mBAAGxG,UAAWqG,KAAgB,UAAA5H,EAAMqC,YAAN,eAAYwF,iBAAZ,UAA6B7H,EAAMqC,YAAnC,iBAA6B,EAAYwF,cAAc,UAAvD,iBAA6B,EAA8BM,eAA3D,aAA6B,EAAuC/G,UAEtG,oCAOpB,cAAC,EAAD,CACIE,WAAYA,EACZI,WAAY,kBAAMuF,GAAc,IAChC5E,KAAMrC,EAAMqC,KACZO,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBkF,aAAcpI,EAAMoI,aACpBX,UAAWA,QAMrBY,EAAgB,SAAArI,GAAU,IAAD,IAErBsI,EAActI,EAAMqC,KAAK6E,QAAQ,IAAM,GACvCW,EAAgB7H,EAAMqC,KAAKwF,cAAc,IAAM,GAErD,EAAgC1H,mBAASH,EAAMqC,KAAKV,aAApD,mBAAO4G,EAAP,KAAiBC,EAAjB,KACA,EAAsCrI,mBAAQ,OAACmI,QAAD,IAACA,OAAD,EAACA,EAAa1G,MAA5D,mBAAO6G,EAAP,KAAoBC,EAApB,KACA,EAAoCvI,mBAAQ,OAACmI,QAAD,IAACA,OAAD,EAACA,EAAanB,aAA1D,mBAAOwB,EAAP,KAAmBC,EAAnB,KACA,EAAkCzI,mBAAQ,OAACmI,QAAD,IAACA,OAAD,EAACA,EAAalB,QAAxD,mBAAOyB,EAAP,KAAkBC,EAAlB,KACA,EAA8B3I,mBAAQ,OAACmI,QAAD,IAACA,OAAD,EAACA,EAAajB,MAApD,mBAAO0B,EAAP,KAAgBC,EAAhB,KACA,EAAsC7I,mBAAQ,OAACmI,QAAD,IAACA,OAAD,EAACA,EAAaf,UAA5D,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAAgC/I,mBAAQ,OAACmI,QAAD,IAACA,OAAD,EAACA,EAAahB,OAAtD,mBAAO6B,EAAP,KAAiBC,EAAjB,KACA,EAA0CjJ,mBAASmI,EAAYd,YAA/D,mBAAO6B,EAAP,KAAsBC,EAAtB,KACA,EAAoCnJ,mBAAQ,OAACmI,QAAD,IAACA,OAAD,EAACA,EAAaL,SAA1D,mBAAOsB,EAAP,KAAmBC,EAAnB,KACA,EAAgCrJ,mBAAQ,UAACH,EAAMqC,YAAP,aAAC,EAAY6F,SAArD,mBAAOuB,EAAP,KAAiBC,EAAjB,KACA,EAAgDvJ,mBAAQ,OAAC0H,QAAD,IAACA,OAAD,EAACA,EAAetD,MAAxE,mBAAOoF,EAAP,KAAyBC,EAAzB,KACA,EAA8CzJ,mBAAQ,OAAC0H,QAAD,IAACA,OAAD,EAACA,EAAeG,cAAtE,oBAAO6B,GAAP,MAAwBC,GAAxB,MACA,GAA8C3J,mBAAQ,OAAC0H,QAAD,IAACA,GAAD,UAACA,EAAeM,eAAhB,aAAC,EAAwB/G,OAA/E,qBAAO2I,GAAP,MAAwBC,GAAxB,MA6DMC,GAAgBjK,EAAMsB,WAAa,yBAA2B,oBAC9D4I,GAAelK,EAAMyH,WAAazH,EAAMyH,UAAU0C,KAAI,SAACC,EAAMC,GAC/D,OAAQ,wBAAoBjJ,MAAOgJ,EAAK7F,KAAhC,SAAuC6F,EAAK7F,MAA/B8F,MAGzB,OACI,qBAAK9I,UAAW0I,GAAhB,SACI,sBAAK1I,UAAU,mBAAmBwC,MAAO,CAAEqB,MAAO,SAAlD,UACI,qBAAK7D,UAAU,gBAAf,SACI,qBAAIA,UAAU,QAAQwC,MAAO,CAAEoC,MAAO,iBAAtC,UAAyD,mBAAG5E,UAAU,qBAAtE,6BAEJ,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,0CACA,uBACIA,UAAU,eACVC,GAAG,WACHJ,MAAOmH,EACPzG,SAAU,SAAAC,GAAC,OAAIyG,EAAYzG,EAAEC,OAAOZ,aAG5C,sBAAKG,UAAU,cAAf,UACI,yCACA,yBACIC,GAAG,cACHJ,MAAOqH,EACP3G,SAAU,SAAAC,GAAC,OAAI2G,EAAe3G,EAAEC,OAAOZ,QACvCG,UAAU,eAJd,UAMI,wBAAQH,MAAM,GAAd,yBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,0BAGR,sBAAKG,UAAU,cAAf,UACI,iDACA,uBACIA,UAAU,eACVC,GAAG,aACHJ,MAAOuH,EACP7G,SAAU,SAAAC,GAAC,OAAI6G,EAAc7G,EAAEC,OAAOZ,gBAKlD,sBAAKG,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,2CACA,0BACI+I,KAAM,EACN/I,UAAU,eACVC,GAAG,YACHJ,MAAOyH,EACP/G,SAAU,SAAAC,GAAC,OAAI+G,EAAa/G,EAAEC,OAAOZ,aAG7C,sBAAKG,UAAU,cAAf,UACI,yCACA,uBACIA,UAAU,eACVC,GAAG,UACHJ,MAAO2H,EACPjH,SAAU,SAAAC,GAAC,OAAIiH,EAAWjH,EAAEC,OAAOZ,gBAK/C,sBAAKG,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,6CACA,uBACIA,UAAU,eACVC,GAAG,cACHJ,MAAO6H,EACPnH,SAAU,SAAAC,GAAC,OAAImH,EAAenH,EAAEC,OAAOZ,aAG/C,sBAAKG,UAAU,cAAf,UACI,0CACA,uBACIA,UAAU,eACVC,GAAG,WACHJ,MAAO+H,EACPrH,SAAU,SAAAC,GAAC,OAAIqH,EAAYrH,EAAEC,OAAOZ,aAG5C,sBAAKG,UAAU,cAAf,UACI,gDACA,uBACIA,UAAU,eACVC,GAAG,gBACHJ,MAAOiI,EACPvH,SAAU,SAAAC,GAAC,OAAIuH,EAAiBvH,EAAEC,OAAOZ,gBAIrD,sBAAKG,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,4CACA,wBACIA,UAAU,eACVC,GAAG,aACHJ,MAAOmI,EACPzH,SAAU,SAAAC,GAAC,OAAIyH,EAAczH,EAAEC,OAAOZ,QAJ1C,SAMK8I,QAGT,sBAAK3I,UAAU,cAAf,UACI,0CACA,uBACIA,UAAU,eACVK,KAAK,QACLJ,GAAG,WACHJ,MAAOqI,EACP3H,SAAU,SAAAC,GAAC,OAAI2H,EAAY3H,EAAEC,OAAOZ,gBAKhD,qBAAKG,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,0DACA,uBACIA,UAAU,eACVK,KAAK,MACLJ,GAAG,mBACHJ,MAAOuI,EACP7H,SAAU,SAAAC,GAAC,OAAI6H,EAAoB7H,EAAEC,OAAOZ,eAIxD,sBAAKG,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,iDACA,uBACIA,UAAU,eACVK,KAAK,MACLJ,GAAG,kBACHJ,MAAOyI,GACP/H,SAAU,SAAAC,GAAC,OAAI+H,GAAmB/H,EAAEC,OAAOZ,aAGnD,sBAAKG,UAAU,cAAf,UACI,0CACA,uBACIA,UAAU,eACVK,KAAK,MACLJ,GAAG,kBACHJ,MAAO2I,GACPjI,SAAU,SAAAC,GAAC,OAAIiI,GAAmBjI,EAAEC,OAAOZ,mBAK3D,sBAAKG,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QA5NS,WAAO,IAAD,EAEzBY,EAAO,CACT6F,QAASuB,EACTvC,QAAS,CAAC,CACN,KAAQuB,EACR,YAAeE,EACf,OAAUE,EACV,KAAQE,EACR,SAAYE,EACZ,MAASE,EACT,WAAcE,IAElBxB,cAAe,CAAC,CACZ,aAAgBgC,GAChB,KAAQF,EACR,QAAW,CACP,OAAU,QACV,MAASI,MAGjBpI,YAAa4G,GAGX9F,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,wBAAyB2C,UAAzC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACEA,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAN,4DAA6E,WAC7ElD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBAkK3B,oBAMA,wBACIhC,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6BCvUP+I,EAAW,SAAAzK,GAAU,IAAD,oBAE7B,EAAoCG,oBAAS,GAA7C,mBAAOmB,EAAP,KAAmB2F,EAAnB,KAEA,OACI,sBAAK1F,UAAU,mBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,wDAEJ,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,gBAAjB,SACI,kCACI,+BACI,sCACA,uCAAKvB,EAAMqC,YAAX,aAAK,EAAYkC,OACjB,qBAAI9C,QAAS,kBAAMwF,GAAc,IAAjC,UAAwC,mBAAG1F,UAAU,oBAArD,cAEJ,+BACI,wCACA,uCAAKvB,EAAMqC,YAAX,aAAK,EAAYqI,SACjB,0BAEJ,+BACI,gDACA,uCAAK1K,EAAMqC,YAAX,aAAK,EAAYsI,gBACjB,0BAEJ,+BACI,+CACA,uCAAK3K,EAAMqC,YAAX,aAAK,EAAYuI,YACjB,0BAEJ,+BACI,gDACA,uCAAK5K,EAAMqC,YAAX,iBAAK,EAAYwI,yBAAjB,aAAK,EAA+BC,eACpC,0BAEJ,+BACI,8CACA,8BAAK,UAAA9K,EAAMqC,YAAN,mBAAY0I,gBAAZ,eAAsBC,kBAAmB,OAC9C,0BAEJ,+BACI,+CACA,8BAAK,UAAAhL,EAAMqC,YAAN,mBAAY0I,gBAAZ,eAAsBE,mBAAoB,MAC/C,iCAMhB,cAAC,EAAD,CACI3J,WAAYA,EACZI,WAAY,kBAAMuF,GAAc,IAChCrE,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBkF,aAAcpI,EAAMoI,aACpB/F,KAAMrC,EAAMqC,WAOtB6I,EAAiB,SAAAlL,GAAU,IAAD,YAE5B,EAAwCG,mBAAS,QAAjD,mBAAOgL,EAAP,KAAqBC,EAArB,KACA,EAAsCjL,mBAAQ,UAACH,EAAMqC,KAAK0I,gBAAZ,aAAC,EAAqBC,iBAApE,mBAAOK,EAAP,KAAoBC,EAApB,KAEA,EAAgCnL,mBAAQ,UAACH,EAAMqC,YAAP,aAAC,EAAYkC,MAArD,mBAAOgH,EAAP,KAAiBC,EAAjB,KACA,EAAkCrL,mBAASH,EAAMqC,KAAKqI,QAAtD,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAAgDvL,mBAASH,EAAMqC,KAAKsI,eAApE,mBAAOgB,EAAP,KAAyBC,EAAzB,KACA,EAAwCzL,mBAASH,EAAMqC,KAAKuI,WAA5D,mBAAOiB,EAAP,KAAqBC,EAArB,KACA,EAAsC3L,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYwI,yBAAb,aAAC,EAA+BC,cAA9E,mBAAOiB,EAAP,KAAoBC,EAApB,KACA,EAA8C7L,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAY0I,gBAAb,aAAC,EAAsBE,kBAA7E,mBAAOgB,EAAP,KAAwBC,EAAxB,KAEAhL,qBAAU,WAEFkK,EADgB,QAAhBC,EACgB,QAEA,UAErB,CAACA,IAEJ,IAoDMpB,EAAgBjK,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAW0I,EAAhB,SACI,sBAAK1I,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,QAAQwC,MAAO,CAAEoC,MAAO,iBAAtC,UAAwD,mBAAG5E,UAAU,oBAArE,kCAEJ,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACA,6CACI,uBACIK,KAAK,OACLJ,GAAG,WACHJ,MAAOmK,EACPzJ,SAAU,SAAAC,GAAC,OAAIyJ,EAAYzJ,EAAEC,OAAOZ,QACpCG,UAAU,sBAItB,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,2CACA,yBACIA,UAAU,eACVC,GAAG,YACHJ,MAAOqK,EACP3J,SAAU,SAAAC,GAAC,OAAI2J,EAAa3J,EAAEC,OAAOZ,QAJzC,UAMI,wBAAQA,MAAM,KACd,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,0BAIR,sBAAKG,UAAU,cAAf,UACI,kDACA,uBACIK,KAAK,OACLJ,GAAG,eACHJ,MAAOyK,EACP/J,SAAU,SAAAC,GAAC,OAAI+J,EAAgB/J,EAAEC,OAAOZ,QACxCG,UAAU,uBAItB,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mDACA,yBACIA,UAAU,eACVC,GAAG,mBACHJ,MAAOuK,EACP7J,SAAU,SAAAC,GAAC,OAAI6J,EAAoB7J,EAAEC,OAAOZ,QAJhD,UAMI,wBAAQA,MAAM,KACd,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,0BAAd,2CAGR,sBAAKG,UAAU,cAAf,UACI,uDACA,yBACIA,UAAU,eACVC,GAAG,cACHJ,MAAO2K,EACPjK,SAAU,SAAAC,GAAC,OAAIiK,EAAejK,EAAEC,OAAOZ,QAJ3C,UAMI,wBAAQA,MAAM,KACd,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,4BAIZ,sBAAKG,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,iDACA,yBACIA,UAAU,eACVC,GAAG,gBACHJ,MAAOiK,EACPvJ,SAAU,SAAAC,GAAC,OAAIuJ,EAAevJ,EAAEC,OAAOZ,QAJ3C,UAMI,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,uBAGR,sBAAKG,UAAU,cAAcwC,MAAO,CAAEM,QAAS8G,GAA/C,UACI,kDACA,uBACIvJ,KAAK,OACLJ,GAAG,kBACHJ,MAAO6K,EACPnK,SAAU,SAAAC,GAAC,OAAImK,EAAmBnK,EAAEC,OAAOZ,QAC3CG,UAAU,0BAK1B,sBAAKA,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QA/JU,WAAO,IAAD,EAE1BY,EAAO,CACTkC,KAAMgH,EACNX,UAAWiB,EACXnB,OAAQe,EACRZ,kBAAmB,CACf,aAAgB,MAChB,aAAgBkB,GAEpB,SAAY,CACRf,gBAAiC,QAAhBK,EACjBJ,iBAAkBgB,GAEtBtB,cAAegB,GAGblJ,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,wBAAyB2C,UAAzC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACEA,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAN,4DAA6E,WAC7ElD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBA4G3B,oBAMA,wBACIhC,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6BCtPPyK,EAAU,SAAAnM,GAAU,IAAD,wBAE5B,EAAoCG,oBAAS,GAA7C,mBAAOmB,EAAP,KAAmB2F,EAAnB,KAEA,OACI,sBAAK1F,UAAU,mBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,mDAEJ,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,gBAAjB,SACI,kCACI,+BACI,2CACA,8BAAK,UAAAvB,EAAMqC,YAAN,eAAY+J,aAAc,KAA1B,UAAgCpM,EAAMqC,YAAtC,iBAAgC,EAAY+J,iBAA5C,aAAgC,EAAuBhL,MAAM,MAClE,qBAAIK,QAAS,kBAAMwF,GAAc,IAAjC,UAAwC,mBAAG1F,UAAU,oBAArD,cAEJ,+BACI,kEACA,6BAAKvB,EAAMqC,KAAKgK,uBAChB,0BAEJ,+BACI,6CACA,uCAAKrM,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBC,aACzB,0BAEJ,+BACI,wCACA,uCAAKvM,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBE,SACzB,0BAEJ,+BACI,wCACA,uCAAKxM,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBG,SACzB,0BAEJ,+BACI,qCACA,uCAAKzM,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBI,MACzB,0BAEJ,+BACI,iDACA,uCAAK1M,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBK,iBACzB,0BAEJ,+BACI,wCACA,uCAAK3M,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBM,SACzB,0BAEJ,+BACI,oCACA,uCAAK5M,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBO,KACzB,0BAEJ,+BACI,uCACA,uCAAK7M,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBQ,QACzB,0BAEJ,+BACI,mDACA,uCAAK9M,EAAMqC,KAAKiK,eAAhB,aAAK,EAAoBS,mBACzB,iCAKhB,cAAC,EAAD,CACIzL,WAAYA,EACZI,WAAY,kBAAMuF,GAAc,IAChCrE,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBb,KAAMrC,EAAMqC,KACZ+F,aAAcpI,EAAMoI,mBAM9B4E,EAAgB,SAAAhN,GAAU,IAAD,wCAE3B,EAAoCG,mBAAS,IAA7C,mBAAO8M,EAAP,KAAmBC,EAAnB,KACA,EAAwC/M,oBAAS,UAAAH,EAAMqC,YAAN,mBAAY+J,iBAAZ,eAAuBhL,MAAM,KAAM,IAApF,mBAAO+L,EAAP,KAAqBC,EAArB,KACA,EAA4CjN,mBAASH,EAAMqC,KAAKgK,sBAAhE,mBAAOgB,EAAP,KAAuBC,EAAvB,KAEA,EAAoCnN,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBC,YAAlE,mBAAOA,EAAP,KAAmBgB,EAAnB,KACA,EAA4BpN,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBE,QAA1D,mBAAOA,EAAP,KAAegB,EAAf,KACA,EAA4BrN,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBG,QAA1D,mBAAOA,EAAP,KAAegB,EAAf,KACA,EAA4BtN,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBM,QAA1D,mBAAOA,EAAP,KAAec,EAAf,KACA,EAA4CvN,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBK,gBAA1E,oBAAOA,GAAP,MAAuBgB,GAAvB,MACA,GAA0CxN,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBO,IAAxE,qBAAOe,GAAP,MAAsBC,GAAtB,MACA,GAA0B1N,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBQ,OAAxD,qBAAOA,GAAP,MAAcgB,GAAd,MACA,GAAgD3N,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBS,kBAA9E,qBAAOA,GAAP,MAAyBgB,GAAzB,MACA,GAAsB5N,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYiK,eAAb,aAAC,EAAqBI,KAApD,qBAAOA,GAAP,MAAYsB,GAAZ,MAEMC,GAAc,WAOhB,IACMC,GADYC,MAAMC,QAAQjB,GAAgBA,EAAakB,MAAM,KAAO,IAChDlE,KAAI,SAACC,EAAMC,GACjC,OACI,+BAAmBD,EAAKkE,QAAbjE,MAInB6C,EAAcgB,GAAW,uBAI7BhN,qBAAU,WACN+M,OACD,IAEH,IAqDMhE,GAAgBjK,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAW0I,GAAhB,SACI,sBAAK1I,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,QAAQwC,MAAO,CAAEoC,MAAO,iBAAtC,UAAwD,mBAAG5E,UAAU,oBAArE,6BAEJ,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,8CACA,uBACIC,GAAG,eACHD,UAAU,oBACVH,MAAO+L,EACPrL,SAAU,SAAAC,GACNqL,EAAgBrL,EAAEC,OAAOZ,OACP,KAAdW,EAAEE,SAAgBgM,MAE1BM,OAAQN,GACR9J,YAAY,iCAEhB,qBAAK5C,UAAU,aAAf,SAA6B0L,SAIrC,qBAAK1L,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,0DACA,yBACIA,UAAU,eACVC,GAAG,iBACHJ,MAAOiM,EACPvL,SAAU,SAAAC,GAAC,OAAIuL,EAAkBvL,EAAEC,OAAOZ,QAJ9C,UAMI,wBAAQA,MAAM,KACd,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,2BAIZ,sBAAKG,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,gDACA,yBACIC,GAAG,aACHD,UAAU,eACVH,MAAOmL,EACPzK,SAAU,SAAAC,GAAC,OAAIwL,EAAcxL,EAAEC,OAAOZ,QAJ1C,UAMI,wBAAQA,MAAM,KACd,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGR,sBAAKG,UAAU,cAAf,UACI,2CACA,uBACIC,GAAG,SACHD,UAAU,eACVH,MAAOoL,EACP1K,SAAU,SAAAC,GAAC,OAAIyL,EAAUzL,EAAEC,OAAOZ,aAG1C,sBAAKG,UAAU,cAAf,UACI,2CACA,uBACIC,GAAG,SACHD,UAAU,eACVH,MAAOqL,EACP3K,SAAU,SAAAC,GAAC,OAAI0L,EAAU1L,EAAEC,OAAOZ,gBAI9C,sBAAKG,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,wCACA,uBACIC,GAAG,MACHD,UAAU,eACVH,MAAOsL,GACP5K,SAAU,SAAAC,GAAC,OAAIiM,GAAOjM,EAAEC,OAAOZ,aAGvC,sBAAKG,UAAU,cAAf,UACI,oDACA,uBACIC,GAAG,iBACHD,UAAU,eACVH,MAAOuL,GACP7K,SAAU,SAAAC,GAAC,OAAI4L,GAAkB5L,EAAEC,OAAOZ,aAGlD,sBAAKG,UAAU,cAAf,UACI,2CACA,uBACIC,GAAG,SACHD,UAAU,eACVH,MAAOwL,EACP9K,SAAU,SAAAC,GAAC,OAAI2L,EAAU3L,EAAEC,OAAOZ,gBAI9C,sBAAKG,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uCACA,uBACIC,GAAG,gBACHD,UAAU,eACVH,MAAOwM,GACP9L,SAAU,SAAAC,GAAC,OAAI8L,GAAiB9L,EAAEC,OAAOZ,aAGjD,sBAAKG,UAAU,cAAf,UACI,0CACA,uBACIC,GAAG,QACHD,UAAU,eACVH,MAAO0L,GACPhL,SAAU,SAAAC,GAAC,OAAI+L,GAAS/L,EAAEC,OAAOZ,aAGzC,sBAAKG,UAAU,cAAf,UACI,sDACA,uBACIC,GAAG,mBACHD,UAAU,eACVH,MAAO2L,GACPjL,SAAU,SAAAC,GAAC,OAAIgM,GAAoBhM,EAAEC,OAAOZ,mBAK5D,sBAAKG,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QArMS,WAAO,IAAD,EAEzBY,EAAO,CACT+J,UAAW,CAAEhL,MAAO,CAAC+L,IACrBb,QAAS,CACL,WAAcC,EACd,OAAUC,EACV,OAAUC,EACV,IAAOC,GACP,eAAkBC,GAClB,OAAUC,EACV,GAAMgB,GACN,MAASd,GACT,iBAAoBC,IAExBV,qBAAsBgB,GAGpB5K,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,wBAAyB2C,UAAzC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACEA,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAN,4DAA6E,WAC7ElD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBAiJ3B,oBAMA,wBACIhC,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6B,OCnUP8M,EAAc,SAAAxO,GAEvB,IAWIyO,EACAC,EAZEC,EAAc3O,EAAMiE,IAGpB2K,EAAiBD,EAAYE,WAAWC,QAAQ,QAAU,EAAI,MAAQ,QAEtEC,EAAc/O,EAAMgP,gBACpB,sCACA,iCAOY,QAJAJ,GAKdF,EAAiB,kBACjBD,EAAwB,2BAGxBC,EAAiB,yBACjBD,EAAwB,mBAO5B,OACI,sBAAKlN,UAAWwN,EAAhB,UACI,qBAAKxN,UAAWkN,EAAhB,SACI,sBAAKlN,UAAU,eAAf,UACI,sBAAMA,UAAU,QAAhB,kBACA,qBACIC,GAAG,aACH6E,IAAI,GACJpC,IAAK0K,SAIjB,qBAAKpN,UAAWmN,EAAhB,SACI,uBACIzK,IAAK0K,EACLvJ,MAAM,OACNoH,OAAO,UAGf,uBACA,sBAAKjL,UAAU,eAAf,UACI,wBACA,wBACIA,UAAU,WACVC,GAAG,WACHC,QA7BA,WACZzB,EAAMiP,iBAAgB,IA6BVlL,MAAO,CAAEqB,MAAO,KAJpB,0BClDH8J,EAAe,SAACC,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAApF,GAAK,OAAI8E,EAAO9E,QCH5BqF,EAA0B,SAAA7P,GAAU,IAAD,EAE5C,EAAwDG,mBAASH,EAAMqC,KAAKyN,oBAAX,UAAgC9P,EAAMqC,YAAtC,aAAgC,EAAYyN,kBAAkB,KAA/H,mBAAOC,EAAP,KAA6BC,EAA7B,KACA,EAAwC7P,mBAAS,IAAjD,mBAAO8P,EAAP,KAAqBC,EAArB,KACA,EAAgD/P,mBAAS,IAAzD,mBAAOgQ,EAAP,KAAyBC,EAAzB,KACA,EAAgEjQ,mBAAS,IAAzE,mBAAOkQ,EAAP,KAAiCC,EAAjC,KAyEMrG,EAAgBjK,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAW0I,EAAhB,SACI,sBAAK1I,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,QAAQwC,MAAO,CAAEoC,MAAO,iBAAtC,UAAyD,mBAAG5E,UAAU,oBAAtE,oCAEJ,qBAAKA,UAAU,cAAcwC,MAAO,CAAEkB,aAAc,QAApD,SAEI,sBACI1D,UAAU,WACVwC,MAAO,CAAE0C,OAAQ,oBAAqB8J,aAAc,MAAOC,QAAS,QAFxE,UAGI,wBACIzM,MAAO,CAAE0M,UAAW,oBAAqBtK,MAAO,QADpD,UAEI,mBAAG5E,UAAU,iBAFjB,uCAIA,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,cAAf,UACI,0EACA,yBACIC,GAAG,eACHJ,MAAO6O,EACP1O,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAImO,EAAgBnO,EAAEC,OAAOZ,QAJ5C,UAMI,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,yBAKZ,sBAAKG,UAA4B,QAAjB0O,EAAyB,aAAe,SAAxD,UACA,sBAAK1O,UAAU,cAAf,UACQ,mDACA,uBACIC,GAAG,mBACHJ,MAAO+O,EACP5O,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAIqO,EAAoBrO,EAAEC,OAAOZ,QAC5CQ,KAAK,YAGb,sBAAKL,UAAU,cAAf,UACI,kEACA,uBACIC,GAAG,uBACHM,SAAU,kBAxEhB,WAAO,IAAD,EAEtB4O,EAAaxO,SAASyO,cAAc,yBAE1C,IAAc,OAAVD,QAAU,IAAVA,GAAA,UAAAA,EAAYE,MAAM,UAAlB,eAAsBC,MAAO,OAG7B,OAFA7Q,EAAMkD,UAAU,uCAAwC,oBACxDwN,EAAWE,MAAQ,OAIvB,OAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAYE,MAAM,IAElB1B,aAAY,OAACwB,QAAD,IAACA,OAAD,EAACA,EAAYE,MAAM,IAC1B9N,MAAK,SAAAC,GACFiN,EAAwBjN,EAAS8L,eAEpCpL,OAAM,SAAAC,GACH1D,EAAMkD,UAAUQ,MAIxBoN,yBAAyB,IAmDeC,IAChBxP,UAAU,eACVyP,OAAO,OACPpP,KAAK,eAIjB,qBAAKL,UAA4B,QAAjB0O,EAAyB,WAAa,SAAtD,SACI,sBAAK1O,UAAU,cAAf,UACI,2DACA,0BACIC,GAAG,2BACHJ,MAAOiP,EACP9O,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAIuO,EAA4BvO,EAAEC,OAAOZ,QACpDQ,KAAK,mBAMzB,sBAAKL,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QA/IY,WAAO,IAAD,EAC5BY,EAAO,CACTyN,kBAAmB,CAAC,CAChB1O,MAAO6O,EACPgB,WAAYd,EACZe,YAAab,EACbc,QAASpB,GAAwB,MAKnCtN,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,wBAAyB2C,UAAzC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACEA,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAN,4DAA6E,WAC7ElD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBAkG3B,oBAMA,wBACIhC,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6BCtJP0P,EAAiB,SAACpR,GAE3B,MAAoCG,oBAAS,GAA7C,mBAAOmB,EAAP,KAAmB2F,EAAnB,KACA,EAA8D9G,oBAAS,GAAvE,mBAAOkR,EAAP,KAAgCC,EAAhC,KACA,EAA8CnR,oBAAS,GAAvD,mBAAOoR,EAAP,KAAwBC,EAAxB,KACA,EAAsCrR,mBAAS,IAA/C,mBAAOwO,EAAP,KAAoB8C,EAApB,KAEA,OACI,sBAAKlQ,UAAU,mBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,mDAEJ,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,gBAAjB,SACI,kCACI,+BACI,qDACA,6BAAMvB,EAAMqC,KAAKqP,mBAAmB5J,OAAS,GAAK,wBAC9CvG,UAAU,WACVE,QAAS,WACLgQ,EAAezR,EAAMqC,KAAKqP,oBAC1BF,GAAmB,IAJuB,sBAM5B,MACtB,qBAAI/P,QAAS,kBAAMwF,GAAc,IAAjC,UAAwC,mBAAG1F,UAAU,oBAArD,cAEJ,+BACI,mDACA,6BAAMvB,EAAMqC,KAAKsP,gBAAgB7J,OAAS,GAAK,wBAC3CvG,UAAU,WACVE,QAAS,WACLgQ,EAAezR,EAAMqC,KAAKsP,iBAC1BH,GAAmB,IAJoB,sBAMzB,MACtB,0BAEJ,+BACI,oDACA,6BAAMxR,EAAMqC,KAAKyN,kBAAkBhI,OAAS,GAAK,wBAC7CvG,UAAU,WACVE,QAAS,WACLgQ,EAAezR,EAAMqC,KAAKyN,mBAC1B0B,GAAmB,IAJsB,sBAM3B,MACtB,qBAAI/P,QAAS,kBAAM6P,GAA2B,IAA9C,UAAqD,mBAAG/P,UAAU,oBAAlE,qBAOhB,cAAC,EAAD,CACID,WAAYA,EACZI,WAAY,kBAAMuF,GAAc,IAChCrE,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBb,KAAMrC,EAAMqC,KACZoP,eAAgBA,EAChBrJ,aAAcpI,EAAMoI,aACpBoJ,mBAAoBA,IAGxB,cAAC,EAAD,CACIlQ,WAAY+P,EACZ3P,WAAY,kBAAM4P,GAA2B,IAC7C1O,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBb,KAAMrC,EAAMqC,KACZoP,eAAgBA,EAChBrJ,aAAcpI,EAAMoI,aACpBoJ,mBAAoBA,IAGvBD,GACG,cAAC,EAAD,CACIK,iBAAiB,MACjB3N,IAAK0K,EACLK,gBAAiBuC,EACjBM,OAAO,EACP5C,gBAAiB,kBAAMuC,GAAmB,UAOxDM,EAAuB,SAAA9R,GAAU,IAAD,kBAClC,EAA0DG,oBAAS,UAAAH,EAAMqC,KAAKqP,0BAAX,eAA+BP,UAA/B,sBAA8CnR,EAAMqC,KAAKqP,0BAAzD,aAA8C,EAA+BP,UAAhJ,mBAAOY,EAAP,KAA8BjB,EAA9B,KACA,EAAoD3Q,mBAASH,EAAMqC,KAAKsP,kBAAX,UAA8B3R,EAAMqC,YAApC,aAA8B,EAAYsP,gBAAgB,KAAvH,mBAAOK,EAAP,KAA2BC,EAA3B,KAEA,EAAgD9R,oBAAS,UAAAH,EAAMqC,YAAN,mBAAYqP,0BAAZ,eAAgCT,aAAc,IAAvG,mBAAOd,EAAP,KAAyBC,EAAzB,KACA,EAAoDjQ,oBAAS,UAAAH,EAAMqC,YAAN,mBAAYqP,0BAAZ,eAAgCtQ,OAAQ,MAAQ,MAA7G,mBAAO8Q,EAAP,KAA2BC,EAA3B,KACA,EAAgEhS,oBAAS,UAAAH,EAAMqC,YAAN,mBAAYqP,0BAAZ,eAAgCR,cAAe,IAAxH,mBAAOb,EAAP,KAAiCC,EAAjC,KAgDMS,EAAoB,SAACqB,GAAS,IAAD,MAE3B1B,EAgBsB,EAN1B,IAAc,QAAV,EAPAA,EADQ,SAAR0B,EACalQ,SAASyO,cAAc,0BACrB,OAARyB,EACMlQ,SAASyO,cAAc,yBAEvBzO,SAASyO,cAAc,8BAGpC,mBAAYC,MAAM,UAAlB,eAAsBC,MAAO,OAG7B,OAFA7Q,EAAMkD,UAAU,uCAAwC,oBACxDwN,EAAWE,MAAQ,OAIvB,UAAIF,SAAJ,aAAI,EAAYE,MAAM,IAElB1B,EAAY,UAACwB,SAAD,aAAC,EAAYE,MAAM,IAC1B9N,MAAK,SAAAC,GACF,OAAQqP,GACJ,IAAK,OACDtB,EAAyB/N,EAAS8L,YAClC,MACJ,IAAK,KACDmB,wBAAwBjN,EAAS8L,YACjC,MACJ,QACIoD,EAAsBlP,EAAS8L,gBAI1CpL,OAAM,SAAAC,GACH1D,EAAMkD,UAAUQ,MAIxBoN,EAAyB,KAI3B7G,EAAgBjK,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAW0I,EAAhB,SACI,sBAAK1I,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,QAAQwC,MAAO,CAAEoC,MAAO,iBAAtC,UAAyD,mBAAG5E,UAAU,oBAAtE,6BAEJ,sBAAKA,UAAU,cAAcwC,MAAO,CAAEkB,aAAc,QAApD,UAEI,sBAAK1D,UAAU,WAAWwC,MAAO,CAAE0C,OAAQ,oBAAqB8J,aAAc,MAAOC,QAAS,QAA9F,UACI,wBAAOzM,MAAO,CAAE0M,UAAW,oBAAqBtK,MAAO,QAAvD,UAAiE,mBAAG5E,UAAU,iBAA9E,0BACA,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,cAAf,UACI,gFACA,yBACIC,GAAG,qBACHJ,MAAO8Q,EACP3Q,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAIoQ,EAAsBpQ,EAAEC,OAAOZ,QAJlD,UAMI,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,yBAKZ,sBAAKG,UAAkC,QAAvB2Q,EAA+B,aAAe,SAA9D,UACA,sBAAK3Q,UAAU,cAAf,UACQ,mDACA,uBACIC,GAAG,mBACHJ,MAAO+O,EACP5O,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAIqO,EAAoBrO,EAAEC,OAAOZ,QAC5CQ,KAAK,YAGb,sBAAKL,UAAU,cAAf,UACI,2DACA,uBACIC,GAAG,wBACHM,SAAU,kBAAMiP,EAAkB,SAClCxP,UAAU,eACVyP,OAAO,OACPpP,KAAK,eAIjB,qBAAKL,UAAkC,QAAvB2Q,EAA+B,WAAa,SAA5D,SACI,sBAAK3Q,UAAU,cAAf,UACI,2DACA,0BACIC,GAAG,2BACHJ,MAAOiP,EACP9O,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAIuO,EAA4BvO,EAAEC,OAAOZ,QACpDQ,KAAK,iBAQrB,qBAAKL,UAAU,gBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,4DACA,uBACIC,GAAG,qBACHM,SAAU,kBAAMiP,EAAkB,SAClCxP,UAAU,eACVyP,OAAO,OACPpP,KAAK,iBAOrB,sBAAKL,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QA7KgB,WAAO,IAAD,EAChCY,EAAO,CACTqP,mBAAoB,CAAC,CACjBtQ,MAA8B,QAAvB8Q,EACPjB,WAAYd,EACZe,YAAab,EACbc,QAASY,GAAyB,KAEtCJ,gBAAiB,CAACK,IAGhBvP,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,wBAAyB2C,UAAzC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACEA,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAN,4DAA6E,WAC7ElD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBAgI3B,oBAMA,wBACIhC,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6BCnRP2Q,EAAY,SAAArS,GAAU,IAAD,gBAE9B,EAAoCG,oBAAS,GAA7C,mBAAOmB,EAAP,KAAmB2F,EAAnB,KAEA,OACI,sBAAK1F,UAAU,mBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,6CAEJ,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,gBAAjB,SACI,kCACI,+BACI,+CACA,uCAAKvB,EAAMqC,YAAX,iBAAK,EAAYiQ,iBAAjB,aAAK,EAAuBC,gBAC5B,qBAAI9Q,QAAS,kBAAMwF,GAAc,IAAjC,UAAwC,mBAAG1F,UAAU,oBAArD,cAEJ,+BACI,qDACA,uCAAKvB,EAAMqC,YAAX,iBAAK,EAAYiQ,iBAAjB,aAAK,EAAuBE,qBAC5B,0BAEJ,+BACI,gDACA,uCAAKxS,EAAMqC,YAAX,iBAAK,EAAYiQ,iBAAjB,aAAK,EAAuBG,gBAC5B,0BAEJ,+BACI,iDACA,uCAAKzS,EAAMqC,YAAX,iBAAK,EAAYiQ,iBAAjB,aAAK,EAAuBI,iBAC5B,iCAMhB,cAAC,EAAD,CACIpR,WAAYA,EACZI,WAAY,kBAAMuF,GAAc,IAChCrE,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBb,KAAMrC,EAAMqC,KACZ+F,aAAcpI,EAAMoI,mBAO9BuK,EAAkB,SAAA3S,GAAU,IAAD,QAE7B,EAAgDG,mBAAQ,UAACH,EAAMqC,KAAKiQ,iBAAZ,aAAC,EAAsBC,eAA/E,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAoC1S,mBAAQ,UAACH,EAAMqC,KAAKiQ,iBAAZ,aAAC,EAAsBE,oBAAnE,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAgD5S,mBAAQ,UAACH,EAAMqC,KAAKiQ,iBAAZ,aAAC,EAAsBG,eAA/E,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAAkD9S,mBAAQ,UAACH,EAAMqC,KAAKiQ,iBAAZ,aAAC,EAAsBI,gBAAjF,mBAAOQ,EAAP,KAA0BC,EAA1B,KA+CMlJ,EAAgBjK,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAW0I,EAAhB,SACI,sBAAK1I,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,QAAQwC,MAAO,CAAEoC,MAAO,iBAAtC,UAAyD,mBAAG5E,UAAU,oBAAtE,6BAEJ,sBAAKA,UAAU,cAAcwC,MAAO,CAAEkB,aAAc,QAApD,UACI,sBAAK1D,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mDACA,yBACIC,GAAG,mBACHJ,MAAOwR,EACPrR,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAI8Q,EAAoB9Q,EAAEC,OAAOZ,QAJhD,UAMI,wBAAQA,MAAM,GAAd,oBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,wBAAd,mCACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,SAA0B,mBAGlC,sBAAKG,UAAU,cAAf,UACI,wDACA,yBACIC,GAAG,aACHJ,MAAO0R,EACPvR,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAIgR,EAAchR,EAAEC,OAAOZ,QAJ1C,UAMI,wBAAQA,MAAM,GAAd,oBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,4BAMZ,sBAAKG,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mDACA,yBACIC,GAAG,mBACHJ,MAAO4R,EACPzR,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAIkR,EAAoBlR,EAAEC,OAAOZ,QAJhD,UAMI,wBAAQA,MAAM,GAAd,oBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,6BAAd,wCACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,uBAAd,wCAIR,sBAAKG,UAAU,cAAf,UACI,oDACA,yBACIC,GAAG,oBACHJ,MAAO8R,EACP3R,UAAU,eACVO,SAAU,SAAAC,GAAC,OAAIoR,EAAqBpR,EAAEC,OAAOZ,QAJjD,UAMI,wBAAQA,MAAM,GAAd,oBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,QAAd,+BAUhB,sBAAKG,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QAtIW,WAAO,IAAD,EAC3BY,EAAO,CACTiQ,UAAW,CACP,cAAiBM,EACjB,mBAAsBE,EACtB,cAAiBE,EACjB,eAAkBE,IAIpBzQ,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,wBAAyB2C,UAAzC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACEA,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAN,4DAA6E,WAC7ElD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBA0F3B,oBAMA,wBACIhC,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6BC0GL0R,EAnSE,SAAApT,GAAU,IAAD,QAEtB,EAAwCG,mBAAS,IAAjD,mBAAOkT,EAAP,KAAqBC,EAArB,KACA,EAAsCnT,mBAAS,GAA/C,mBAAO2G,EAAP,KAAoBC,EAApB,KACA,EAAkC5G,oBAAS,GAA3C,mBAAOoT,EAAP,KAAkBnL,EAAlB,KACA,EAAoCjI,mBAAS,IAA7C,mBAAOqT,EAAP,KAAmBC,EAAnB,KACA,EAA8BtT,qBAA9B,mBAAOuT,EAAP,KAAgBC,EAAhB,KACA,EAAkDxT,oBAAS,GAA3D,mBAAOyT,EAAP,KAA0BC,EAA1B,KAGMC,EAAU3Q,eAAeoH,QAAQ,UACjCwJ,EAAS,CACX,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2B5Q,eAAeoH,QAAQ,WAEtD,OAAU,OAGRyJ,EAAaC,mBAenB/S,qBAAU,WACN,IAAMgT,EAAWhS,SAASyO,cAAc,qBAClCwD,EAAYjS,SAASC,eAAe,cAyB1C,OAvBA+R,EAASE,iBAAiB,YAAY,SAAArS,GAElCA,EAAEsS,oBAGNH,EAASE,iBAAiB,QAAQ,SAAArS,GAC9BA,EAAEsS,iBAEF,IAAIzD,EAAQ7O,EAAEuS,aAAa1D,MAC3BuD,EAAUvD,MAAQA,EAClB,IAAMzB,EAAOgF,EAAUvD,MAAM,GAE7B1B,EAAaC,GACRrM,MAAK,SAAAC,GACF4Q,EAAW5Q,EAAS8L,YACpB4E,EAActE,EAAK5K,SAEtBd,OAAM,SAAAC,GACH1D,EAAMkD,UAAUQ,EAAK,qBAK1B,WAEHwQ,EAASK,oBAAoB,YAAY,SAAAxS,GAErCA,EAAEsS,oBAGNH,EAASK,oBAAoB,QAAQ,SAAAxS,GACjCA,EAAEsS,iBAEF,IAAIzD,EAAQ7O,EAAEuS,aAAa1D,MAC3BuD,EAAUvD,MAAQA,EAClB4D,QAAQC,IAAR,gBAAqB7D,EAAM9I,OAA3B,iBAKT,IAQH5G,qBAAU,WAENlB,EAAM4C,oBAAmB,GAEzB2Q,GAAa3N,YAAW,WAAO,IAAD,EAE1B5F,EAAM4C,oBAAmB,GAEzB,UAAAC,MAAM/C,EAAU,gBAAkBgU,EAASC,UAA3C,SACMjR,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC5BF,MAAK,SAAA4R,GACF1U,EAAM4C,oBAAmB,GAEF,MAAnB8R,EAAIzR,YACJqQ,EAAgBoB,EAAIrS,MAGpBQ,MAAM6R,EAAIrS,KAAKsS,MAAO,CAAEhN,OAAQ,QAC3B7E,MAAK,SAAAC,GAAc,OAxBvB6R,EAwB0C7R,EAvBpD8R,OAAOC,QAAQF,GAAKG,QAAO,SAACC,EAAD,GAAoB,IAAD,mBAAZC,EAAY,KAAT7C,EAAS,KACjD,MAAM,GAAN,OAAU4C,GAAV,OAAgBC,EAAhB,aAAsB7C,EAAtB,QACD,IAHP,IAAqBwC,KAyBI9R,MAAK,SAAAC,GACF4Q,EAAW5Q,GACXyR,QAAQC,IAAI1R,MAEfU,OAAM,SAAA+G,GACH0K,MAAM1K,OAIdxK,EAAMkD,UAAUwR,EAAIlR,QAAS,kBAIpCC,OAAM,SAAAC,GACH1D,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUQ,EAAIF,QAAS,kBAIrC4E,GAAa,KAEd,KAEHpI,EAAM4C,oBAAmB,KAE1B,CAAC2Q,IA6CJ,OACI,gCACI,cAAC,EAAD,IAEA,sBAAKhS,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBACI0C,IAAKyP,GAAW,wBAChBtO,MAAM,OACNoH,OAAO,WAGf,qBAAKjL,UAAU,iBAAf,SACI,+BAAI,mBAAGA,UAAU,yBAAjB,eAEJ,sBAAKA,UAAU,mCAAf,UACI,yBAAQA,UAAU,sBAAlB,UACI,uBACIK,KAAK,OACL2C,KAAK,aACL/C,GAAG,aACHwP,OAAQ,oBACRlP,SAjLP,SAAAC,GACjB,IAAMoN,EAAOpN,EAAEC,OAAO4O,MAAM,GAE5B1B,EAAaC,GACRrM,MAAK,SAAAC,GACF4Q,EAAW5Q,EAAS8L,YACpB4E,EAActE,EAAK5K,SAEtBd,OAAM,SAAAC,GACH8Q,QAAQC,IAAI/Q,SAkKJ,+BAUA,kCAAO,mDAA6B8P,QAExC,qBAAKjS,UAAU,aAAf,SACI,yBACIA,UAAWmS,EAAU,WAAa,SAClClS,GAAG,eACHC,QA5EF,WAAO,IAAD,EAGlBY,EAAO,CACT,MAASqR,GAGPjR,EAAU,CACZ,OAAU,MACV,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,YAI1DvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,wBAAyB2C,UAAzC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACF/C,EAAM4C,oBAAmB,GACrBG,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAN,4DAA6E,WAG7EkF,GAAa,GACb4L,EAAWmB,QAAUzB,GAGrB1T,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBAkCvB,UAII,mBAAGjC,UAAU,uBAJjB,kCASR,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6BAAK8R,EAAa9O,OAClB,qBAAIhD,UAAU,SAAd,UAAuB,mBAAGA,UAAU,0BAA4B,UAAAvB,EAAMqC,YAAN,eAAY6E,WAAZ,UAAuBlH,EAAMqC,KAAK6E,QAAQ,UAA1C,aAAuB,EAAuBG,MAA9G,MAAsH,UAAArH,EAAMqC,YAAN,eAAY6E,WAAZ,UAAuBlH,EAAMqC,KAAK6E,QAAQ,UAA1C,aAAuB,EAAuBI,aAGxK,sBAAK/F,UAAU,uBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,+BAAI,mBAAGA,UAAU,yBAAjB,4BAEHqS,EAAoB,sBAAKrS,UAAU,cAAf,UACjB,sBAAKA,UAAU,UAAf,UACI,qDACA,2CACA,+BAAI,mBAAGA,UAAU,kBAAjB,sBAEJ,qBAAK0C,IAAI,6BAEP,8BACE,wBACI1C,UAAU,WACVE,QAAS,WACLyT,MAAM,2CACNrB,GAAqB,IAJ7B,yCAYZ,cAAC,EAAD,CACI/M,YAAaA,EACbC,eAAgBA,IAGH,IAAhBD,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMgR,EACNnQ,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,mBAC1B0Q,gBAAiBA,IAEJ,IAAhBxM,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMgR,EACNnQ,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,mBAC1B0Q,gBAAiBA,IAEJ,IAAhBxM,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMgR,EACNnQ,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,mBAC1B0Q,gBAAiBA,IAEJ,IAAhBxM,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMgR,EACNnQ,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,mBAC1B0Q,gBAAiBA,IAEJ,IAAhBxM,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMgR,EACNnQ,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,mBAC1B0Q,gBAAiBA,cCrS5B8B,EAAoB,SAACpV,GAE9B,OACI,sBAAKuB,UAAU,gBAAf,UACI,sBACIA,UAAiC,IAAtBvB,EAAM8G,YAAoB,aAAe,MACpDrF,QAAS,kBAAMzB,EAAM+G,eAAe,IAFxC,UAII,mBAAGxF,UAAU,mBAJjB,cAMA,sBACIA,UAAiC,IAAtBvB,EAAM8G,YAAoB,aAAe,MACpDrF,QAAS,kBAAMzB,EAAM+G,eAAe,IAFxC,UAII,mBAAGxF,UAAU,sBAJjB,aAMA,sBACIA,UAAiC,IAAtBvB,EAAM8G,YAAoB,aAAe,MACpDrF,QAAS,kBAAMzB,EAAM+G,eAAe,IAFxC,UAII,mBAAGxF,UAAU,mBAJjB,mBCdCkJ,EAAW,SAAAzK,GAAU,IAAD,UAE7B,EAAoCG,oBAAS,GAA7C,mBAAOmB,EAAP,KAAmB2F,EAAnB,KAEA,OACI,sBAAK1F,UAAU,mBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,wDAEJ,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,gBAAjB,SACI,kCACI,+BACI,sCACA,uCAAKvB,EAAMqC,YAAX,aAAK,EAAYkC,OACjB,qBAAI9C,QAAS,kBAAMwF,GAAc,IAAjC,UAAwC,mBAAG1F,UAAU,oBAArD,cAEJ,+BACI,wCACA,uCAAKvB,EAAMqC,YAAX,aAAK,EAAYqI,SACjB,0BAEJ,+BACI,+CACA,uCAAK1K,EAAMqC,YAAX,aAAK,EAAYuI,YACjB,0BAEJ,+BACI,gDACA,uCAAK5K,EAAMqC,YAAX,iBAAK,EAAYwI,yBAAjB,aAAK,EAA+BC,eACpC,iCAOhB,cAAC,EAAD,CACIxJ,WAAYA,EACZI,WAAY,kBAAMuF,GAAc,IAChCrE,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBkF,aAAcpI,EAAMoI,aACpB/F,KAAMrC,EAAMqC,WAOtB6I,EAAiB,SAAAlL,GAAU,IAAD,MAE5B,EAAgCG,mBAAQ,UAACH,EAAMqC,YAAP,aAAC,EAAYkC,MAArD,mBAAOgH,EAAP,KAAiBC,EAAjB,KACA,EAAkCrL,mBAASH,EAAMqC,KAAKqI,QAAtD,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAAwCvL,mBAASH,EAAMqC,KAAKuI,WAA5D,mBAAOiB,EAAP,KAAqBC,EAArB,KACA,EAAsC3L,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYwI,yBAAb,aAAC,EAA+BC,cAA9E,mBAAOiB,EAAP,KAAoBC,EAApB,KAkDM/B,EAAgBjK,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAW0I,EAAhB,SACI,sBAAK1I,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,aAAd,UAA2B,mBAAGA,UAAU,oBAAxC,kCAEJ,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACA,6CACI,uBACIK,KAAK,OACLJ,GAAG,WACHJ,MAAOmK,EACPzJ,SAAU,SAAAC,GAAC,OAAIyJ,EAAYzJ,EAAEC,OAAOZ,QACpCG,UAAU,sBAItB,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,2CACA,yBACIA,UAAU,eACVC,GAAG,YACHJ,MAAOqK,EACP3J,SAAU,SAAAC,GAAC,OAAI2J,EAAa3J,EAAEC,OAAOZ,QAJzC,UAMI,wBAAQA,MAAM,KACd,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,0BAIR,sBAAKG,UAAU,cAAf,UACI,kDACA,uBACIK,KAAK,OACLJ,GAAG,eACHJ,MAAOyK,EACP/J,SAAU,SAAAC,GAAC,OAAI+J,EAAgB/J,EAAEC,OAAOZ,QACxCG,UAAU,uBAItB,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uDACA,yBACIA,UAAU,eACVC,GAAG,cACHJ,MAAO2K,EACPjK,SAAU,SAAAC,GAAC,OAAIiK,EAAejK,EAAEC,OAAOZ,QAJ3C,UAMI,wBAAQA,MAAM,KACd,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,8BAMhB,sBAAKG,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QApHU,WAAO,IAAD,EAE1BY,EAAO,CACTkC,KAAMgH,EACNX,UAAWiB,EACXnB,OAAQe,EACRZ,kBAAmB,CACf,aAAgB,MAChB,aAAgBkB,IAIlBtJ,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,uBAAwB2C,UAAxC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACF/C,EAAM4C,oBAAmB,GACrBG,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAU,qBAAsB,WACtClD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBAqE3B,oBAMA,wBACIhC,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6BChLPsF,EAAU,SAAChH,GAAW,IAAD,EAE9B,EAAoCG,oBAAS,GAA7C,mBAAOmB,EAAP,KAAmB2F,EAAnB,KAEA,OACI,qCACI,sBAAK1F,UAAU,mBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,uDAEJ,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,gBAAjB,SACI,kCACI,+BACI,uCACA,uCAAKvB,EAAMqC,YAAX,aAAK,EAAYV,cACjB,qBAAIF,QAAS,kBAAMwF,GAAc,IAAjC,UAAwC,mBAAG1F,UAAU,oBAArD,cAEJ,+BACI,yCACA,6BAAKvB,EAAMqC,KAAK6E,UAChB,0BAEJ,+BACI,wCACA,6BAAKlH,EAAMqC,KAAKgT,eAChB,oCAOpB,cAAC,EAAD,CACI/T,WAAYA,EACZI,WAAY,kBAAMuF,GAAc,IAChCrE,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBb,KAAMrC,EAAMqC,KACZ+F,aAAcpI,EAAMoI,mBAM9BC,EAAgB,SAAArI,GAAU,IAAD,EAE3B,EAAgCG,mBAASH,EAAMqC,KAAKV,aAApD,mBAAO4G,EAAP,KAAiBC,EAAjB,KACA,EAAoCrI,mBAASH,EAAMqC,KAAK6E,QAAX,YAAyBlH,EAAMqC,KAAK6E,SAAW,IAA5F,mBAAOoO,EAAP,KAAmBC,EAAnB,KACA,EAAgCpV,mBAAQ,UAACH,EAAMqC,YAAP,aAAC,EAAYgT,cAArD,mBAAO5L,EAAP,KAAiBC,EAAjB,KA8CMO,EAAgBjK,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAW0I,EAAhB,SACI,sBAAK1I,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,aAAd,UAA2B,mBAAGA,UAAU,qBAAxC,6BAEJ,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,0CACA,uBACIC,GAAG,WACHJ,MAAOmH,EACPzG,SAAU,SAAAC,GAAC,OAAIyG,EAAYzG,EAAEC,OAAOZ,QACpCG,UAAU,eACVK,KAAK,aAIjB,qBAAKL,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,4CACA,0BACIC,GAAG,aACHJ,MAAOkU,EACPxT,SAAU,SAAAC,GAAC,OAAIwT,EAAcxT,EAAEC,OAAOZ,QACtCkJ,KAAM,EACN/I,UAAU,sBAItB,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,0CACA,uBACIC,GAAG,WACHJ,MAAOqI,EACP3H,SAAU,SAAAC,GAAC,OAAI2H,EAAY3H,EAAEC,OAAOZ,QACpCG,UAAU,eACVK,KAAK,kBAMrB,sBAAKL,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QAAS,kBA/FP,WAAO,IAAD,EAClBY,EAAO,CACT6E,QAAS,CAACoO,GACVD,aAAc5L,EACd9H,YAAa4G,GAGX9F,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,uBAAwB2C,UAAxC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACF/C,EAAM4C,oBAAmB,GAErBG,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAU,qBAAsB,WACtClD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,kBAuDRgS,IAHnB,oBAMA,wBACIhU,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6BCrJP+T,EAAY,SAACzV,GAAW,IAAD,oBAEhC,EAAoCG,oBAAS,GAA7C,mBAAOmB,EAAP,KAAmB2F,EAAnB,KACMyO,EAAiB1V,EAAMqC,KAAKqT,eAAeC,cAA1B,oBACd3V,EAAMqC,YADQ,iBACd,EAAYqT,sBADE,aACd,EAA4BC,cADd,uBACgC3V,EAAMqC,YADtC,iBACgC,EAAYqT,sBAD5C,aACgC,EAA4B9T,MAC7E,GAEAgU,EAAU5V,EAAMqC,KAAKuT,QAAQD,cAAnB,oBACP3V,EAAMqC,YADC,iBACP,EAAYuT,eADL,aACP,EAAqBD,cADd,wBACiC3V,EAAMqC,YADvC,iBACiC,EAAYuT,eAD7C,aACiC,EAAqBC,WAChE,GAEN,OACI,sBAAKtU,UAAU,mBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,sEAEJ,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,gBAAjB,SACI,kCACI,+BACI,+CACA,8BAAK,UAAAvB,EAAMqC,YAAN,eAAYyT,gBAAZ,sBAAiC9V,EAAMqC,YAAvC,aAAiC,EAAYyT,iBAClD,qBAAIrU,QAAS,kBAAMwF,GAAc,IAAjC,UAAwC,mBAAG1F,UAAU,oBAArD,cAEJ,+BACI,gDACA,6BAAKmU,IACL,0BAEJ,+BACI,yCACA,6BAAKE,IACL,iCAMhB,cAAC,EAAD,CACItU,WAAYA,EACZI,WAAY,kBAAMuF,GAAc,IAChCrE,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjBb,KAAMrC,EAAMqC,KACZ+F,aAAcpI,EAAMoI,mBAM9B2N,EAAkB,SAAA/V,GAAU,IAAD,kBAC7B,EAAgDG,mBAASH,EAAMqC,KAAKyT,cAAX,sBAA+B9V,EAAMqC,YAArC,aAA+B,EAAYyT,eAAiB,IAArH,mBAAOE,EAAP,KAAyBC,EAAzB,KACA,EAAkD9V,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYqT,sBAAb,aAAC,EAA4BC,eAAvF,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAA0DhW,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYqT,sBAAb,aAAC,EAA4B9T,MAA/F,mBAAOwU,EAAP,KAA8BC,EAA9B,KACA,EAAoClW,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYuT,eAAb,aAAC,EAAqBD,eAAlE,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAsDpW,mBAAQ,UAACH,EAAMqC,YAAP,iBAAC,EAAYuT,eAAb,aAAC,EAAqBC,WAApF,mBAAOW,EAAP,KAA4BC,EAA5B,KAmDMxM,EAAgBjK,EAAMsB,WAAa,yBAA2B,oBAEpE,OACI,qBAAKC,UAAW0I,EAAhB,SACI,sBAAK1I,UAAU,mBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,aAAd,UAA2B,mBAAGA,UAAU,oBAAxC,uBAEJ,sBAAKA,UAAU,mBAAf,UAEI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,cAAf,UACI,kDACA,0BACIC,GAAG,mBACHJ,MAAO4U,EACPlU,SAAU,SAAAC,GAAC,OAAIkU,EAAoBlU,EAAEC,OAAOZ,QAC5CG,UAAU,eACV+I,KAAM,SAMlB,sBAAK/I,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mDACA,0BACIC,GAAG,oBACHJ,MAAO8U,EACPpU,SAAU,SAAAC,GAAC,OAAIoU,EAAqBpU,EAAEC,OAAOZ,QAC7CG,UAAU,eACV+I,KAAM,OAGd,sBAAK/I,UAAU,cAAf,UACI,0DACA,uBACIC,GAAG,wBACHJ,MAAOgV,EACPtU,SAAU,SAAAC,GAAC,OAAIsU,EAAyBtU,EAAEC,OAAOZ,QACjDG,UAAU,uBAItB,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,4CACA,uBACIK,KAAK,OACLJ,GAAG,aACHJ,MAAOkV,EACPxU,SAAU,SAAAC,GAAC,OAAIwU,EAAcxU,EAAEC,OAAOZ,QACtCG,UAAU,oBAGlB,sBAAKA,UAAU,cAAf,UACI,+CACA,uBACIC,GAAG,sBACHJ,MAAOoV,EACP1U,SAAU,SAAAC,GAAC,OAAI0U,EAAuB1U,EAAEC,OAAOZ,QAC/CG,UAAU,eACVK,KAAK,kBAKrB,sBAAKL,UAAU,qBAAf,UACI,wBACIC,GAAG,YACHD,UAAU,gBACVE,QAzHW,WAAO,IAAD,EAC3BY,EAAO,CACTyT,cAAe,CAACE,GAChBJ,QAAS,CACLD,cAAeW,EACfT,UAAWW,GAEfd,eAAgB,CACZC,cAAeO,EACftU,KAAMwU,IAIR3T,EAAU,CACZ,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,uBAAwB2C,UAAxC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACF/C,EAAM4C,oBAAmB,GACrBG,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAU,qBAAsB,WACtClD,EAAM0B,aAGN1B,EAAMoI,cAAa,IAGnBpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBAyE3B,oBAMA,wBACIhC,GAAG,YACHD,UAAU,mBACVE,QAAS,kBAAMzB,EAAM0B,cAHzB,6BC2DLgV,EA1OC,SAAA1W,GAAU,IAAD,EAErB,EAAsCG,mBAAS,IAA/C,mBAAOwW,EAAP,KAAoBC,EAApB,KACA,EAAsCzW,mBAAS,GAA/C,mBAAO2G,EAAP,KAAoBC,EAApB,KACA,EAAkC5G,oBAAS,GAA3C,mBAAOoT,EAAP,KAAkBnL,EAAlB,KACA,EAA8BjI,mBAASwW,EAAYhC,OAAnD,mBAAOjB,EAAP,KAAgBC,EAAhB,KACA,EAAoCxT,mBAAS,IAA7C,mBAAOqT,EAAP,KAAmBC,EAAnB,KA0DMK,EAAU3Q,eAAeoH,QAAQ,UACjCwJ,EAAS,CACX,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2B5Q,eAAeoH,QAAQ,WAEtD,OAAU,OAiFd,OA9EArJ,qBAAU,WACN,IAAMgT,EAAWhS,SAASyO,cAAc,qBAClCwD,EAAYjS,SAASC,eAAe,cA0B1C,OAxBA+R,EAASE,iBAAiB,YAAY,SAAArS,GAElCA,EAAEsS,oBAINH,EAASE,iBAAiB,QAAQ,SAAArS,GAC9BA,EAAEsS,iBAEF,IAAIzD,EAAQ7O,EAAEuS,aAAa1D,MAC3BuD,EAAUvD,MAAQA,EAClB,IAAMzB,EAAOgF,EAAUvD,MAAM,GAE7B1B,EAAaC,GACRrM,MAAK,SAAAC,GACF4Q,EAAW5Q,EAAS8L,YACpB4E,EAActE,EAAK5K,SAEtBd,OAAM,SAAAC,GACH1D,EAAMkD,UAAUQ,SAKrB,WAEHwQ,EAASK,oBAAoB,YAAY,SAAAxS,GAErCA,EAAEsS,oBAGNH,EAASK,oBAAoB,QAAQ,SAAAxS,GACjCA,EAAEsS,iBAEF,IAAIzD,EAAQ7O,EAAEuS,aAAa1D,MAC3BuD,EAAUvD,MAAQA,EAClB4D,QAAQC,IAAR,gBAAqB7D,EAAM9I,OAA3B,iBAKT,IAEH5G,qBAAU,WAEU,IAAD,EAAXqS,IACAvT,EAAM4C,oBAAmB,GAEzB,UAAAC,MAAM/C,EAAU,gBAAkBgU,EAASC,UAA3C,SACMjR,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC5BF,MAAK,SAAA4R,GACF1U,EAAM4C,oBAAmB,GAEF,MAAnB8R,EAAIzR,YACJ2T,EAAelC,EAAIrS,MACnBsR,EAAWe,EAAIrS,KAAKsS,QAGpB3U,EAAMkD,UAAUwR,EAAIlR,QAAS,kBAIpCC,OAAM,SAAAC,GACH1D,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUQ,EAAIF,QAAS,kBAIrC4E,GAAa,MAIlB,CAACmL,IAGA,gCACI,cAAC,EAAD,IAEA,sBAAKhS,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBACI0C,IAA2B,KAAtB0S,EAAYhC,MAAe,wBAA0BjB,EAC1DtO,MAAM,OACNoH,OAAO,WAGf,qBAAKjL,UAAU,iBAAf,SACI,+BAAI,mBAAGA,UAAU,yBAAjB,cAEJ,sBAAKA,UAAU,mCAAf,UACI,yBAAQA,UAAU,sBAAlB,UACI,uBACIK,KAAK,OACL2C,KAAK,aACL/C,GAAG,aACHwP,OAAQ,oBACRlP,SAtKP,SAAAC,GACjB,IAAMoN,EAAOpN,EAAEC,OAAO4O,MAAM,GAE5B1B,EAAaC,GACRrM,MAAK,SAAAC,GACF4Q,EAAW5Q,EAAS8L,YACpB4E,EAActE,EAAK5K,SAEtBd,OAAM,SAAAC,GACH8Q,QAAQC,IAAI/Q,SAuJJ,+BAUA,kCAAO,mDAA6B8P,QAExC,qBAAKjS,UAAU,aAAf,SACI,yBACIA,UAAWmS,EAAU,WAAa,SAClClS,GAAG,eACHC,QAnKF,WAAO,IAAD,EAGlBY,EAAO,CACT,MAASqR,GAGPjR,EAAU,CACZ,OAAU,MACV,KAAQC,KAAKC,UAAUN,GACvB,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2Bc,eAAeoH,QAAQ,YAI1DvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,uBAAwB2C,UAAxC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACF/C,EAAM4C,oBAAmB,GACrBG,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAU,qBAAsB,WAGtCkF,GAAa,IAGbpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBA0HvB,UAII,mBAAGjC,UAAU,uBAJjB,kCAUR,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6BAAKoV,EAAYpS,OACjB,+BAAI,mBAAGhD,UAAU,yBAAjB,2BAEJ,uCAAKoV,EAAYjB,sBAAjB,aAAK,EAA4BC,gBAEjC,qBAAKpU,UAAU,uBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,+BAAI,mBAAGA,UAAU,yBAAjB,0BAKR,cAAC,EAAD,CACIuF,YAAaA,EACbC,eAAgBA,IAGH,IAAhBD,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMsU,EACNzT,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,qBAEb,IAAhBkE,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMsU,EACNzT,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,qBAEb,IAAhBkE,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMsU,EACNzT,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,+BCtOrCiU,EAAe,SAAA7W,GAExB,IAAQkD,EAAkClD,EAAlCkD,UAAWN,EAAuB5C,EAAvB4C,mBAEnB,EAAwCzC,mBAAS,IAAjD,mBAAO2W,EAAP,KAAqBC,EAArB,KACA,EAAgC5W,mBAAS,IAAzC,mBAAOoI,EAAP,KAAiBC,EAAjB,KACA,EAAsCrI,mBAAS,IAA/C,mBAAO6W,EAAP,KAAoBC,EAApB,KAEMhX,EAAUC,cA0ChB,OACI,mCACI,qBAAKqB,UAAU,YAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,eAAewC,MAAO,CAAEC,UAAW,SAAlD,UACI,qBAAKC,IAAI,oBAET,sBAAK1C,UAAU,YAAf,UACI,+BAAI,mBAAGA,UAAU,0BAAjB,sBAEA,oDACA,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,cAAf,SACI,uBACIC,GAAG,eACHJ,MAAO0V,EACPhV,SAAU,SAAAC,GAAC,OAAIgV,EAAgBhV,EAAEC,OAAOZ,QACxCQ,KAAK,OACLL,UAAU,eACV2D,aAAa,MACbrD,UAAW,GACXsC,YAAY,kBAIxB,qBAAK5C,UAAU,WAAf,SACI,qBAAKA,UAAU,cAAf,SACI,uBACIC,GAAG,WACHJ,MAAOmH,EACPzG,SAAU,SAAAC,GAAC,OAAIyG,EAAYzG,EAAEC,OAAOZ,QACpCQ,KAAK,MACLL,UAAU,eACV2D,aAAa,MACbrD,UAAW,GACXsC,YAAY,gCAIxB,qBAAK5C,UAAU,WAAf,SACI,qBAAKA,UAAU,cAAf,SACI,uBACIC,GAAG,cACHJ,MAAO4V,EACPlV,SAAU,SAAAC,GAAC,OAAIkV,EAAelV,EAAEC,OAAOZ,QACvCQ,KAAK,WACLL,UAAU,eACV2D,aAAa,MACbf,YAAY,iBAIxB,iEACA,cAAC,IAAD,CAAMC,GAAG,IAAT,kCAEA,wBACI5C,GAAG,WACHD,UAAU,eACVE,QAlGX,WAAO,IAAD,EAEbY,EAAO,CACTC,QAASiG,EACThG,KAAM,SACNC,eAAgB,QAGdC,EAAU,CACZ,QAAW,CACP,eAAgB,oBAEpB,OAAU,OACV,KAAQC,KAAKC,UAAUN,IAG3BO,GAAmB,GAEnB,UAAAC,MAAM/C,EAAU,QAAS2C,UAAzB,SACMK,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC5BF,MAAK,SAAAC,GAEFH,GAAmB,GAES,MAAxBG,EAASE,YAAsBF,EAASO,QAAUwT,GAElD3T,eAAeC,QAAQ,QAASL,EAASM,OACzCF,eAAeC,QAAQ,SAAUL,EAASO,OAC1CrD,EAAQsD,KAAK,qBAGbL,EAAUH,EAASS,QAAS,kBAGnCC,OAAM,SAAAC,GACHd,GAAmB,GACnBM,EAAUQ,EAAIF,QAAS,mBA2DX,mBAKA,qBAAKjC,UAAU,kBAAf,SACI,sDAAwB,cAAC,IAAD,CAAM6C,GAAG,YAAT,mCAIhC,qBAAK7C,UAAU,cAAcwC,MAAO,CAAEM,QAAS,QAA/C,SACI,qFAGR,sBAAK9C,UAAU,gBAAf,UACI,qBAAK0C,IAAI,mBACT,qBAAK1C,UAAU,aAAf,SACI,wGC/Hf2V,EAAQ,SAAClX,GAClB,OACI,sBAAKuB,UAAU,SAAf,UACI,gCACI,qBAAKA,UAAU,UAAf,SAA0BvB,EAAMmX,UAChC,qBAAK5V,UAAU,WAAf,SAA2BvB,EAAMoX,gBAErC,sBAAK7V,UAAU,UAAf,UACI,mBAAGA,UAAWvB,EAAMqX,aAAc,cAAY,SAC9C,+BAAOrX,EAAMsX,yBCsBZC,EA/BG,CAChB,CACE/V,GAAI,EACJ2V,QAAS,IACTK,MAAO,cACPF,gBAAiB,cACjBD,aAAc,oBAEhB,CACE7V,GAAI,EACJ2V,QAAS,IACTK,MAAO,WACPF,gBAAiB,cACjBD,aAAc,wBAEhB,CACE7V,GAAI,EACJ2V,QAAS,GACTK,MAAO,UACPF,gBAAiB,cACjBD,aAAc,kBAEhB,CACE7V,GAAI,EACJ2V,QAAS,GACTK,MAAO,YACPF,gBAAiB,eACjBD,aAAc,0BCxBPI,EAAU,WACnB,IAAMC,EAAOH,EAAYpN,KAAI,SAAAC,GACzB,OAAQ,cAAC,EAAD,CAEJ+M,QAAS/M,EAAK+M,QACdC,WAAYhN,EAAKoN,MACjBF,gBAAiBlN,EAAKkN,gBACtBD,aAAcjN,EAAKiN,cAJdjN,EAAK5I,OAQlB,OAEI,qBAAKD,UAAU,UAAf,SACKmW,KCjBAC,EAAkB,SAAA3X,GAAU,IAAD,EACpC,OACI,sBACIuB,UAAWvB,EAAM4X,iBAAmB5X,EAAMwB,GAAK,qBAAuB,cACtEC,QAAS,kBAAMzB,EAAMoD,QAAQpD,EAAMwB,KAFvC,UAII,sBAAKD,UAAU,aAAf,UACI,qBAAK0C,IAAKjE,EAAMiE,KAAO,0BAA2BoC,IAAI,KACtD,8BAAG,0CAAerG,EAAM6X,aAE5B,sBAAKtW,UAAU,YAAf,UACI,6BAAKvB,EAAMuE,OACX,6BAAKvE,EAAM0V,iBACX,sBAAMnU,UAAS,UAAEvB,EAAM8X,cAAR,aAAE,EAAcC,cAA/B,SACK/X,EAAM8X,gBCmJZpB,EA1JC,SAAA1W,GAAU,IAAD,IAErB,EAAsCG,mBAAS,IAA/C,mBAAOwW,EAAP,KAAoBC,EAApB,KACA,EAAsCzW,mBAAS,GAA/C,mBAAO2G,EAAP,KAAoBC,EAApB,KACA,EAAkC5G,oBAAS,GAA3C,mBAAOoT,EAAP,KAAkBnL,EAAlB,KAGM0L,EAAU9T,EAAM4X,eAChB7D,EAAS,CACX,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2B5Q,eAAeoH,QAAQ,WAEtD,OAAU,OAGRyN,EAAiB,WAAO,IAAD,EACzBhY,EAAM4C,oBAAmB,GAEzB,UAAAC,MAAM/C,EAAU,gBAAkBgU,EAASC,UAA3C,SACMjR,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC5BF,MAAK,SAAA4R,GACF1U,EAAM4C,oBAAmB,GAEF,MAAnB8R,EAAIzR,WACJ2T,EAAelC,EAAIrS,MAEnBrC,EAAMkD,UAAUwR,EAAIlR,QAAS,kBAIpCC,OAAM,SAAAC,GACH1D,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUQ,EAAIF,QAAS,kBAIrC4E,GAAa,IAGjBlH,qBAAU,WACN8W,MACD,IAEH9W,qBAAU,WACN8W,MAED,CAACzE,EAAWvT,EAAM4X,iBAErB,IA2CMK,EAAuD,aAArC,UAAAtB,EAAYuB,oBAAZ,eAA0BJ,QAAuB,SAAW,WAEpF,OACI,8BACI,sBAAKvW,UAAU,sBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBACI0C,IAAK0S,EAAYhC,OAAS,wBAC1BtO,IAAI,KAER,qBAAK9E,UAAU,QAAf,SACI,6BAAKoV,EAAYpS,SAGrB,uCAAKoS,EAAYjB,sBAAjB,aAAK,EAA4BC,gBACjC,wBACInU,GAAG,cACHD,UAAW0W,EACXxW,QA9DA,WAAO,IAAD,EAQpBgB,EAAU,CACZ,KAAQC,KAAKC,UAPJ,CACTuV,aAAc,CACVJ,OAAQ,YAMZ,QAAW,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2B3U,eAAeoH,QAAQ,WAEtD,OAAU,OAGdvK,EAAM4C,oBAAmB,GAGzB,UAAAC,MAAM/C,EAAU,uBAAwB2C,UAAxC,SACMK,MAAK,SAAAC,GAEH,OADA/C,EAAM4C,oBAAmB,GAClBG,EAASC,UAEnBF,MAAK,SAAAC,GACF/C,EAAM4C,oBAAmB,GACrBG,GAAoC,MAAxBA,EAASE,YACrBjD,EAAMkD,UAAU,qBAAsB,WACtClD,EAAM0B,aAGN0G,GAAa,IAGbpI,EAAMkD,UAAUH,EAASS,QAAS,kBAGzCC,OAAM,SAAA+G,GACHxK,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUsH,EAAMhH,QAAS,mBAmBvB,mCASR,sBAAKjC,UAAU,kBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,+BAAI,mBAAGA,UAAU,yBAAjB,0BAKR,cAAC,EAAD,CACIuF,YAAaA,EACbC,eAAgBA,IAGH,IAAhBD,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMsU,EACNzT,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,qBAEb,IAAhBkE,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMsU,EACNzT,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,qBAEb,IAAhBkE,GAAqB,cAAC,EAAD,CAClBsB,aAAcA,EACd/F,KAAMsU,EACNzT,UAAWlD,EAAMkD,UACjBN,mBAAoB5C,EAAM4C,8BCpCnCuV,EA9GG,SAAAnY,GAEd,MAAkCG,mBAAS,IAA3C,mBAAOiY,EAAP,KAAkBC,EAAlB,KACA,EAAsClY,mBAAS,IAA/C,mBAAOmY,EAAP,KAAoBC,EAApB,KACA,EAA4CpY,mBAAS,IAArD,mBAAOyX,EAAP,KAAuBY,EAAvB,KAiCAtX,qBAAU,YA/BW,WAAO,IAAD,EACjB6S,EAAS,CACX0E,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BtV,eAAeoH,QAAQ,WAEtD5C,OAAQ,OAGZ3H,EAAM4C,oBAAmB,GAEzB,UAAAC,MAAM/C,EAAU,eAAgBiU,UAAhC,SACMjR,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC5BF,MAAK,SAAA4R,GAG2B,IAAD,EAF5B1U,EAAM4C,oBAAmB,GAEF,MAAnB8R,EAAIzR,YACJsV,EAAe7D,EAAIrS,MACnBmW,EAAiB,UAAC9D,EAAIrS,KAAK,UAAV,aAAC,EAAab,KAE/BxB,EAAMkD,UAAUwR,EAAIlR,QAAS,kBAIpCC,OAAM,SAAAC,GACH1D,EAAM4C,oBAAmB,GACzB5C,EAAMkD,UAAUQ,EAAIF,QAAS,kBAOrCkV,KAGD,IAEHxX,qBAAU,WAAO,IAAD,EACNyX,EAASL,EAAYM,QAAO,SAAAxO,GAAI,OAAIA,EAAK7F,OAAS6T,KACtC,KAAdA,EACAG,EAAeI,GACM,KAAdP,GACPG,EAAeD,GAGnBE,EAAiB,UAACF,EAAY,UAAb,aAAC,EAAgB9W,MAEnC,CAAC4W,IAEJ,IAAMS,EAAYP,EAAYnO,KAAI,SAACC,EAAMC,GAAW,IAAD,IAC/C,OACI,cAAC,EAAD,CACI7I,GAAI4I,EAAK0O,IACTvU,KAAM6F,EAAK7F,KACXN,IAAKmG,EAAKuK,MACVkD,OAAM,YAAOkB,KAAKC,MAAsB,EAAhBD,KAAKE,WAC7BvD,eAAc,UAAEtL,EAAKsL,sBAAP,aAAE,EAAqBC,cACrCmC,OAAM,UAAE1N,EAAK8N,oBAAP,aAAE,EAAmBJ,OAE3B1U,QAAS,SAAAhC,GAAK,OAAIoX,EAAkBpX,IACpCwW,eAAgBA,GAFXvN,MAOjB,OACI,gCACI,cAAC,EAAD,IACA,sBAAK9I,UAAU,OAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,uBACIA,UAAU,eACVC,GAAG,YACHI,KAAK,OACLR,MAAOgX,EACPtW,SAAU,SAAAC,GAAC,OAAIsW,EAAatW,EAAEC,OAAOZ,QACrC+C,YAAY,sBAGhB,mBAAG5C,UAAU,sBAEjB,qBAAKA,UAAU,eAAf,SACKsX,OAGT,qBAAKtX,UAAU,aAAf,SACKqW,GAAkB,cAAC,EAAD,CACfhV,mBAAoB5C,EAAM4C,mBAC1BM,UAAWlD,EAAMkD,UACjB0U,eAAgBA,gBC/C7BsB,MAhDf,WAEE,MAA8C/Y,oBAAS,GAAvD,mBAAOgZ,EAAP,KAAwBvW,EAAxB,KACA,EAAgCzC,oBAAS,GAAzC,mBAAOiZ,EAAP,KAAiBC,EAAjB,KACA,EAAgClZ,mBAAS,IAAzC,mBAAOmZ,EAAP,KAAiBC,EAAjB,KACA,EAAoCpZ,mBAAS,WAA7C,mBAAO8F,EAAP,KAAmBuT,EAAnB,KAEMC,EAAY,SAACjW,EAASkW,GAC1BH,EAAY/V,GACZgW,EAAcE,GACdL,GAAY,IAGd,OACE,qCACE,cAAC,EAAD,CAAQ9T,UAAW4T,IACnB,cAAC,EAAD,CACExT,aAAc2T,EACdrT,WAAYA,EACZP,gBAAiB0T,EACjBvT,mBAAoBwT,IAEtB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,CAAO1W,UAAWuW,EAAW7W,mBAAoBA,MAEnD,cAAC,IAAD,CAAO+W,KAAK,YAAYC,OAAK,EAA7B,SACE,cAAC,EAAD,CAAU1W,UAAWuW,EAAW7W,mBAAoBA,MAEtD,cAAC,IAAD,CAAO+W,KAAK,oBAAZ,SACE,cAAC,EAAD,CAAUzW,UAAWuW,EAAW7W,mBAAoBA,MAEtD,cAAC,IAAD,CAAO+W,KAAK,mBAAZ,SACE,cAAC,EAAD,CAASzW,UAAWuW,EAAW7W,mBAAoBA,MAErD,cAAC,IAAD,CAAO+W,KAAK,iBAAZ,SACE,cAAC,EAAD,CAAczW,UAAWuW,EAAW7W,mBAAoBA,MAE1D,cAAC,IAAD,CAAO+W,KAAK,mBAAZ,SACE,cAAC,EAAD,CAAWzW,UAAWuW,EAAW7W,mBAAoBA,eCvClDiX,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjX,MAAK,YAAkD,IAA/CkX,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCOdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrY,SAASC,eAAe,SAM1B0X,M","file":"static/js/main.2f9c4023.chunk.js","sourcesContent":["export const ApiPath = \"http://122.176.120.160:4000/\";","import { useState, useEffect } from \"react\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst OTPLogin = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [countdownTimer, setCountdownTimer] = useState(45);\r\n\r\n    const [input1, setInput1] = useState('')\r\n    const [input2, setInput2] = useState('')\r\n    const [input3, setInput3] = useState('')\r\n    const [input4, setInput4] = useState('')\r\n    const [input5, setInput5] = useState('')\r\n    const [input6, setInput6] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (countdownTimer <= 0) {\r\n            setInterval(() => {\r\n                setCountdownTimer(value => (value - 1));\r\n            }, 1000)\r\n        }\r\n\r\n    }, [countdownTimer])\r\n\r\n    const postLogin = () => {\r\n        const OTP = input1 + input2 + input3 + input4 + input5 + input6;\r\n\r\n        //Remember, patient login...\r\n        if (OTP !== \"203040\") {\r\n            //This value will be replaced later from generated value...\r\n            props.showToast(\"Invalid OTP. Check the registered phone number displayed above, or click 'Resend OTP' to resend.\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            loginId: props.phoneNumber,\r\n            role: \"Patient\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response =>  (response.json()))\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200) {\r\n                    props.showToast(\"Login successful!\", 'success');\r\n\r\n                    //Remember to store the bearer token\r\n                    sessionStorage.setItem(\"token\", response.token);\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo);\r\n\r\n                    history.push(\"/patients/profile\")\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    const displayClasss = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayClasss}>\r\n            <div className=\"dialog-container otp\">\r\n                <div className=\"dialog-content\">\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\">Confirm your phone number</h2>\r\n                        <span id=\"close_toast\" onClick={props.hideDialog}>&times;</span>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <h4>To complete your login, please enter the 6-digit OTP sent to\r\n\r\n                        </h4>\r\n                        <h2 className=\"phone-no\">{props.phoneNumber}</h2>\r\n                        <div className=\"input-array\">\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input1\"\r\n                                value={input1}\r\n                                onChange={e => {\r\n                                    setInput1(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input2\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input2\"\r\n                                value={input2}\r\n                                onChange={e => {\r\n                                    setInput2(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input3\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input3\"\r\n                                value={input3}\r\n                                onChange={e => {\r\n                                    setInput3(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input4\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input4\"\r\n                                value={input4}\r\n                                onChange={e => {\r\n                                    setInput4(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input5\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input5\"\r\n                                value={input5}\r\n                                onChange={e => {\r\n                                    setInput5(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input6\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input6\"\r\n                                value={input6}\r\n                                onChange={e => {\r\n                                    setInput6(e.target.value);\r\n                                    if (e.keyCode !== 8 ) document.getElementById(\"input1\").focus();\r\n                                }}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"resend-group\">\r\n                            <div>\r\n                                <p>Didn't receive the OTP?</p>\r\n                                <button>Resend</button>\r\n                            </div>\r\n                            <div>00:{countdownTimer}</div>\r\n                        </div>\r\n\r\n                        <div className=\"otp-call\">\r\n                            <button>Get OTP on call</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button className=\"btn-continue\" onClick={postLogin}>Continue</button>\r\n                        <button className=\"btn-cancel\" onClick={props.hideDialog}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OTPLogin;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport OTPLogin from './OTPLogin';\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [displayOTP, setDisplayOTP] = useState(false);\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            loginId: value,\r\n            role: \"Patient\",\r\n            validatedbyotp: \"false\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode !== 200) {\r\n                    showToast(response.message, 'exclamation');\r\n                } else {\r\n                    //Else, proceed... show the 2fa page...\r\n                    setDisplayOTP(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"./mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Let's get started!</h2>\r\n\r\n                            <h4>Enter your mobile number</h4>\r\n                            <div className=\"phone-input-container\">\r\n                                <input\r\n                                    id=\"value\"\r\n                                    value={value}\r\n                                    onChange={e => setValue(e.target.value)}\r\n                                    defaultCountry='IN'\r\n                                    className=\"login-control\"\r\n                                    placeholder=\"Mobile Number\"\r\n                                    maxLength={14}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Continue</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Returning Doctor? <Link to=\"/doctors/login\">Login here</Link></h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"./doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                displayOTP && <OTPLogin\r\n                    showDialog={displayOTP}\r\n                    phoneNumber={value}\r\n                    hideDialog={() => setDisplayOTP(false)}\r\n                    showToast={showToast}\r\n                    setIsLoaderVisible={setIsLoaderVisible}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\nexport const Register = ({ setIsLoaderVisible, showToast }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const register = () => {\r\n        //Connect to the api after validation...\r\n        if (name === \"\" || role === \"\" || phone === \"\" || password === \"\") {\r\n            showToast(\"Complete all fields to proceed!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        if (password !== verifyPassword) {\r\n            showToast(\"Password and verify password fields must match!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            name: name,\r\n            role: role,\r\n            phoneNumber: phone,\r\n            password: password\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"register\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    showToast(\"Registration successful! Now login with the new credentials...\", 'success');\r\n\r\n                    if (response.data.uidNo.substring(0, 1) === \"P\") {\r\n                        history.push(\"/\");\r\n                    } else {\r\n                        history.push(\"/doctors/login\")\r\n                    }\r\n\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-divider\">\r\n                <div className=\"left-sidebar\">\r\n                    <img src=\"./mah-logo.png\" />\r\n\r\n                    <div className=\"left-text\" style={{ marginTop: -5 }}>\r\n                        <h2 style={{ marginBottom: 25 }}>Registration</h2>\r\n\r\n                        {/* Form for details entry... */}\r\n                        <div className=\"form-data\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Name (Firstname and Lastname)</label>\r\n                                    <input\r\n                                        id=\"name\"\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Role</label>\r\n                                    <select\r\n                                        id=\"role\"\r\n                                        value={role}\r\n                                        onChange={e => setRole(e.target.value)}\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Patient\">Patient</option>\r\n                                        <option value=\"Doctor\">Doctor</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        id=\"phone\"\r\n                                        value={phone}\r\n                                        onChange={e => setPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Password</label>\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={e => setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Verify Password</label>\r\n                                    <input\r\n                                        id=\"verifyPasword\"\r\n                                        value={verifyPassword}\r\n                                        onChange={e => setVerifyPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={register}\r\n                            >Register</button>\r\n                        </div>\r\n\r\n                        <div className=\"doctor-register\">\r\n                            <h4>Already a user? <Link to=\"/\">Login here</Link></h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-sidebar\">\r\n                    <img src=\"./access-account.svg\" style={{ width: '50%' }} />\r\n                    <div className=\"image-text\">\r\n                        <p>India's top doctors to guide you to better health everyday...</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","const Loader = ({ isVisible }) => {\r\n\r\n    const displayClass = !isVisible ? \"d-none\" : \"new-loader-bg\";\r\n\r\n    return (\r\n        <div className={displayClass}>\r\n            <div className=\"new-loader-container\">\r\n                <span style={{ '--i': 0 }}></span>\r\n                <span style={{ '--i': 1 }}></span>\r\n                <span style={{ '--i': 2 }}></span>\r\n                <span style={{ '--i': 3 }}></span>\r\n                <span style={{ '--i': 4 }}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nconst Toast = (props) => {\r\n\r\n    const visStatus = (props.toastVisibility) ? \"toast\" : \"toast d-none\";\r\n    const message = props.toastMessage === \"Failed to fetch\" ? \"Failed to retrieve data. Check your internet connection and try again.\" : props.toastMessage;\r\n\r\n    function closeToast() {\r\n        props.setToastVisibility(false)\r\n    }\r\n\r\n    if (props.toastVisibility) {\r\n        setTimeout(() => {\r\n            props.setToastVisibility(false)\r\n        }, 8000)\r\n    }\r\n\r\n    let iconSrc = \"\"\r\n    const contentStyle = {}\r\n    const headerStyle = {}\r\n\r\n    switch (props.msgBoxType) {\r\n        case \"success\":\r\n            iconSrc = \"/success.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--main-green)\"\r\n\r\n            headerStyle.color = \"var(--main-green)\"\r\n            headerStyle.innerText = \"Success\"\r\n\r\n            break;\r\n\r\n        case \"information\":\r\n            iconSrc = \"/info.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--bluish)\";\r\n\r\n            headerStyle.color = \"var(--bluish)\"\r\n            headerStyle.innerText = \"Information\"\r\n\r\n            break;\r\n\r\n        case \"exclamation\":\r\n            iconSrc = \"/warning.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--golden-rod)\";\r\n\r\n            headerStyle.color = \"var(--golden-rod)\"\r\n            headerStyle.innerText = \"Error\"\r\n\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        // This returns the basic\r\n        //Frame setup for the custom message box\r\n        // and based on the above props\r\n        // the state values can be changed\r\n        // depending on the values\r\n        // of the\r\n        // 1. Message\r\n        // 2. Box style (information, exclamation or success)\r\n        // 3. The message box visibility (true or false)\r\n        <div className={visStatus}>\r\n            <div className=\"logo\">\r\n                <img id=\"toastIcon\" src={iconSrc} alt=\"\" />\r\n            </div>\r\n            <div className=\"content\" style={contentStyle}>\r\n                <div className=\"content-header\">\r\n                    <h4 id=\"headerText\" style={headerStyle}>MAH Health Care</h4>\r\n                    <span id=\"close_toast\" onClick={closeToast}>&times;</span>\r\n                </div>\r\n                <p id=\"toast_message\">{(message === \"Unauthenticated user\" || message === \"No user found\") ? \"Access Denied!\" : message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast;\r\n","import { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n\r\n    const history = useHistory();\r\n    const buttonStyle = {\r\n        display: 'block',\r\n        background: 'transparent',\r\n        color: 'white',\r\n        outline: 'none',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        fontFamily: 'Poppins',\r\n        marginRight: '40px',\r\n    }\r\n\r\n    const signOut = () => {\r\n        //Reset the other variables....\r\n        sessionStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"id_val\", null);\r\n\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"header-bar\">\r\n            <div className=\"header-bar-image\">\r\n                <Link to=\"/\" ><img src=\"/mah-logo.png\" width=\"60\" />MAH Health Care</Link>\r\n            </div>\r\n            <button style={buttonStyle} onClick={signOut}>Sign Out</button>\r\n        </div>\r\n    );\r\n}\r\n","\r\nexport const PatientTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-ui-user\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Medical\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-history\"></i>History\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 5 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(5)}\r\n            >\r\n                <i className=\"icofont-glass\"></i>Lifestyle\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const address = props.data?.address;\r\n    const houseNumber = address[0]?.houseNumber ? address[0]?.houseNumber + \", \" : \"\";\r\n    const street = address[0]?.street ? address[0]?.street + \", \" : \"\";\r\n    const city = address[0]?.city ? address[0]?.city + \", \" : \"\";\r\n    const state = address[0]?.state ? address[0]?.state + \", \" : \"\";\r\n    const district = address[0]?.district ? address[0]?.district + \", \" : \"\";\r\n    const postalCode = address[0]?.postalCode ? address[0]?.postalCode + \" - \" : \"\";\r\n    const [countries, setCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        //fetch the countries via the api\r\n        fetch('http://api.worldbank.org/v2/country/all?format=json', { method: 'GET' })\r\n            .then(response => { return response.json() })\r\n            .then(response => {\r\n                setCountries(response[1]);\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    const showPhone = props.data?.contactPerson.length > 0 ? \"icofont-phone\" : \"\";\r\n    const contactDetails = props.data?.contactPerson.length > 0\r\n        && `${props.data?.contactPerson && props.data?.contactPerson[0]?.name} (${props.data?.contactPerson && props.data?.contactPerson[0]?.relationship})`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{address && address === []\r\n                                    ? \"\"\r\n                                    : `${houseNumber}${street}${city}${district}${state}${postalCode}`}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Country</td>\r\n                                <td>{address ? address[0]?.country : \"-\"}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailId}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Contact Person</td>\r\n                                <td>\r\n                                    { contactDetails }<br />\r\n                                    <i className={showPhone}></i>{props.data?.contactPerson && props.data?.contactPerson[0]?.contact?.value}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                countries={countries}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const addressData = props.data.address[0] || {};\r\n    const contactPerson = props.data.contactPerson[0] || {};\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [addressType, setAddressType] = useState(addressData?.type);\r\n    const [txtHouseNo, setTxtHouseNo] = useState(addressData?.houseNumber);\r\n    const [txtStreet, setTxtStreet] = useState(addressData?.street);\r\n    const [txtCity, setTxtCity] = useState(addressData?.city);\r\n    const [txtDistrict, setTxtDistrict] = useState(addressData?.district);\r\n    const [txtState, setTxtState] = useState(addressData?.state);\r\n    const [txtPostalCode, setTxtPostalCode] = useState(addressData.postalCode);\r\n    const [txtCountry, setTxtCountry] = useState(addressData?.country);\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailId);\r\n    const [txtContactPerson, setTxtContactPerson] = useState(contactPerson?.name);\r\n    const [txtRelationship, setTxtRelationship] = useState(contactPerson?.relationship)\r\n    const [txtContactPhone, setTxtContactPhone] = useState(contactPerson?.contact?.value)\r\n\r\n    const updateContactDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            emailId: txtEmail,\r\n            address: [{\r\n                \"type\": addressType,\r\n                \"houseNumber\": txtHouseNo,\r\n                \"street\": txtStreet,\r\n                \"city\": txtCity,\r\n                \"district\": txtDistrict,\r\n                \"state\": txtState,\r\n                \"postalCode\": txtPostalCode,\r\n            }],\r\n            contactPerson: [{\r\n                \"relationship\": txtRelationship,\r\n                \"name\": txtContactPerson,\r\n                \"contact\": {\r\n                    \"system\": \"Phone\",\r\n                    \"value\": txtContactPhone,\r\n                }\r\n            }],\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n    const countryList =  props.countries && props.countries.map((item, index) => {\r\n        return (<option key={index} value={item.name}>{item.name}</option>)\r\n    })\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row-3\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Type</label>\r\n                            <select\r\n                                id=\"addressType\"\r\n                                value={addressType}\r\n                                onChange={e => setAddressType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"Home\">Home</option>\r\n                                <option value=\"Work\">Work</option>\r\n                                <option value=\"Office\">Office</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>House Number</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtHouseNo\"\r\n                                value={txtHouseNo}\r\n                                onChange={e => setTxtHouseNo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className=\"input-group\">\r\n                            <label>Street</label>\r\n                            <textarea\r\n                                rows={2}\r\n                                className=\"form-control\"\r\n                                id=\"txtStreet\"\r\n                                value={txtStreet}\r\n                                onChange={e => setTxtStreet(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>City</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtCity\"\r\n                                value={txtCity}\r\n                                onChange={e => setTxtCity(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>District</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtDistrict\"\r\n                                value={txtDistrict}\r\n                                onChange={e => setTxtDistrict(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>State</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtState\"\r\n                                value={txtState}\r\n                                onChange={e => setTxtState(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Postal Code</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPostalCode\"\r\n                                value={txtPostalCode}\r\n                                onChange={e => setTxtPostalCode(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className=\"input-group\">\r\n                            <label>Country</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtCountry\"\r\n                                value={txtCountry}\r\n                                onChange={e => setTxtCountry(e.target.value)}\r\n                            >\r\n                                {countryList}\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Contact Person (Name)</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPerson\"\r\n                                value={txtContactPerson}\r\n                                onChange={e => setTxtContactPerson(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Relationship</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtRelationship\"\r\n                                value={txtRelationship}\r\n                                onChange={e => setTxtRelationship(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPhone\"\r\n                                value={txtContactPhone}\r\n                                onChange={e => setTxtContactPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateContactDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Marital Status</td>\r\n                            <td>{props.data?.maritalStatus}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Is Deceased?</td>\r\n                            <td>{props.data?.deceased?.deceasedBoolean || \"No\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Deceased Date</td>\r\n                            <td>{props.data?.deceased?.deceasedDateTime || \"-\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [showDeceased, setShowDeceased] = useState('none');\r\n    const [cbxDeceased, setCbxDeceased] = useState(props.data.deceased?.deceasedBoolean)\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [cbxMaritalStatus, setCbxMaritalStatus] = useState(props.data.maritalStatus)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n    const [txtDeceasedDate, setTxtDeceasedDate] = useState(props.data?.deceased?.deceasedDateTime);\r\n\r\n    useEffect(() => {\r\n        if (cbxDeceased === \"Yes\") {\r\n            setShowDeceased('block')\r\n        } else {\r\n            setShowDeceased('none');\r\n        }\r\n    }, [cbxDeceased])\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n            \"deceased\": {\r\n                deceasedBoolean: cbxDeceased === \"Yes\" ? true : false,\r\n                deceasedDateTime: txtDeceasedDate,\r\n            },\r\n            maritalStatus: cbxMaritalStatus,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)'}}><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Marital Status</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxMaritalStatus\"\r\n                                value={cbxMaritalStatus}\r\n                                onChange={e => setCbxMaritalStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Maried\">Maried</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Do not wish to disclose\">Do not wish to disclose</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Is Deceased?</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxIsDeceased\"\r\n                                value={cbxDeceased}\r\n                                onChange={e => setCbxDeceased(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group' style={{ display: showDeceased }}>\r\n                            <label>Deceased Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtDeceasedDate\"\r\n                                value={txtDeceasedDate}\r\n                                onChange={e => setTxtDeceasedDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url'\r\n\r\nexport const Medical = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical Details</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Allergies</td>\r\n                            <td>{props.data?.allergies !== [] && props.data?.allergies?.value[0]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Managing Organization (Hospital)</td>\r\n                            <td>{props.data.managingOrganization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Blood Group</td>\r\n                            <td>{props.data.general?.bloodGroup}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Height</td>\r\n                            <td>{props.data.general?.height}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Weight</td>\r\n                            <td>{props.data.general?.weight}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BMI</td>\r\n                            <td>{props.data.general?.bmi}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Chest Expansion</td>\r\n                            <td>{props.data.general?.chestExpansion}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Vision</td>\r\n                            <td>{props.data.general?.vision}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BP</td>\r\n                            <td>{props.data.general?.bp}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pulse</td>\r\n                            <td>{props.data.general?.pulse}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Oxygen Saturation</td>\r\n                            <td>{props.data.general?.oxygenSaturation}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <MedicalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalDialog = props => {\r\n\r\n    const [boxContent, setBoxContent] = useState('')\r\n    const [txtAllergies, setTxtAllergies] = useState(props.data?.allergies?.value[0] || \"\")\r\n    const [txtManagingOrg, setTxtManagingOrg] = useState(props.data.managingOrganization)\r\n\r\n    const [bloodGroup, setBloodGroup] = useState(props.data?.general?.bloodGroup);\r\n    const [height, setHeight] = useState(props.data?.general?.height);\r\n    const [weight, setWeight] = useState(props.data?.general?.weight);\r\n    const [vision, setVision] = useState(props.data?.general?.vision);\r\n    const [chestExpansion, setChestExpansion] = useState(props.data?.general?.chestExpansion);\r\n    const [bloodPressure, setBloodPressure] = useState(props.data?.general?.bp);\r\n    const [pulse, setPulse] = useState(props.data?.general?.pulse);\r\n    const [oxygenSaturation, setOxygenSaturation] = useState(props.data?.general?.oxygenSaturation);\r\n    const [bmi, setBmi] = useState(props.data?.general?.bmi);\r\n\r\n    const createItems = () => {\r\n        /** as the textbox blurs,\r\n         * create a list of\r\n         * emails with special colorizing\r\n         * and close items...\r\n\r\n        After clearing the container, fix the emails...*/\r\n        const allergies = Array.isArray(txtAllergies) ? txtAllergies.split(\",\") : [];\r\n        const content = allergies.map((item, index) => {\r\n            return (\r\n                <span key={index}>{item.trim()}</span>\r\n            )\r\n        })\r\n\r\n        setBoxContent(content || \"Selected Allergies\")\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        createItems();\r\n    }, [])\r\n\r\n    const updateMedicalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            allergies: { value: [txtAllergies] },\r\n            general: {\r\n                \"bloodGroup\": bloodGroup,\r\n                \"height\": height,\r\n                \"weight\": weight,\r\n                \"bmi\": bmi,\r\n                \"chestExpansion\": chestExpansion,\r\n                \"vision\": vision,\r\n                \"bp\": bloodPressure,\r\n                \"pulse\": pulse,\r\n                \"oxygenSaturation\": oxygenSaturation\r\n            },\r\n            managingOrganization: txtManagingOrg\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)'}}><i className=\"icofont-ui-edit\"></i> Edit Medical Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Allergies</label>\r\n                            <input\r\n                                id=\"txtAllergies\"\r\n                                className=\"form-control mb-1\"\r\n                                value={txtAllergies}\r\n                                onChange={e => {\r\n                                    setTxtAllergies(e.target.value)\r\n                                    if (e.keyCode === 13) createItems();\r\n                                }}\r\n                                onBlur={createItems}\r\n                                placeholder='Enter comma-separated values'\r\n                            />\r\n                            <div className=\"emails-box\">{boxContent}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Managing Organization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtManagingOrg\"\r\n                                value={txtManagingOrg}\r\n                                onChange={e => setTxtManagingOrg(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"ABC Healthcare\">ABC Healthcare</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>Blood Group</label>\r\n                            <select\r\n                                id=\"bloodGroup\"\r\n                                className=\"form-control\"\r\n                                value={bloodGroup}\r\n                                onChange={e => setBloodGroup(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"A+\">A+</option>\r\n                                <option value=\"A-\">A-</option>\r\n                                <option value=\"B+\">B+</option>\r\n                                <option value=\"B-\">B-</option>\r\n                                <option value=\"AB+\">AB+</option>\r\n                                <option value=\"AB-\">AB-</option>\r\n                                <option value=\"O+\">O+</option>\r\n                                <option value=\"O-\">O-</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Height</label>\r\n                            <input\r\n                                id=\"height\"\r\n                                className=\"form-control\"\r\n                                value={height}\r\n                                onChange={e => setHeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Weight</label>\r\n                            <input\r\n                                id=\"weight\"\r\n                                className=\"form-control\"\r\n                                value={weight}\r\n                                onChange={e => setWeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BMI</label>\r\n                            <input\r\n                                id=\"bmi\"\r\n                                className=\"form-control\"\r\n                                value={bmi}\r\n                                onChange={e => setBmi(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Chest Expansion</label>\r\n                            <input\r\n                                id=\"chestExpansion\"\r\n                                className=\"form-control\"\r\n                                value={chestExpansion}\r\n                                onChange={e => setChestExpansion(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Vision</label>\r\n                            <input\r\n                                id=\"vision\"\r\n                                className=\"form-control\"\r\n                                value={vision}\r\n                                onChange={e => setVision(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BP</label>\r\n                            <input\r\n                                id=\"bloodPressure\"\r\n                                className=\"form-control\"\r\n                                value={bloodPressure}\r\n                                onChange={e => setBloodPressure(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Pulse</label>\r\n                            <input\r\n                                id=\"pulse\"\r\n                                className=\"form-control\"\r\n                                value={pulse}\r\n                                onChange={e => setPulse(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Oxygen Saturation</label>\r\n                            <input\r\n                                id=\"oxygenSaturation\"\r\n                                className=\"form-control\"\r\n                                value={oxygenSaturation}\r\n                                onChange={e => setOxygenSaturation(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const ImageDialog = props => {\r\n\r\n    const imageSource = props.src;\r\n\r\n    //Find the image components...\r\n    const imageExtension = imageSource.toString().indexOf(\"pdf\") > -1 ? \"pdf\" : \"other\";\r\n\r\n    const dialogClass = props.setImageDisplay\r\n        ? \"dialog-background image-dialog fade\"\r\n        : \"dialog-background image-dialog\";\r\n\r\n\r\n    const extension = imageExtension;\r\n    let imageContainerDisplay;\r\n    let embedContainer;\r\n\r\n    if (extension === \"pdf\") {\r\n        embedContainer = \"embed-container\";\r\n        imageContainerDisplay = \"image-container d-none\";\r\n\r\n    } else {\r\n        embedContainer = \"embed-container d-none\";\r\n        imageContainerDisplay = \"image-container\";\r\n    }\r\n\r\n    const closeMe = () => {\r\n        props.hideImageDialog(false);\r\n    }\r\n\r\n    return (\r\n        <div className={dialogClass}>\r\n            <div className={imageContainerDisplay}>\r\n                <div className=\"image-viewer\">\r\n                    <span className=\"close\">&times;</span>\r\n                    <img\r\n                        id=\"full-image\"\r\n                        alt=\"\"\r\n                        src={imageSource}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={embedContainer}>\r\n                <embed\r\n                    src={imageSource}\r\n                    width=\"100%\"\r\n                    height=\"95%\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-row-3-1\">\r\n                <div></div>\r\n                <button\r\n                    className=\"btn-main\"\r\n                    id=\"btnClose\"\r\n                    onClick={closeMe}\r\n                    style={{ width: 300 }}\r\n                >Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// Convert file to base64 string\r\nexport const fileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../../assets/common/base-url';\r\n\r\nexport const PastPrescriptionsDialog = props => {\r\n\r\n    const [txtPastPrescriptions, setTxtPastPrescriptions] = useState(props.data.pastPrescriptions && props.data?.pastPrescriptions[0])\r\n    const [cbxMedicines, setCbxMedicines] = useState('')\r\n    const [txtAddMedication, setTxtAddMedication] = useState('')\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState('')\r\n\r\n    const updatePastPrescriptions = () => {\r\n        const data = {\r\n            pastPrescriptions: [{\r\n                value: cbxMedicines,\r\n                medication: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                uploads: txtPastPrescriptions || []\r\n            }],\r\n\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = () => {\r\n\r\n        const fileUpload = document.querySelector(\"#txtPastPrescriptions\")\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    setTxtPastPrescriptions(response.toString());\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Add/Edit Past Prescriptions</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div\r\n                        className=\"form-row\"\r\n                        style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label\r\n                            style={{ transform: 'translateY(-10px)', color: '#999' }}>\r\n                            <i className=\"icofont-drug\"></i> Past Prescriptions / Medications\r\n                        </label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>Have you taken any medicines in past?</label>\r\n                                <select\r\n                                    id=\"cbxMedicines\"\r\n                                    value={cbxMedicines}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxMedicines(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxMedicines === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                        <div className=\"input-group\">\r\n                                <label>Add Medication</label>\r\n                                <input\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Upload File (.pdf) (optional)</label>\r\n                                <input\r\n                                    id=\"txtPastPrescriptions\"\r\n                                    onChange={() => saveImageToBase64()}\r\n                                    className=\"form-control\"\r\n                                    accept=\".pdf\"\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxMedicines === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePastPrescriptions}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ImageDialog } from \"../../components/image-dialog\"\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { PastPrescriptionsDialog } from './others/past-prescriptions-dialog';\r\n\r\nexport const MedicalHistory = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [showPrescriptionsDialog, setShowPrescriptionsDialog] = useState(false);\r\n    const [showImageDialog, setShowImageDialog] = useState(false);\r\n    const [imageSource, setImageSource] = useState('');\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical History</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Current Medications</td>\r\n                            <td>{(props.data.currentMedications.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.currentMedications)\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Diagnosis Reports</td>\r\n                            <td>{(props.data.diagnosisReport.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.diagnosisReport)\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Past prescriptions</td>\r\n                            <td>{(props.data.pastPrescriptions.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.pastPrescriptions)\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td onClick={() => setShowPrescriptionsDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <MedicalHistoryDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setImageSource={setImageSource}\r\n                setResetData={props.setResetData}\r\n                setShowImageDialog={setShowImageDialog}\r\n            />\r\n\r\n            <PastPrescriptionsDialog\r\n                showDialog={showPrescriptionsDialog}\r\n                hideDialog={() => setShowPrescriptionsDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setImageSource={setImageSource}\r\n                setResetData={props.setResetData}\r\n                setShowImageDialog={setShowImageDialog}\r\n            />\r\n\r\n            {showImageDialog &&\r\n                <ImageDialog\r\n                    mandateExtension=\"pdf\"\r\n                    src={imageSource}\r\n                    setImageDisplay={showImageDialog}\r\n                    isURL={true}\r\n                    hideImageDialog={() => setShowImageDialog(false)}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalHistoryDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState(props.data.currentMedications?.uploads && [...props.data.currentMedications?.uploads])\r\n    const [txtDiagnosisReport, setTxtDiagnosisReport] = useState(props.data.diagnosisReport && props.data?.diagnosisReport[0])\r\n\r\n    const [txtAddMedication, setTxtAddMedication] = useState(props.data?.currentMedications?.medication || '');\r\n    const [cbxIsOnMedications, setCbxIsOnMedications] = useState(props.data?.currentMedications?.value ? \"Yes\" : \"No\");\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState(props.data?.currentMedications?.description || '');\r\n\r\n    const updateMedicalHistoryDetails = () => {\r\n        const data = {\r\n            currentMedications: [{\r\n                value: cbxIsOnMedications === \"Yes\" ? true : false,\r\n                medication: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                uploads: txtCurrentMedications || []\r\n            }],\r\n            diagnosisReport: [txtDiagnosisReport]\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = (val) => {\r\n\r\n        let fileUpload;\r\n\r\n        if (val === \"curr\") {\r\n            fileUpload = document.querySelector(\"#txtCurrentMedications\")\r\n        } else if (val === \"pp\") {\r\n            fileUpload = document.querySelector(\"#txtPastPrescriptions\")\r\n        } else {\r\n            fileUpload = document.querySelector(\"#txtDiagnosisReport\")\r\n        }\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    switch (val) {\r\n                        case \"curr\":\r\n                            setTxtCurrentMedications(response.toString());\r\n                            break;\r\n                        case \"pp\":\r\n                            setTxtPastPrescriptions(response.toString());\r\n                            break;\r\n                        default:\r\n                            setTxtDiagnosisReport(response.toString());\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div className=\"form-row\" style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label style={{ transform: 'translateY(-10px)', color: '#999' }}><i className=\"icofont-drug\"></i> Current Medications</label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>Are you taking any medicines at the moment?</label>\r\n                                <select\r\n                                    id=\"cbxIsOnMedications\"\r\n                                    value={cbxIsOnMedications}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxIsOnMedications(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                        <div className=\"input-group\">\r\n                                <label>Add Medication</label>\r\n                                <input\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Select File (optional)</label>\r\n                                <input\r\n                                    id=\"txtCurrentMedications\"\r\n                                    onChange={() => saveImageToBase64(\"curr\")}\r\n                                    className=\"form-control\"\r\n                                    accept=\".pdf\"\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-row mt-2\">\r\n                        <div className='input-group'>\r\n                            <label>Diagnosis Report (.pdf)</label>\r\n                            <input\r\n                                id=\"txtDiagnosisReport\"\r\n                                onChange={() => saveImageToBase64(\"diag\")}\r\n                                className=\"form-control\"\r\n                                accept=\".pdf\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalHistoryDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Lifestyle = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Lifestyle</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Smoking Habit</td>\r\n                            <td>{props.data?.lifeStyle?.smokingHabbit}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Alcohol Consumption</td>\r\n                            <td>{props.data?.lifeStyle?.alcoholConsumption}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Activity Level</td>\r\n                            <td>{props.data?.lifeStyle?.activityLevel}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Food Preference</td>\r\n                            <td>{props.data?.lifeStyle?.foodPreference}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <LifestyleDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LifestyleDialog = props => {\r\n\r\n    const [txtSmokingHabits, setTxtSmokingHabits] = useState(props.data.lifeStyle?.smokingHabbit)\r\n    const [txtAlcohol, setTxtAlcohol] = useState(props.data.lifeStyle?.alcoholConsumption)\r\n    const [txtActivityLevel, setTxtActivityLevel] = useState(props.data.lifeStyle?.activityLevel)\r\n    const [txtFoodPreference, setTxtFoodPreference] = useState(props.data.lifeStyle?.foodPreference)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            lifeStyle: {\r\n                \"smokingHabbit\": txtSmokingHabits,\r\n                \"alcoholConsumption\": txtAlcohol,\r\n                \"activityLevel\": txtActivityLevel,\r\n                \"foodPreference\": txtFoodPreference\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Smoking Habits</label>\r\n                            <select\r\n                                id=\"txtSmokingHabits\"\r\n                                value={txtSmokingHabits}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtSmokingHabits(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"I don't smoke\">I don't smoke</option>\r\n                                <option value=\"I used to, but I quit\">I used to, but I quit</option>\r\n                                <option value=\"1-2/day\">1-2/day</option>\r\n                                <option value=\"3-5/day\">3-5/day</option>\r\n                                <option value=\"5-10/day\">5-10/day</option>\r\n                                <option value=\"> 10/day\">{'> 10/day'}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Alcohol Consumption</label>\r\n                            <select\r\n                                id=\"txtAlcohol\"\r\n                                value={txtAlcohol}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtAlcohol(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Non-Drinker\">Non-Drinker</option>\r\n                                <option value=\"Rare\">Rare</option>\r\n                                <option value=\"Social\">Social</option>\r\n                                <option value=\"Regular\">Regular</option>\r\n                                <option value=\"Heavy\">Heavy</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Activity Level</label>\r\n                            <select\r\n                                id=\"txtActivityLevel\"\r\n                                value={txtActivityLevel}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtActivityLevel(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Sedentary (Low)\">Sedentary (Low)</option>\r\n                                <option value=\"Moderately Active (Normal)\">Moderately Active (Normal)</option>\r\n                                <option value=\"Active (High)\">Active (High)</option>\r\n                                <option value=\"Athletic (Very High)\">Athletic (Very High)</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Food Preference</label>\r\n                            <select\r\n                                id=\"txtFoodPreference\"\r\n                                value={txtFoodPreference}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtFoodPreference(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Vegetarian\">Vegetarian</option>\r\n                                <option value=\"Non-Vegetarian\">Non-Vegetarian</option>\r\n                                <option value=\"Eggetarian\">Eggetarian</option>\r\n                                <option value=\"Vegan\">Vegan</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../components/header\";\r\nimport { PatientTabHeaders } from \"./tab-pages/patient-tab-headers\";\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Contact } from \"./tab-pages/contact\";\r\nimport { Personal } from \"./tab-pages/personal\"\r\nimport { Medical } from \"./tab-pages/medical\";\r\nimport { MedicalHistory } from \"./tab-pages/medical-history\";\r\nimport { Lifestyle } from \"./tab-pages/lifestyle\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\n\r\nconst Patients = props => {\r\n\r\n    const [patientsData, setPatientsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n    const [picture, setPicture] = useState();\r\n    const [appointmentBooked, setAppointmentBooked] = useState(false);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const refPicture = useRef();\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err, \"exclamation\");\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    function objToString(obj) {\r\n        return Object.entries(obj).reduce((str, [p, val]) => {\r\n            return `${str}${p}::${val}\\n`;\r\n        }, '');\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        resetData && setTimeout(() => {\r\n\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setPatientsData(res.data);\r\n\r\n                        //Make another fetch for the photo\r\n                        fetch(res.data.photo, { method: 'GET' })\r\n                            .then(response => { return objToString(response) })\r\n                            .then(response => {\r\n                                setPicture(response)\r\n                                console.log(response);\r\n                            })\r\n                            .catch(error => {\r\n                                alert(error)\r\n                            });\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }, 5000)\r\n\r\n        props.setIsLoaderVisible(false);\r\n\r\n    }, [resetData])\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n                    refPicture.current = picture;\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={picture || \"/portfolio/avatar.png\"}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Patient</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{patientsData.name}</h2>\r\n                        <h4 className=\"d-none\"><i className=\"icofont-location-pin\"></i>{props.data?.address && props.data.address[0]?.city}, {props.data?.address && props.data.address[0]?.state}</h4>\r\n                    </div>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Upcoming Appointment</h4>\r\n                        </div>\r\n                        {appointmentBooked ? <div className=\"appointment\">\r\n                            <div className=\"details\">\r\n                                <h2>Dr. Andrews Collins</h2>\r\n                                <h3>Available</h3>\r\n                                <h4><i className=\"icofont-phone\" /> +01 555 1020</h4>\r\n                            </div>\r\n                            <img src=\"/portfolio/team-3.jpg\" />\r\n                        </div>\r\n                            : <div>\r\n                                <button\r\n                                    className=\"btn-main\"\r\n                                    onClick={() => {\r\n                                        alert(\"To add an appointment page by tomorrow!\")\r\n                                        setAppointmentBooked(true)\r\n                                    }}\r\n                                >Book an Appointment...\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <PatientTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 3 && <Medical\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 4 && <MedicalHistory\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 5 && <Lifestyle\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;","\r\nexport const DoctorsTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-karate\"></i>Portfolio\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{props.data.address}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailAddress}</td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [txtAddress, setTxtAddress] = useState(props.data.address ? [...props.data.address] : \"\");\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailAddress);\r\n\r\n    const updateContact = () => {\r\n        const data = {\r\n            address: [txtAddress],\r\n            emailAddress: txtEmail,\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Address</label>\r\n                            <textarea\r\n                                id=\"txtAddress\"\r\n                                value={txtAddress}\r\n                                onChange={e => setTxtAddress(e.target.value)}\r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={() => updateContact()}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Portfolio = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const specialization = props.data.specialization.certification\r\n        ? `${props.data?.specialization?.certification}, ${props.data?.specialization?.type}`\r\n        : \"\";\r\n\r\n    const license = props.data.license.certification\r\n        ? `${props.data?.license?.certification} - ${props.data?.license?.issueDate}`\r\n        : \"\";\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Qualifications and Specializations</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Qualification</td>\r\n                            <td>{props.data?.qualification && [...props.data?.qualification]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Specialization</td>\r\n                            <td>{specialization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>License</td>\r\n                            <td>{license}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <PortfolioDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PortfolioDialog = props => {\r\n    const [txtQualification, setTxtQualification] = useState(props.data.qualification ? [...props.data?.qualification] : '')\r\n    const [txtSpecialization, setTxtSpecialization] = useState(props.data?.specialization?.certification)\r\n    const [txtSpecializationType, setTxtSpecializationType] = useState(props.data?.specialization?.type)\r\n    const [txtLicense, setTxtLicense] = useState(props.data?.license?.certification)\r\n    const [txtLicenseIssueDate, setTxtLicenseIssueDate] = useState(props.data?.license?.issueDate)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            qualification: [txtQualification],\r\n            license: {\r\n                certification: txtLicense,\r\n                issueDate: txtLicenseIssueDate\r\n            },\r\n            specialization: {\r\n                certification: txtSpecialization,\r\n                type: txtSpecializationType\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Portfolio</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Qualification</label>\r\n                            <textarea\r\n                                id=\"txtQualification\"\r\n                                value={txtQualification}\r\n                                onChange={e => setTxtQualification(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <textarea\r\n                                id=\"txtSpecialization\"\r\n                                value={txtSpecialization}\r\n                                onChange={e => setTxtSpecialization(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Specialization - Type</label>\r\n                            <input\r\n                                id=\"txtSpecializationType\"\r\n                                value={txtSpecializationType}\r\n                                onChange={e => setTxtSpecializationType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>License</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"txtLicense\"\r\n                                value={txtLicense}\r\n                                onChange={e => setTxtLicense(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Issue Date</label>\r\n                            <input\r\n                                id=\"txtLicenseIssueDate\"\r\n                                value={txtLicenseIssueDate}\r\n                                onChange={e => setTxtLicenseIssueDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../components/header\";\r\nimport { DoctorsTabHeaders } from \"./tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport { Portfolio } from \"./tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [picture, setPicture] = useState(doctorsData.photo);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (resetData) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n                        setPicture(res.data.photo);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }\r\n\r\n    }, [resetData])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo === \"\" ? \"/portfolio/team-4.jpg\" : picture}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Doctor</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{doctorsData.name}</h2>\r\n                        <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4>\r\n                    </div>\r\n                    <h3>{doctorsData.specialization?.certification}</h3>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\n\r\nexport const DoctorsLogin = props => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [txtDoctorsID, setTxtDoctorsID] = useState(\"\");\r\n    const [txtPhone, setTxtPhone] = useState(\"\");\r\n    const [txtPassword, setTxtPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            loginId: txtPhone,\r\n            role: \"Doctor\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200 && response.uidNo === txtDoctorsID) {\r\n                    //Proceed to the doctors page...\r\n                    sessionStorage.setItem('token', response.token)\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo)\r\n                    history.push(\"/doctors/profile\");\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"../mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Doctors' Login!</h2>\r\n\r\n                            <h4>Enter your details</h4>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtDoctorsID\"\r\n                                        value={txtDoctorsID}\r\n                                        onChange={e => setTxtDoctorsID(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                        placeholder='Doctor ID'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtPhone\"\r\n                                        value={txtPhone}\r\n                                        onChange={e => setTxtPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                        placeholder='Registered Phone Number'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtPassword\"\r\n                                        value={txtPassword}\r\n                                        onChange={e => setTxtPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        placeholder='Password'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Login</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"../doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","export const Cards = (props) => {\r\n    return (\r\n        <div className=\"s-card\">\r\n            <div>\r\n                <div className=\"numbers\">{props.numbers}</div>\r\n                <div className=\"cardName\">{props.totalCases}</div>\r\n            </div>\r\n            <div className=\"iconBox\">\r\n                <i className={props.icofontClass} aria-hidden=\"true\"></i>\r\n                <span>{props.lastUpdatedTime}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const cardsValues = [\r\n    {\r\n      id: 1,\r\n      numbers: 364,\r\n      cases: \"Total Cases\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-medicine\",\r\n    },\r\n    {\r\n      id: 2,\r\n      numbers: 241,\r\n      cases: \"Patients\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-patient-file\",\r\n    },\r\n    {\r\n      id: 3,\r\n      numbers: 82,\r\n      cases: \"Doctors\",\r\n      lastUpdatedTime: \"7 hours ago\",\r\n      icofontClass: \"icofont-doctor\",\r\n    },\r\n    {\r\n      id: 4,\r\n      numbers: 43,\r\n      cases: \"Schedules\",\r\n      lastUpdatedTime: \"12 hours ago\",\r\n      icofontClass: \"icofont-delivery-time\",\r\n    },\r\n  ];\r\n\r\n  export default cardsValues;\r\n","import { Cards } from './cards'\r\nimport cardsValues from './cards-values'\r\n\r\nexport const CardBox = () => {\r\n    const vals = cardsValues.map(item => {\r\n        return (<Cards\r\n            key={item.id}\r\n            numbers={item.numbers}\r\n            totalCases={item.cases}\r\n            lastUpdatedTime={item.lastUpdatedTime}\r\n            icofontClass={item.icofontClass}\r\n        />)\r\n    })\r\n\r\n    return (\r\n        \r\n        <div className=\"cardBox\">\r\n            {vals}\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const DoctorsListItem = props => {\r\n    return (\r\n        <div\r\n            className={props.selectedDoctor === props.id ? \"d-list-item active\" : \"d-list-item\"}\r\n            onClick={() => props.setItem(props.id)}\r\n        >\r\n            <div className=\"image-part\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                <p><span>♥</span>{props.rating}</p>\r\n            </div>\r\n            <div className=\"name-part\">\r\n                <h3>{props.name}</h3>\r\n                <h4>{props.specialization}</h4>\r\n                <span className={props.status?.toLowerCase()}>\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { DoctorsTabHeaders } from \"../../doctors-profile/tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../../assets/common/base-url\";\r\nimport { Portfolio } from \"../../doctors-profile/tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = props.selectedDoctor;\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/search/\" + idValue, params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n        //Always remember to reset the data...\r\n        setResetData(false);\r\n\r\n    }\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n\r\n    }, [resetData, props.selectedDoctor])\r\n\r\n    const activateProfile = () => {\r\n        //Simply make the verification status of the particular individual Active...\r\n        const data = {\r\n            verification: {\r\n                status: \"Active\",\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n    const displayActivate = doctorsData.verification?.status !== \"Pending\" ? \"d-none\" : \"btn-main\";\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"dash-body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo || \"/portfolio/avatar.png\"}\r\n                            alt=\"\"\r\n                        />\r\n                        <div className=\"title\">\r\n                            <h2>{doctorsData.name}</h2>\r\n                            {/* <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4> */}\r\n                        </div>\r\n                        <h3>{doctorsData.specialization?.certification}</h3>\r\n                        <button\r\n                            id=\"btnActivate\"\r\n                            className={displayActivate}\r\n                            onClick={activateProfile}\r\n                        >\r\n                            Activate Profile\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { Header } from \"../../components/header\";\r\nimport { CardBox } from './cardbox';\r\nimport { DoctorsListItem } from './doctors-list-item';\r\nimport Doctors from './doctors'\r\n\r\nconst Dashboard = props => {\r\n\r\n    const [txtSearch, setTxtSearch] = useState(\"\");\r\n    const [doctorsList, setDoctorsList] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n\r\n    const fetchDoctors = () => {\r\n        const params = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            method: 'GET'\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsList(res.data);\r\n                    setSelectedDoctor(res.data[0]?.id)\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Load a doctors' list immediately the form loads...\r\n        fetchDoctors();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const output = doctorsList.filter(item => item.name === txtSearch)\r\n        if (txtSearch !== \"\") {\r\n            setDoctorsList(output)\r\n        } else if (txtSearch === \"\") {\r\n            setDoctorsList(doctorsList);\r\n        }\r\n\r\n        setSelectedDoctor(doctorsList[0]?.id)\r\n\r\n    }, [txtSearch])\r\n\r\n    const listItems = doctorsList.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                id={item._id}\r\n                name={item.name}\r\n                src={item.photo}\r\n                rating={`4.${Math.floor(Math.random() * 9)}`}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                key={index}\r\n                setItem={value => setSelectedDoctor(value)}\r\n                selectedDoctor={selectedDoctor}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='main'>\r\n                <CardBox />\r\n                <div className='main-content'>\r\n                    <div className=\"left-main mt-2\">\r\n                        <div className=\"input-group d-none\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtSearch\"\r\n                                type=\"text\"\r\n                                value={txtSearch}\r\n                                onChange={e => setTxtSearch(e.target.value)}\r\n                                placeholder='Search for Doctor'\r\n\r\n                            />\r\n                            <i className=\"icofont-search\"></i>\r\n                        </div>\r\n                        <div className='doctors-list'>\r\n                            {listItems}\r\n                        </div>\r\n                    </div>\r\n                    <div className='right-main'>\r\n                        {selectedDoctor && <Doctors\r\n                            setIsLoaderVisible={props.setIsLoaderVisible}\r\n                            showToast={props.showToast}\r\n                            selectedDoctor={selectedDoctor}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { Login } from './login/login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Register } from './register/register';\nimport Loader from './components/loader';\nimport { useState } from 'react';\nimport Toast from './components/toast';\nimport Patients from './patients-profile/patients';\nimport Doctors from './doctors-profile/doctors';\nimport { DoctorsLogin } from './login/doctors-login';\nimport Dashboard from './admin/dashboard/dashboard';\n\nfunction App() {\n\n  const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n  const [toastVis, setToastVis] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [msgBoxType, setMsgBoxType] = useState(\"success\");\n\n  const ShowToast = (message, messageBoxType) => {\n    setToastMsg(message);\n    setMsgBoxType(messageBoxType);\n    setToastVis(true);\n  }\n\n  return (\n    <>\n      <Loader isVisible={isLoaderVisible} />\n      <Toast\n        toastMessage={toastMsg}\n        msgBoxType={msgBoxType}\n        toastVisibility={toastVis}\n        setToastVisibility={setToastVis}\n      />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Login showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/patients/profile\">\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/profile\">\n            <Doctors showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/login\">\n            <DoctorsLogin showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/admin/dashboard\">\n            <Dashboard showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/dashboard.css'\nimport './assets/css/new-loader.css'\nimport './assets/css/main.css'\nimport './assets/css/toast.css'\nimport './assets/css/dialog.css'\nimport './assets/css/tab-pages.css'\nimport './assets/200/icofont/icofont.min.css'\nimport './assets/200/boxicons/css/boxicons.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}