{"version":3,"sources":["../../lib/@meet/web-sdk/lib/init.js","assets/common/base-url.js","login/OTPLogin.js","login/login-headers.js","login/login.js","register/register.js","components/loader.js","components/toast.js","components/nav-bar.js","patients-profile/tab-pages/patient-tab-headers.js","assets/common/countries.js","patients-profile/tab-pages/contact.js","assets/common/operations.js","patients-profile/tab-pages/personal.js","patients-profile/tab-pages/medical.js","assets/common/constants.js","patients-profile/tab-pages/lifestyle.js","assets/common/file-to-base64.js","dhp/others/medical-history-dialog.js","components/image-dialog.js","components/medication-row-item.js","dhp/others/sugeries-dialog.js","dhp/medical-records/surgeries.js","dhp/medical-records/injuries.js","dhp/medical-records/chronic-diseases.js","dhp/medical-records/diagnosis-report.js","patients-profile/patients.js","components/header.js","doctors-profile/tab-pages/doctors-tab-headers.js","doctors-profile/tab-pages/personal.js","doctors-profile/tab-pages/contact.js","doctors-profile/tab-pages/portfolio.js","doctors-profile/doctors.js","login/doctors-login.js","admin/dashboard/cards.js","admin/dashboard/cards-values.js","admin/dashboard/cardbox.js","admin/dashboard/doctors-list-item.js","admin/dashboard/doctors.js","admin/dashboard/dashboard.js","../../lib/@meet/web-sdk/lib/constants/index.js","../../lib/@meet/web-sdk/lib/utils/index.js","../../lib/@meet/web-sdk/lib/components/MeetSpinner.js","../../lib/@meet/web-sdk/lib/components/Meet.js","meeting/meeting-tab-headers.js","meeting/meeting-tabs/complaints.js","meeting/meeting-tabs/next-consult.js","meeting/meeting-tabs/prescriptions.js","meeting/meeting-tabs/suggested-lifestyle.js","meeting/meeting-tabs/tests-and-labs.js","meeting/meeting-dialog.js","meeting/meeting.js","hooks/useCheckAppointmentBooked.js","components/dhp-header.js","appointments/doctors-dialog.js","assets/common/split-date.js","appointments/schedule-appointment.js","dhp/side-tab-pages/appointments.js","dhp/medical-records/medical-records-tab-headers.js","dhp/medical-records/prescriptions.js","dhp/side-tab-pages/medical-records.js","dhp/others/side-bar-item.js","dhp/others/side-bar-list.js","dhp/side-tab-pages/medical-insurance.js","dhp/side-tab-pages/genetic-information.js","dhp/side-tab-pages/vaccination-reports.js","dhp/others/health-profile-bar.js","dhp/digital-health-passport.js","page-404.js","App.js","reportWebVitals.js","index.js"],"names":["scriptPromise","ApiPath","CryptoApiPath","OTPLogin","props","history","useHistory","useState","countdownTimer","setCountdownTimer","input1","setInput1","input2","setInput2","input3","setInput3","input4","setInput4","input5","setInput5","input6","setInput6","useEffect","setInterval","value","postLogin","a","OTP","data","loginId","phoneNumber","role","otp","options","setIsLoaderVisible","fetch","JSON","stringify","then","res","json","statusCode","showToast","sessionStorage","setItem","token","uidNo","push","message","catch","err","error","displayClasss","showDialog","className","id","onClick","hideDialog","type","maxLength","onChange","e","target","keyCode","document","getElementById","focus","LoginHeaders","style","selectedTab","setSelectedTab","Login","setValue","displayOTP","setDisplayOTP","txtPassportID","setTxtPassportID","txtPassword","setTxtPassword","src","marginBottom","placeholder","phone","paddingTop","paddingBottom","to","password","response","display","Register","name","setName","email","setEmail","setRole","setPhone","setPassword","verifyPassword","setVerifyPassword","autoComplete","val","emailId","substring","minHeight","width","Loader","displayClass","isVisible","Toast","visStatus","toastVisibility","toastMessage","setTimeout","setToastVisibility","iconSrc","contentStyle","headerStyle","msgBoxType","borderLeft","color","innerText","alt","NavBar","picture","signOut","localStorage","activeLink","parse","getItem","address","city","PatientTabHeaders","countriesList","code","Contact","setShowDialog","houseNumber","street","state","district","postalCode","showPhone","contactPerson","length","contactDetails","relationship","country","setResetData","setPatientsData","ContactDialog","addressData","txtPhone","setTxtPhone","addressType","setAddressType","txtHouseNo","setTxtHouseNo","txtStreet","setTxtStreet","txtCity","setTxtCity","txtDistrict","setTxtDistrict","txtState","setTxtState","txtPostalCode","setTxtPostalCode","txtCountry","setTxtCountry","txtEmail","setTxtEmail","txtContactPerson","setTxtContactPerson","txtRelationship","setTxtRelationship","contact","txtContactPhone","setTxtContactPhone","displayDialog","countryList","map","item","index","rows","shortDateString","dateValue","fullDate","Date","getDate","monthToShortString","getMonth","getFullYear","intMonthVal","retMonth","Personal","gender","maritalStatus","birthDate","communicationLang","languagePref","deceased","deceasedBoolean","deceasedDateTime","PersonalDialog","showDeceased","setShowDeceased","cbxDeceased","setCbxDeceased","fullName","setFullName","cbxGender","setCbxGender","cbxMaritalStatus","setCbxMaritalStatus","txtBirthDate","setTxtBirthDate","txtLanguage","setTxtLanguage","txtDeceasedDate","setTxtDeceasedDate","Medical","Object","keys","allergies","join","managingOrganization","general","bloodGroup","height","weight","bmi","chestExpansion","vision","bp","pulse","oxygenSaturation","MedicalDialog","txtAllergies","setTxtAllergies","chkAllergies","setChkAllergies","txtManagingOrg","setTxtManagingOrg","setBloodGroup","setHeight","setWeight","setVision","setChestExpansion","bloodPressure","setBloodPressure","setPulse","setOxygenSaturation","setBmi","selectedAllergies","setSelectedAllergies","allergiesList","allergiesMap","parseInt","toString","handleBlur","minValue","maxValue","inputValue","itemElt","classList","add","splitValue","split","selItem","indexOf","splice","float","remove","onBlur","disabled","constants","putOptions","getOptions","postOptions","Lifestyle","lifeStyle","smokingHabbit","alcoholConsumption","activityLevel","foodPreference","LifestyleDialog","txtSmokingHabits","setTxtSmokingHabits","txtAlcohol","setTxtAlcohol","txtActivityLevel","setTxtActivityLevel","txtFoodPreference","setTxtFoodPreference","txtAnyMedicationTaken","setTxtAnyMedicationTaken","txtRelapse","setTxtRelapse","txtWhenQuit","setTxtWhenQuit","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","MedicalHistoryDialog","txtCurrentMedications","setTxtCurrentMedications","txtAddMedication","setTxtAddMedication","cbxIsOnMedications","setCbxIsOnMedications","txtMedicationDescription","setTxtMedicationDescription","setMedicationsData","medicalData","title","border","borderRadius","padding","transform","questionString","fileUpload","querySelector","files","size","saveImageToBase64","accept","updateField","description","records","ImageDialog","imageContainerDisplay","embedContainer","imageSource","imageExtension","dialogClass","setImageDisplay","hideImageDialog","MedicationRowItem","showImageDialog","SurgeriesDialog","inputArray","Surgeries","surgeries","medicationsArray","setMedicationsArray","dialogVisible","setDialogVisible","medicationsExist","setMedicationsExist","imageLink","setImageLink","imageDialogVisible","setImageDialogVisible","imgLink","currentMeds","fontSize","Injuries","injuries","ChronicDiseases","chronicDiseases","DiagnosisReport","diagnosisReport","Patients","patientsData","outputText","setOutputText","photo","setPicture","tempPix","setTempPix","dropZone","fileInput","addEventListener","preventDefault","dataTransfer","removeEventListener","console","log","Header","background","outline","cursor","fontFamily","marginRight","DoctorsTabHeaders","emailAddress","txtAddress","setTxtAddress","updateContact","Portfolio","specialization","certification","license","issueDate","qualification","PortfolioDialog","txtQualification","setTxtQualification","txtSpecialization","setTxtSpecialization","txtSpecializationType","setTxtSpecializationType","txtLicense","setTxtLicense","txtLicenseIssueDate","setTxtLicenseIssueDate","Doctors","doctorsData","setDoctorsData","resetData","idValue","params","DoctorsLogin","txtDoctorsID","setTxtDoctorsID","validatedbyotp","Cards","numbers","totalCases","icofontClass","lastUpdatedTime","cardsValues","cases","CardBox","vals","DoctorsListItem","selectedDoctor","rating","status","toLowerCase","fetchUsersData","displayActivate","verification","Dashboard","txtSearch","setTxtSearch","doctorsList","setDoctorsList","setSelectedDoctor","headers","method","fetchDoctors","listItems","Math","floor","random","DEFAULT_DOMAIN","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","apply","fetchExternalApi","domain","window","JitsiMeetExternalAPI","script","createElement","async","Error","head","appendChild","instancesCounter","meetspinner","_jsx","_Fragment","children","textAlign","fontWeight","class","Meet","roomName","subject","interfaceConfigOverwrite","jwt","invitees","devices","userInfo","onApiReady","componentId","setComponentId","loading","setLoading","apiLoaded","setApiLoaded","externalApi","useRef","apiRef","meetingRef","Spinner","configOverwrite","getIFrameRef","iframeRef","api","current","loadIFrame","useCallback","parentNode","renderLoadingSpinner","_jsxs","ref","MeetingTabHeaders","Complaints","cbxComplaints","setCbxComplaints","Remarks","txtRemarks","setTxtRemarks","Observations","txtObservations","setTxtObservations","SelectedSymptoms","selectedSymptoms","setSelectedSymptoms","symptoms","symptomsObj","setComplaints","setObs","NextConsult","Revisit","cbxRevisit","setCbxRevisit","RevisitDate","cbxRevisitDate","setCbxRevisitDate","Description","txtDescription","setTxtDescription","setRevisitData","Prescriptions","Name","cbxName","setCbxName","cbxFormulation","setCbxFormulation","cbxUnits","setCbxUnits","cbxDosage","setCbxDosage","cbxFrequency","setCbxFrequency","cbxDuration","setCbxDuration","cbxHowToTake","setCbxHowToTake","marginTop","opacity","SuggestedLifestyle","SmokingHabits","Alcohol","ActivityLevel","FoodPreference","Physiotherapy","txtPhysiotherapy","setTxtPhysiotherapy","FoodsToAvoid","txtFoodsToAvoid","setTxtFoodsToAvoid","selectedPhysio","setSelectedPhysio","selectedFoodsToAvoid","setSelectedFoodsToAvoid","setPhysiotherapy","setFoodsToAvoid","setRecommendedFoods","TestsAndLabs","Tests","cbxTests","setCbxTests","SelectedTests","selectedTests","setSelectedTests","tests","testsObj","setRecommendedTests","MeetingDialog","patientData","age","setAge","complaints","physiotherapy","foodsToAvoid","recommendedFoods","recommendedTests","revisitData","obs","dateDiff","minWidth","doctorId","alert","updateData","foodToAvoid","recommendedFood","revisit","observations","medicinesPrescribed","updatePrescriptions","Meeting","setToken","setTxtPastPrescription","meetingData","setMeetingData","patientId","setPatientId","setDoctorId","fetchToken","searchString","location","search","urlParams","URLSearchParams","meetingId","get","gravatar","past_prescription","statusText","handleClose","suspendDetected","eApi","apiObj","addEventListeners","readyToClose","displayName","useCheckAppointmentBooked","setAppointmentBooked","appointmentBooked","setError","isLoading","setIsLoading","pastAppointments","setPastAppointments","timeValueOfToday","getTime","timeValueOf3MonthsTime","filter","patient_id","DHPHeader","DoctorsDialog","today","cbxSpeciality","setCbxSpeciality","txtDate","setTxtDate","spanValue","setSpanValue","timeOfCommencement","setTimeOfCommencement","doctorsArray","thisDoctor","find","setSpecialObject","speciality","startTime","duration","meetingID","meeting_id","doctor_id","doctor_name","setDoctorSelected","hideDoctorsDialog","selDoctor","setSelDoctor","randomValue","formatDate","SplitDateFromTimestamp","timeStamp","longDate","waDate","getHours","getMinutes","getSeconds","ScheduleAppointment","doctorSelected","showDoctorDialog","setShowDoctorDialog","txtPatientsInstruction","setTxtPatientsInstruction","txtSupportingInfo","setTxtSupportingInfo","fileConsent","setFileConsent","specialObject","alignItems","justifyContent","dateTime","borderBottom","payLoad","hideAppointmentDialog","Appointments","showAppointmentDialog","setShowAppointmentDialog","appTime","setAppTime","dateToString","setDateToString","remainingTime","apptTime","starttime","toDateString","diff","noPastAppointments","showPastAppointments","meetinng_id","pastPrescriptions","MedicalRecordsTabHeaders","prescriptionsArray","prescriptionsExist","setPrescriptionsExist","MedicalRecords","SideBarItem","headerText","contentText","selectedIndex","setSelectedIndex","isActive","sideBarList","MedicalInsurance","GeneticInformation","VaccinationReports","HealthProfileBar","percentage","setPercentage","checkCircleSector","progressStatus","pix","lifeStyle1","lifeStyle2","lifeStyle3","lifeStyle4","phoneNo","currentMedications","DigitalHealthPassport","sideBarItems","Page404","goBack","App","isLoaderVisible","toastVis","setToastVis","toastMsg","setToastMsg","setMsgBoxType","ShowToast","messageBoxType","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ac19cde8.chunk.js","sourcesContent":["import { DEFAULT_DOMAIN } from \"@meet/web-sdk/lib/constants\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst loadExternalApi = (domain) => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        if (window.JitsiMeetExternalAPI) {\n            return resolve(window.JitsiMeetExternalAPI);\n        }\n        const script = document.createElement('script');\n        script.async = true;\n        script.src = `https://${DEFAULT_DOMAIN}/external_api.js`;\n        script.onload = () => resolve(window.JitsiMeetExternalAPI);\n        script.onerror = () => reject(new Error(`Script load error: ${script.src}`));\n        document.head.appendChild(script);\n    });\n});\nlet scriptPromise;\n/**\n * Injects the external_api.js script for the corresponding domain in DOM\n * and resolves with either the `JitsiMeetExternalApi` class definition or an error\n *\n * @param {string} domain - The domain of the external API\n * @returns {Promise<MeetExternalApi>} - the JitsiMeetExternalAPI or an error\n */\nexport const fetchExternalApi = (domain) => {\n    if (scriptPromise) {\n        return scriptPromise;\n    }\n    scriptPromise = loadExternalApi(DEFAULT_DOMAIN);\n    return scriptPromise;\n};\n","// // export const ApiPath = \"http://122.176.120.160:4000/\";\r\nexport const ApiPath = \"http://94.250.201.90:4000/\";\r\nexport const CryptoApiPath = 'https://crypto.webshrine.in/api/';","import { useState, useEffect } from \"react\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst OTPLogin = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [countdownTimer, setCountdownTimer] = useState(45);\r\n\r\n    const [input1, setInput1] = useState('')\r\n    const [input2, setInput2] = useState('')\r\n    const [input3, setInput3] = useState('')\r\n    const [input4, setInput4] = useState('')\r\n    const [input5, setInput5] = useState('')\r\n    const [input6, setInput6] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (countdownTimer <= 0) {\r\n            setInterval(() => {\r\n                setCountdownTimer(value => (value - 1));\r\n            }, 1000)\r\n        }\r\n\r\n    }, [countdownTimer])\r\n\r\n    const postLogin = async () => {\r\n        //Build the OTP...\r\n        try {\r\n            const OTP = input1 + input2 + input3 + input4 + input5 + input6;\r\n\r\n            const data = {\r\n                loginId: props.phoneNumber,\r\n                role: 'Patient',\r\n                otp: OTP,\r\n            }\r\n\r\n            const options = {\r\n                'headers': {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                'method': 'POST',\r\n            }\r\n\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"login\", { ...options, 'body': JSON.stringify(data) })\r\n                ?.then(res => (res.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false);\r\n\r\n                    if (res.statusCode === 200) {\r\n                        props.showToast(\"Login successful!\", 'success');\r\n\r\n                        //Remember to store the bearer token\r\n                        sessionStorage.setItem(\"token\", res.token);\r\n                        sessionStorage.setItem(\"id_val\", res.uidNo);\r\n\r\n                        sessionStorage.setItem('patient', JSON.stringify(res.data));\r\n\r\n                        history.push(\"/patients/digital-health-passport\")\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n        } catch (error) {\r\n            props.showToast(error, 'exclamation')\r\n        }\r\n    }\r\n\r\n    const displayClasss = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayClasss}>\r\n            <div className=\"dialog-container otp\">\r\n                <div className=\"dialog-content\">\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\">Confirm your phone number</h2>\r\n                        <span id=\"close_toast\" onClick={props.hideDialog}>&times;</span>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <h4>To complete your login, please enter the 6-digit OTP sent to\r\n\r\n                        </h4>\r\n                        <h2 className=\"phone-no\">{props.phoneNumber}</h2>\r\n                        <div className=\"input-array\">\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input1\"\r\n                                value={input1}\r\n                                onChange={e => {\r\n                                    setInput1(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input2\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input2\"\r\n                                value={input2}\r\n                                onChange={e => {\r\n                                    setInput2(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input3\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input3\"\r\n                                value={input3}\r\n                                onChange={e => {\r\n                                    setInput3(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input4\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input4\"\r\n                                value={input4}\r\n                                onChange={e => {\r\n                                    setInput4(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input5\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input5\"\r\n                                value={input5}\r\n                                onChange={e => {\r\n                                    setInput5(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input6\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input6\"\r\n                                value={input6}\r\n                                onChange={e => {\r\n                                    setInput6(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input1\").focus();\r\n                                }}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"resend-group d-none\">\r\n                            <div>\r\n                                <p>Didn't receive the OTP?</p>\r\n                                <button>Resend</button>\r\n                            </div>\r\n                            <div>00:{countdownTimer}</div>\r\n                        </div>\r\n\r\n                        <div className=\"otp-call d-none\">\r\n                            <button>Get OTP on call</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button className=\"btn-continue\" onClick={postLogin}>Continue</button>\r\n                        <button className=\"btn-cancel\" onClick={props.hideDialog}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OTPLogin;","\r\nexport const LoginHeaders = props => {\r\n\r\n    return (\r\n        <div className=\"tab-container\" style={{ ...props.style }}>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-phone\"></i>Phone and OTP\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-id-card\"></i>Passport ID\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport OTPLogin from './OTPLogin';\r\nimport { LoginHeaders } from './login-headers';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [displayOTP, setDisplayOTP] = useState(false);\r\n    const [selectedTab, setSelectedTab] = useState(1);\r\n\r\n    const [txtPassportID, setTxtPassportID] = useState('')\r\n    const [txtPassword, setTxtPassword] = useState('')\r\n\r\n    const history = useHistory();\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = selectedTab === 1 ? { phoneNumber: value } : {\r\n            loginId: txtPassportID,\r\n            password: txtPassword\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n        const route = selectedTab === 1 ? \"sendSms\" : \"login\";\r\n\r\n        fetch(ApiPath + route, options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode !== 200) {\r\n                    showToast(response.message, 'exclamation');\r\n                } else {\r\n                    //Else, proceed... show the 2fa page...\r\n                    if (selectedTab === 1) {\r\n                        showToast(\"Enter the OTP sent to your registered phone number to proceed.\", \"information\");\r\n                        setDisplayOTP(true);\r\n\r\n                    } else {\r\n                        showToast(response.message, \"information\");\r\n\r\n                        //Remember to store the bearer token\r\n                        sessionStorage.setItem(\"token\", response.token);\r\n                        sessionStorage.setItem(\"id_val\", response.uidNo);\r\n\r\n                        //Store patient's data\r\n                        sessionStorage.setItem('patient', JSON.stringify(response.data));\r\n\r\n                        history.push(\"/patients/digital-health-passport\");\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className='smaller-container'>\r\n                    <div className=\"container-divider\">\r\n                        <div className=\"left-sidebar\">\r\n                            <img src=\"./mah-logo.png\" />\r\n\r\n                            <div className=\"left-text\">\r\n                                <h2><i className=\"icofont-check-circled\"></i> Let's get started!</h2>\r\n                                <div className='form-data'>\r\n                                    <LoginHeaders\r\n                                        selectedTab={selectedTab}\r\n                                        setSelectedTab={setSelectedTab}\r\n                                        style={{ marginBottom: '30px' }}\r\n                                    />\r\n\r\n                                    {\r\n                                        selectedTab === 1 &&\r\n                                        <div className='form-row mb-2'>\r\n                                            <h5>Login using Mobile number and OTP</h5>\r\n\r\n                                            <div className='input-group'>\r\n                                                <PhoneInput\r\n                                                    placeholder=\"Enter mobile number\"\r\n                                                    value={value}\r\n                                                    onChange={phone => setValue(phone)}\r\n                                                    className='form-control'\r\n                                                    style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        selectedTab === 2 && <div className='form-row mb-2'>\r\n                                            <h5>Login using Passport ID and Password</h5>\r\n                                            <div className='input-group'>\r\n                                                <input className='form-control'\r\n                                                    placeholder='Enter Passport ID'\r\n                                                    id='txtPassportID'\r\n                                                    value={txtPassportID}\r\n                                                    maxLength={14}\r\n                                                    onChange={e => setTxtPassportID(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className='input-group'>\r\n                                                <input className='form-control'\r\n                                                    type='password'\r\n                                                    placeholder='Enter Password'\r\n                                                    id='txtPassword'\r\n                                                    value={txtPassword}\r\n                                                    onChange={e => setTxtPassword(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <h5>By continuing, you agree to our</h5>\r\n                                    <Link to=\"/admin/dashboard\">Terms and conditions</Link>\r\n\r\n                                    <button\r\n                                        id=\"btnLogin\"\r\n                                        className=\"btn-continue\"\r\n                                        onClick={tryLogin}   //Show 2fa page...\r\n                                    >Continue</button>\r\n                                </div>\r\n                                <div className=\"doctor-register\">\r\n                                    <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                                </div>\r\n                                <div className=\"doctor-register\">\r\n                                    <h4>Returning Doctor? <Link to=\"/doctors/login\">Login here</Link></h4>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                                <p>Certified and secure online healthcare platform</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-sidebar\">\r\n                            <img src=\"./doctors.svg\" />\r\n                            <div className=\"image-text\">\r\n                                <p>India's top doctors to guide you to better health everyday</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                displayOTP && <OTPLogin\r\n                    showDialog={displayOTP}\r\n                    phoneNumber={value}\r\n                    hideDialog={() => setDisplayOTP(false)}\r\n                    showToast={showToast}\r\n                    setIsLoaderVisible={setIsLoaderVisible}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nexport const Register = ({ setIsLoaderVisible, showToast }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\")\r\n    const [role, setRole] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const register = () => {\r\n        //Connect to the api after validation...\r\n        if (name === \"\" || role === \"\" || phone === \"\" || password === \"\" || email === \"\") {\r\n            showToast(\"Complete all fields to proceed!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        if (password !== verifyPassword) {\r\n            showToast(\"Password and verify password fields must match!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            name: name,\r\n            role: role,\r\n            phoneNumber: phone,\r\n            password: password,\r\n            emailId: email,\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"register\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    showToast(\"Registration successful! Now login with the new credentials...\", 'success');\r\n\r\n                    if (response.data.uidNo.substring(0, 1) === \"P\") {\r\n                        history.push(\"/\");\r\n                    } else {\r\n                        history.push(\"/doctors/login\")\r\n                    }\r\n\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='smaller-container'>\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\">\r\n                        <div className='image-box'>\r\n                            <img src=\"./mah-logo.png\" />\r\n                        </div>\r\n                        <div className='float-logo'>\r\n                            <i className='icofont-tick-boxed' />\r\n                        </div>\r\n                        <div className=\"left-text\">\r\n                            {/* Form for details entry... */}\r\n                            <div className=\"form-data\">\r\n                                <h2>Registration <i className='icofont-tick-boxed'/></h2>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Name (Firstname and Lastname)</label>\r\n                                        <input\r\n                                            id=\"name\"\r\n                                            value={name}\r\n                                            onChange={e => setName(e.target.value)}\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            autoComplete='off'\r\n                                            placeholder='Fullname'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Email</label>\r\n                                        <input\r\n                                            id=\"email\"\r\n                                            value={email}\r\n                                            onChange={e => setEmail(e.target.value)}\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            autoComplete='off'\r\n                                            placeholder='Email'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Role</label>\r\n                                        <select\r\n                                            id=\"role\"\r\n                                            value={role}\r\n                                            onChange={e => setRole(e.target.value)}\r\n                                            className=\"form-control\"\r\n                                        >\r\n                                            <option value=\"\">Select Role</option>\r\n                                            <option value=\"Patient\">Patient</option>\r\n                                            <option value=\"Doctor\">Doctor</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Phone</label>\r\n                                        <PhoneInput\r\n                                            placeholder=\"Enter mobile number\"\r\n                                            value={phone}\r\n                                            onChange={val => setPhone(val)}\r\n                                            className='form-control'\r\n                                            style={{ paddingTop: 0, paddingBottom: 0 }}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Password</label>\r\n                                        <input\r\n                                            id=\"password\"\r\n                                            value={password}\r\n                                            onChange={e => setPassword(e.target.value)}\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            autoComplete='off'\r\n                                            placeholder='Password'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"input-group\">\r\n                                        <label className='d-none'>Verify Password</label>\r\n                                        <input\r\n                                            id=\"verifyPasword\"\r\n                                            value={verifyPassword}\r\n                                            onChange={e => setVerifyPassword(e.target.value)}\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder='Verify Password'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <button\r\n                                    id=\"btnLogin\"\r\n                                    className=\"btn-continue\"\r\n                                    style={{ marginBottom: '20px'}}\r\n                                    onClick={register}\r\n                                >Register</button>\r\n                            </div>\r\n\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Already a user? <Link to=\"/\">Login here</Link></h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"right-sidebar\" style={{ minHeight: '80%'}}>\r\n                        <img src=\"./access-account.svg\" style={{ width: '50%' }} />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday...</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const Loader = ({ isVisible }) => {\r\n\r\n    const displayClass = !isVisible ? \"d-none\" : \"new-loader-bg\";\r\n\r\n    return (\r\n        <div className={displayClass}>\r\n            <div className=\"new-loader-container\">\r\n                <span style={{ '--i': 0 }}></span>\r\n                <span style={{ '--i': 1 }}></span>\r\n                <span style={{ '--i': 2 }}></span>\r\n                <span style={{ '--i': 3 }}></span>\r\n                <span style={{ '--i': 4 }}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nconst Toast = (props) => {\r\n\r\n    const visStatus = (props.toastVisibility) ? \"toast\" : \"toast d-none\";\r\n    const message = props.toastMessage === \"Failed to fetch\" ? \"Failed to retrieve data. Check your internet connection and try again.\" : props.toastMessage;\r\n\r\n    function closeToast() {\r\n        props.setToastVisibility(false)\r\n    }\r\n\r\n    if (props.toastVisibility) {\r\n        setTimeout(() => {\r\n            props.setToastVisibility(false)\r\n        }, 8000)\r\n    }\r\n\r\n    let iconSrc = \"\"\r\n    const contentStyle = {}\r\n    const headerStyle = {}\r\n\r\n    switch (props.msgBoxType) {\r\n        case \"success\":\r\n            iconSrc = \"/success.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--main-green)\"\r\n\r\n            headerStyle.color = \"var(--main-green)\"\r\n            headerStyle.innerText = \"Success\"\r\n\r\n            break;\r\n\r\n        case \"information\":\r\n            iconSrc = \"/info.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--bluish)\";\r\n\r\n            headerStyle.color = \"var(--bluish)\"\r\n            headerStyle.innerText = \"Information\"\r\n\r\n            break;\r\n\r\n        case \"exclamation\":\r\n            iconSrc = \"/warning.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--golden-rod)\";\r\n\r\n            headerStyle.color = \"var(--golden-rod)\"\r\n            headerStyle.innerText = \"Error\"\r\n\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        // This returns the basic\r\n        //Frame setup for the custom message box\r\n        // and based on the above props\r\n        // the state values can be changed\r\n        // depending on the values\r\n        // of the\r\n        // 1. Message\r\n        // 2. Box style (information, exclamation or success)\r\n        // 3. The message box visibility (true or false)\r\n        <div className={visStatus}>\r\n            <div className=\"logo\">\r\n                <img id=\"toastIcon\" src={iconSrc} alt=\"\" />\r\n            </div>\r\n            <div className=\"content\" style={contentStyle}>\r\n                <div className=\"content-header\">\r\n                    <h4 id=\"headerText\" style={headerStyle}>MAH Health Care</h4>\r\n                    <span id=\"close_toast\" onClick={closeToast}>&times;</span>\r\n                </div>\r\n                <p id=\"toast_message\">{(message === \"Unauthenticated user\" || message === \"No user found\") ? \"Access Denied!\" : message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast;\r\n","import { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport const NavBar = props => {\r\n\r\n    const { picture } = props;\r\n    const history = useHistory();\r\n\r\n    const signOut = () => {\r\n        //Sign out\r\n        localStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"id_val\", null);\r\n        sessionStorage.setItem('patient', null);\r\n\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className='nav-bar'>\r\n            <Link to='/patients/digital-health-passport' className='logo'>\r\n                <img src='/mah-logo.png' alt='' />\r\n            </Link>\r\n            <div className='links'>\r\n                <Link className={props.activeLink === 1 ? 'active' : ''} to='/patients/digital-health-passport'>Home</Link>\r\n                <Link className={props.activeLink === 2 ? 'active' : ''} to='/patients/profile'>Profile</Link>\r\n                <Link className={props.activeLink === 3 ? 'active' : ''} to='/patients/appointments'>Appointments</Link>\r\n\r\n            </div>\r\n            <div className='image'>\r\n                <h5><i className='icofont-location-pin'></i> {JSON.parse(sessionStorage.getItem('patient')).address[0]?.city}</h5>\r\n                <div className='img-container'>\r\n                    <img\r\n                        className='profile-img'\r\n                        src={picture || '/portfolio/avatar.png'}\r\n                        alt=''\r\n                        onClick={signOut}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"img-flyout d-none\">\r\n                <Link to=\"/patients/profile\"><i className='icofont-ui-user' />My Profile</Link>\r\n                <Link to=\"/\" onClick={signOut}><i className='icofont-sign-out' />Sign out</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const PatientTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-ui-user\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Medical\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-glass\"></i>Lifestyle\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 5 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(5)}\r\n            >\r\n                <i className=\"icofont-history\"></i>History\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export const countriesList = [\r\n    {name: 'Afghanistan', code: 'AF'},\r\n    {name: 'Åland Islands', code: 'AX'},\r\n    {name: 'Albania', code: 'AL'},\r\n    {name: 'Algeria', code: 'DZ'},\r\n    {name: 'American Samoa', code: 'AS'},\r\n    {name: 'AndorrA', code: 'AD'},\r\n    {name: 'Angola', code: 'AO'},\r\n    {name: 'Anguilla', code: 'AI'},\r\n    {name: 'Antarctica', code: 'AQ'},\r\n    {name: 'Antigua and Barbuda', code: 'AG'},\r\n    {name: 'Argentina', code: 'AR'},\r\n    {name: 'Armenia', code: 'AM'},\r\n    {name: 'Aruba', code: 'AW'},\r\n    {name: 'Australia', code: 'AU'},\r\n    {name: 'Austria', code: 'AT'},\r\n    {name: 'Azerbaijan', code: 'AZ'},\r\n    {name: 'Bahamas', code: 'BS'},\r\n    {name: 'Bahrain', code: 'BH'},\r\n    {name: 'Bangladesh', code: 'BD'},\r\n    {name: 'Barbados', code: 'BB'},\r\n    {name: 'Belarus', code: 'BY'},\r\n    {name: 'Belgium', code: 'BE'},\r\n    {name: 'Belize', code: 'BZ'},\r\n    {name: 'Benin', code: 'BJ'},\r\n    {name: 'Bermuda', code: 'BM'},\r\n    {name: 'Bhutan', code: 'BT'},\r\n    {name: 'Bolivia', code: 'BO'},\r\n    {name: 'Bosnia and Herzegovina', code: 'BA'},\r\n    {name: 'Botswana', code: 'BW'},\r\n    {name: 'Bouvet Island', code: 'BV'},\r\n    {name: 'Brazil', code: 'BR'},\r\n    {name: 'British Indian Ocean Territory', code: 'IO'},\r\n    {name: 'Brunei Darussalam', code: 'BN'},\r\n    {name: 'Bulgaria', code: 'BG'},\r\n    {name: 'Burkina Faso', code: 'BF'},\r\n    {name: 'Burundi', code: 'BI'},\r\n    {name: 'Cambodia', code: 'KH'},\r\n    {name: 'Cameroon', code: 'CM'},\r\n    {name: 'Canada', code: 'CA'},\r\n    {name: 'Cape Verde', code: 'CV'},\r\n    {name: 'Cayman Islands', code: 'KY'},\r\n    {name: 'Central African Republic', code: 'CF'},\r\n    {name: 'Chad', code: 'TD'},\r\n    {name: 'Chile', code: 'CL'},\r\n    {name: 'China', code: 'CN'},\r\n    {name: 'Christmas Island', code: 'CX'},\r\n    {name: 'Cocos (Keeling) Islands', code: 'CC'},\r\n    {name: 'Colombia', code: 'CO'},\r\n    {name: 'Comoros', code: 'KM'},\r\n    {name: 'Congo', code: 'CG'},\r\n    {name: 'Congo, The Democratic Republic of the', code: 'CD'},\r\n    {name: 'Cook Islands', code: 'CK'},\r\n    {name: 'Costa Rica', code: 'CR'},\r\n    {name: 'Cote D\\'Ivoire', code: 'CI'},\r\n    {name: 'Croatia', code: 'HR'},\r\n    {name: 'Cuba', code: 'CU'},\r\n    {name: 'Cyprus', code: 'CY'},\r\n    {name: 'Czech Republic', code: 'CZ'},\r\n    {name: 'Denmark', code: 'DK'},\r\n    {name: 'Djibouti', code: 'DJ'},\r\n    {name: 'Dominica', code: 'DM'},\r\n    {name: 'Dominican Republic', code: 'DO'},\r\n    {name: 'Ecuador', code: 'EC'},\r\n    {name: 'Egypt', code: 'EG'},\r\n    {name: 'El Salvador', code: 'SV'},\r\n    {name: 'Equatorial Guinea', code: 'GQ'},\r\n    {name: 'Eritrea', code: 'ER'},\r\n    {name: 'Estonia', code: 'EE'},\r\n    {name: 'Ethiopia', code: 'ET'},\r\n    {name: 'Falkland Islands (Malvinas)', code: 'FK'},\r\n    {name: 'Faroe Islands', code: 'FO'},\r\n    {name: 'Fiji', code: 'FJ'},\r\n    {name: 'Finland', code: 'FI'},\r\n    {name: 'France', code: 'FR'},\r\n    {name: 'French Guiana', code: 'GF'},\r\n    {name: 'French Polynesia', code: 'PF'},\r\n    {name: 'French Southern Territories', code: 'TF'},\r\n    {name: 'Gabon', code: 'GA'},\r\n    {name: 'Gambia', code: 'GM'},\r\n    {name: 'Georgia', code: 'GE'},\r\n    {name: 'Germany', code: 'DE'},\r\n    {name: 'Ghana', code: 'GH'},\r\n    {name: 'Gibraltar', code: 'GI'},\r\n    {name: 'Greece', code: 'GR'},\r\n    {name: 'Greenland', code: 'GL'},\r\n    {name: 'Grenada', code: 'GD'},\r\n    {name: 'Guadeloupe', code: 'GP'},\r\n    {name: 'Guam', code: 'GU'},\r\n    {name: 'Guatemala', code: 'GT'},\r\n    {name: 'Guernsey', code: 'GG'},\r\n    {name: 'Guinea', code: 'GN'},\r\n    {name: 'Guinea-Bissau', code: 'GW'},\r\n    {name: 'Guyana', code: 'GY'},\r\n    {name: 'Haiti', code: 'HT'},\r\n    {name: 'Heard Island and Mcdonald Islands', code: 'HM'},\r\n    {name: 'Holy See (Vatican City State)', code: 'VA'},\r\n    {name: 'Honduras', code: 'HN'},\r\n    {name: 'Hong Kong', code: 'HK'},\r\n    {name: 'Hungary', code: 'HU'},\r\n    {name: 'Iceland', code: 'IS'},\r\n    {name: 'India', code: 'IN'},\r\n    {name: 'Indonesia', code: 'ID'},\r\n    {name: 'Iran, Islamic Republic Of', code: 'IR'},\r\n    {name: 'Iraq', code: 'IQ'},\r\n    {name: 'Ireland', code: 'IE'},\r\n    {name: 'Isle of Man', code: 'IM'},\r\n    {name: 'Israel', code: 'IL'},\r\n    {name: 'Italy', code: 'IT'},\r\n    {name: 'Jamaica', code: 'JM'},\r\n    {name: 'Japan', code: 'JP'},\r\n    {name: 'Jersey', code: 'JE'},\r\n    {name: 'Jordan', code: 'JO'},\r\n    {name: 'Kazakhstan', code: 'KZ'},\r\n    {name: 'Kenya', code: 'KE'},\r\n    {name: 'Kiribati', code: 'KI'},\r\n    {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'},\r\n    {name: 'Korea, Republic of', code: 'KR'},\r\n    {name: 'Kuwait', code: 'KW'},\r\n    {name: 'Kyrgyzstan', code: 'KG'},\r\n    {name: 'Lao People\\'S Democratic Republic', code: 'LA'},\r\n    {name: 'Latvia', code: 'LV'},\r\n    {name: 'Lebanon', code: 'LB'},\r\n    {name: 'Lesotho', code: 'LS'},\r\n    {name: 'Liberia', code: 'LR'},\r\n    {name: 'Libyan Arab Jamahiriya', code: 'LY'},\r\n    {name: 'Liechtenstein', code: 'LI'},\r\n    {name: 'Lithuania', code: 'LT'},\r\n    {name: 'Luxembourg', code: 'LU'},\r\n    {name: 'Macao', code: 'MO'},\r\n    {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'},\r\n    {name: 'Madagascar', code: 'MG'},\r\n    {name: 'Malawi', code: 'MW'},\r\n    {name: 'Malaysia', code: 'MY'},\r\n    {name: 'Maldives', code: 'MV'},\r\n    {name: 'Mali', code: 'ML'},\r\n    {name: 'Malta', code: 'MT'},\r\n    {name: 'Marshall Islands', code: 'MH'},\r\n    {name: 'Martinique', code: 'MQ'},\r\n    {name: 'Mauritania', code: 'MR'},\r\n    {name: 'Mauritius', code: 'MU'},\r\n    {name: 'Mayotte', code: 'YT'},\r\n    {name: 'Mexico', code: 'MX'},\r\n    {name: 'Micronesia, Federated States of', code: 'FM'},\r\n    {name: 'Moldova, Republic of', code: 'MD'},\r\n    {name: 'Monaco', code: 'MC'},\r\n    {name: 'Mongolia', code: 'MN'},\r\n    {name: 'Montserrat', code: 'MS'},\r\n    {name: 'Morocco', code: 'MA'},\r\n    {name: 'Mozambique', code: 'MZ'},\r\n    {name: 'Myanmar', code: 'MM'},\r\n    {name: 'Namibia', code: 'NA'},\r\n    {name: 'Nauru', code: 'NR'},\r\n    {name: 'Nepal', code: 'NP'},\r\n    {name: 'Netherlands', code: 'NL'},\r\n    {name: 'Netherlands Antilles', code: 'AN'},\r\n    {name: 'New Caledonia', code: 'NC'},\r\n    {name: 'New Zealand', code: 'NZ'},\r\n    {name: 'Nicaragua', code: 'NI'},\r\n    {name: 'Niger', code: 'NE'},\r\n    {name: 'Nigeria', code: 'NG'},\r\n    {name: 'Niue', code: 'NU'},\r\n    {name: 'Norfolk Island', code: 'NF'},\r\n    {name: 'Northern Mariana Islands', code: 'MP'},\r\n    {name: 'Norway', code: 'NO'},\r\n    {name: 'Oman', code: 'OM'},\r\n    {name: 'Pakistan', code: 'PK'},\r\n    {name: 'Palau', code: 'PW'},\r\n    {name: 'Palestinian Territory, Occupied', code: 'PS'},\r\n    {name: 'Panama', code: 'PA'},\r\n    {name: 'Papua New Guinea', code: 'PG'},\r\n    {name: 'Paraguay', code: 'PY'},\r\n    {name: 'Peru', code: 'PE'},\r\n    {name: 'Philippines', code: 'PH'},\r\n    {name: 'Pitcairn', code: 'PN'},\r\n    {name: 'Poland', code: 'PL'},\r\n    {name: 'Portugal', code: 'PT'},\r\n    {name: 'Puerto Rico', code: 'PR'},\r\n    {name: 'Qatar', code: 'QA'},\r\n    {name: 'Reunion', code: 'RE'},\r\n    {name: 'Romania', code: 'RO'},\r\n    {name: 'Russian Federation', code: 'RU'},\r\n    {name: 'RWANDA', code: 'RW'},\r\n    {name: 'Saint Helena', code: 'SH'},\r\n    {name: 'Saint Kitts and Nevis', code: 'KN'},\r\n    {name: 'Saint Lucia', code: 'LC'},\r\n    {name: 'Saint Pierre and Miquelon', code: 'PM'},\r\n    {name: 'Saint Vincent and the Grenadines', code: 'VC'},\r\n    {name: 'Samoa', code: 'WS'},\r\n    {name: 'San Marino', code: 'SM'},\r\n    {name: 'Sao Tome and Principe', code: 'ST'},\r\n    {name: 'Saudi Arabia', code: 'SA'},\r\n    {name: 'Senegal', code: 'SN'},\r\n    {name: 'Serbia and Montenegro', code: 'CS'},\r\n    {name: 'Seychelles', code: 'SC'},\r\n    {name: 'Sierra Leone', code: 'SL'},\r\n    {name: 'Singapore', code: 'SG'},\r\n    {name: 'Slovakia', code: 'SK'},\r\n    {name: 'Slovenia', code: 'SI'},\r\n    {name: 'Solomon Islands', code: 'SB'},\r\n    {name: 'Somalia', code: 'SO'},\r\n    {name: 'South Africa', code: 'ZA'},\r\n    {name: 'South Georgia and the South Sandwich Islands', code: 'GS'},\r\n    {name: 'Spain', code: 'ES'},\r\n    {name: 'Sri Lanka', code: 'LK'},\r\n    {name: 'Sudan', code: 'SD'},\r\n    {name: 'Suriname', code: 'SR'},\r\n    {name: 'Svalbard and Jan Mayen', code: 'SJ'},\r\n    {name: 'Swaziland', code: 'SZ'},\r\n    {name: 'Sweden', code: 'SE'},\r\n    {name: 'Switzerland', code: 'CH'},\r\n    {name: 'Syrian Arab Republic', code: 'SY'},\r\n    {name: 'Taiwan, Province of China', code: 'TW'},\r\n    {name: 'Tajikistan', code: 'TJ'},\r\n    {name: 'Tanzania, United Republic of', code: 'TZ'},\r\n    {name: 'Thailand', code: 'TH'},\r\n    {name: 'Timor-Leste', code: 'TL'},\r\n    {name: 'Togo', code: 'TG'},\r\n    {name: 'Tokelau', code: 'TK'},\r\n    {name: 'Tonga', code: 'TO'},\r\n    {name: 'Trinidad and Tobago', code: 'TT'},\r\n    {name: 'Tunisia', code: 'TN'},\r\n    {name: 'Turkey', code: 'TR'},\r\n    {name: 'Turkmenistan', code: 'TM'},\r\n    {name: 'Turks and Caicos Islands', code: 'TC'},\r\n    {name: 'Tuvalu', code: 'TV'},\r\n    {name: 'Uganda', code: 'UG'},\r\n    {name: 'Ukraine', code: 'UA'},\r\n    {name: 'United Arab Emirates', code: 'AE'},\r\n    {name: 'United Kingdom', code: 'GB'},\r\n    {name: 'United States', code: 'US'},\r\n    {name: 'United States Minor Outlying Islands', code: 'UM'},\r\n    {name: 'Uruguay', code: 'UY'},\r\n    {name: 'Uzbekistan', code: 'UZ'},\r\n    {name: 'Vanuatu', code: 'VU'},\r\n    {name: 'Venezuela', code: 'VE'},\r\n    {name: 'Viet Nam', code: 'VN'},\r\n    {name: 'Virgin Islands, British', code: 'VG'},\r\n    {name: 'Virgin Islands, U.S.', code: 'VI'},\r\n    {name: 'Wallis and Futuna', code: 'WF'},\r\n    {name: 'Western Sahara', code: 'EH'},\r\n    {name: 'Yemen', code: 'YE'},\r\n    {name: 'Zambia', code: 'ZM'},\r\n    {name: 'Zimbabwe', code: 'ZW'}\r\n  ]\r\n\r\n  export const countries = [\r\n    { code: 'AD', label: 'Andorra', phone: '376' },\r\n    {\r\n      code: 'AE',\r\n      label: 'United Arab Emirates',\r\n      phone: '971',\r\n    },\r\n    { code: 'AF', label: 'Afghanistan', phone: '93' },\r\n    {\r\n      code: 'AG',\r\n      label: 'Antigua and Barbuda',\r\n      phone: '1-268',\r\n    },\r\n    { code: 'AI', label: 'Anguilla', phone: '1-264' },\r\n    { code: 'AL', label: 'Albania', phone: '355' },\r\n    { code: 'AM', label: 'Armenia', phone: '374' },\r\n    { code: 'AO', label: 'Angola', phone: '244' },\r\n    { code: 'AQ', label: 'Antarctica', phone: '672' },\r\n    { code: 'AR', label: 'Argentina', phone: '54' },\r\n    { code: 'AS', label: 'American Samoa', phone: '1-684' },\r\n    { code: 'AT', label: 'Austria', phone: '43' },\r\n    {\r\n      code: 'AU',\r\n      label: 'Australia',\r\n      phone: '61',\r\n      suggested: true,\r\n    },\r\n    { code: 'AW', label: 'Aruba', phone: '297' },\r\n    { code: 'AX', label: 'Alland Islands', phone: '358' },\r\n    { code: 'AZ', label: 'Azerbaijan', phone: '994' },\r\n    {\r\n      code: 'BA',\r\n      label: 'Bosnia and Herzegovina',\r\n      phone: '387',\r\n    },\r\n    { code: 'BB', label: 'Barbados', phone: '1-246' },\r\n    { code: 'BD', label: 'Bangladesh', phone: '880' },\r\n    { code: 'BE', label: 'Belgium', phone: '32' },\r\n    { code: 'BF', label: 'Burkina Faso', phone: '226' },\r\n    { code: 'BG', label: 'Bulgaria', phone: '359' },\r\n    { code: 'BH', label: 'Bahrain', phone: '973' },\r\n    { code: 'BI', label: 'Burundi', phone: '257' },\r\n    { code: 'BJ', label: 'Benin', phone: '229' },\r\n    { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\r\n    { code: 'BM', label: 'Bermuda', phone: '1-441' },\r\n    { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\r\n    { code: 'BO', label: 'Bolivia', phone: '591' },\r\n    { code: 'BR', label: 'Brazil', phone: '55' },\r\n    { code: 'BS', label: 'Bahamas', phone: '1-242' },\r\n    { code: 'BT', label: 'Bhutan', phone: '975' },\r\n    { code: 'BV', label: 'Bouvet Island', phone: '47' },\r\n    { code: 'BW', label: 'Botswana', phone: '267' },\r\n    { code: 'BY', label: 'Belarus', phone: '375' },\r\n    { code: 'BZ', label: 'Belize', phone: '501' },\r\n    {\r\n      code: 'CA',\r\n      label: 'Canada',\r\n      phone: '1',\r\n      suggested: true,\r\n    },\r\n    {\r\n      code: 'CC',\r\n      label: 'Cocos (Keeling) Islands',\r\n      phone: '61',\r\n    },\r\n    {\r\n      code: 'CD',\r\n      label: 'Congo, Democratic Republic of the',\r\n      phone: '243',\r\n    },\r\n    {\r\n      code: 'CF',\r\n      label: 'Central African Republic',\r\n      phone: '236',\r\n    },\r\n    {\r\n      code: 'CG',\r\n      label: 'Congo, Republic of the',\r\n      phone: '242',\r\n    },\r\n    { code: 'CH', label: 'Switzerland', phone: '41' },\r\n    { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\r\n    { code: 'CK', label: 'Cook Islands', phone: '682' },\r\n    { code: 'CL', label: 'Chile', phone: '56' },\r\n    { code: 'CM', label: 'Cameroon', phone: '237' },\r\n    { code: 'CN', label: 'China', phone: '86' },\r\n    { code: 'CO', label: 'Colombia', phone: '57' },\r\n    { code: 'CR', label: 'Costa Rica', phone: '506' },\r\n    { code: 'CU', label: 'Cuba', phone: '53' },\r\n    { code: 'CV', label: 'Cape Verde', phone: '238' },\r\n    { code: 'CW', label: 'Curacao', phone: '599' },\r\n    { code: 'CX', label: 'Christmas Island', phone: '61' },\r\n    { code: 'CY', label: 'Cyprus', phone: '357' },\r\n    { code: 'CZ', label: 'Czech Republic', phone: '420' },\r\n    {\r\n      code: 'DE',\r\n      label: 'Germany',\r\n      phone: '49',\r\n      suggested: true,\r\n    },\r\n    { code: 'DJ', label: 'Djibouti', phone: '253' },\r\n    { code: 'DK', label: 'Denmark', phone: '45' },\r\n    { code: 'DM', label: 'Dominica', phone: '1-767' },\r\n    {\r\n      code: 'DO',\r\n      label: 'Dominican Republic',\r\n      phone: '1-809',\r\n    },\r\n    { code: 'DZ', label: 'Algeria', phone: '213' },\r\n    { code: 'EC', label: 'Ecuador', phone: '593' },\r\n    { code: 'EE', label: 'Estonia', phone: '372' },\r\n    { code: 'EG', label: 'Egypt', phone: '20' },\r\n    { code: 'EH', label: 'Western Sahara', phone: '212' },\r\n    { code: 'ER', label: 'Eritrea', phone: '291' },\r\n    { code: 'ES', label: 'Spain', phone: '34' },\r\n    { code: 'ET', label: 'Ethiopia', phone: '251' },\r\n    { code: 'FI', label: 'Finland', phone: '358' },\r\n    { code: 'FJ', label: 'Fiji', phone: '679' },\r\n    {\r\n      code: 'FK',\r\n      label: 'Falkland Islands (Malvinas)',\r\n      phone: '500',\r\n    },\r\n    {\r\n      code: 'FM',\r\n      label: 'Micronesia, Federated States of',\r\n      phone: '691',\r\n    },\r\n    { code: 'FO', label: 'Faroe Islands', phone: '298' },\r\n    {\r\n      code: 'FR',\r\n      label: 'France',\r\n      phone: '33',\r\n      suggested: true,\r\n    },\r\n    { code: 'GA', label: 'Gabon', phone: '241' },\r\n    { code: 'GB', label: 'United Kingdom', phone: '44' },\r\n    { code: 'GD', label: 'Grenada', phone: '1-473' },\r\n    { code: 'GE', label: 'Georgia', phone: '995' },\r\n    { code: 'GF', label: 'French Guiana', phone: '594' },\r\n    { code: 'GG', label: 'Guernsey', phone: '44' },\r\n    { code: 'GH', label: 'Ghana', phone: '233' },\r\n    { code: 'GI', label: 'Gibraltar', phone: '350' },\r\n    { code: 'GL', label: 'Greenland', phone: '299' },\r\n    { code: 'GM', label: 'Gambia', phone: '220' },\r\n    { code: 'GN', label: 'Guinea', phone: '224' },\r\n    { code: 'GP', label: 'Guadeloupe', phone: '590' },\r\n    { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\r\n    { code: 'GR', label: 'Greece', phone: '30' },\r\n    {\r\n      code: 'GS',\r\n      label: 'South Georgia and the South Sandwich Islands',\r\n      phone: '500',\r\n    },\r\n    { code: 'GT', label: 'Guatemala', phone: '502' },\r\n    { code: 'GU', label: 'Guam', phone: '1-671' },\r\n    { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\r\n    { code: 'GY', label: 'Guyana', phone: '592' },\r\n    { code: 'HK', label: 'Hong Kong', phone: '852' },\r\n    {\r\n      code: 'HM',\r\n      label: 'Heard Island and McDonald Islands',\r\n      phone: '672',\r\n    },\r\n    { code: 'HN', label: 'Honduras', phone: '504' },\r\n    { code: 'HR', label: 'Croatia', phone: '385' },\r\n    { code: 'HT', label: 'Haiti', phone: '509' },\r\n    { code: 'HU', label: 'Hungary', phone: '36' },\r\n    { code: 'ID', label: 'Indonesia', phone: '62' },\r\n    { code: 'IE', label: 'Ireland', phone: '353' },\r\n    { code: 'IL', label: 'Israel', phone: '972' },\r\n    { code: 'IM', label: 'Isle of Man', phone: '44' },\r\n    { code: 'IN', label: 'India', phone: '91' },\r\n    {\r\n      code: 'IO',\r\n      label: 'British Indian Ocean Territory',\r\n      phone: '246',\r\n    },\r\n    { code: 'IQ', label: 'Iraq', phone: '964' },\r\n    {\r\n      code: 'IR',\r\n      label: 'Iran, Islamic Republic of',\r\n      phone: '98',\r\n    },\r\n    { code: 'IS', label: 'Iceland', phone: '354' },\r\n    { code: 'IT', label: 'Italy', phone: '39' },\r\n    { code: 'JE', label: 'Jersey', phone: '44' },\r\n    { code: 'JM', label: 'Jamaica', phone: '1-876' },\r\n    { code: 'JO', label: 'Jordan', phone: '962' },\r\n    {\r\n      code: 'JP',\r\n      label: 'Japan',\r\n      phone: '81',\r\n      suggested: true,\r\n    },\r\n    { code: 'KE', label: 'Kenya', phone: '254' },\r\n    { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\r\n    { code: 'KH', label: 'Cambodia', phone: '855' },\r\n    { code: 'KI', label: 'Kiribati', phone: '686' },\r\n    { code: 'KM', label: 'Comoros', phone: '269' },\r\n    {\r\n      code: 'KN',\r\n      label: 'Saint Kitts and Nevis',\r\n      phone: '1-869',\r\n    },\r\n    {\r\n      code: 'KP',\r\n      label: \"Korea, Democratic People's Republic of\",\r\n      phone: '850',\r\n    },\r\n    { code: 'KR', label: 'Korea, Republic of', phone: '82' },\r\n    { code: 'KW', label: 'Kuwait', phone: '965' },\r\n    { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\r\n    { code: 'KZ', label: 'Kazakhstan', phone: '7' },\r\n    {\r\n      code: 'LA',\r\n      label: \"Lao People's Democratic Republic\",\r\n      phone: '856',\r\n    },\r\n    { code: 'LB', label: 'Lebanon', phone: '961' },\r\n    { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\r\n    { code: 'LI', label: 'Liechtenstein', phone: '423' },\r\n    { code: 'LK', label: 'Sri Lanka', phone: '94' },\r\n    { code: 'LR', label: 'Liberia', phone: '231' },\r\n    { code: 'LS', label: 'Lesotho', phone: '266' },\r\n    { code: 'LT', label: 'Lithuania', phone: '370' },\r\n    { code: 'LU', label: 'Luxembourg', phone: '352' },\r\n    { code: 'LV', label: 'Latvia', phone: '371' },\r\n    { code: 'LY', label: 'Libya', phone: '218' },\r\n    { code: 'MA', label: 'Morocco', phone: '212' },\r\n    { code: 'MC', label: 'Monaco', phone: '377' },\r\n    {\r\n      code: 'MD',\r\n      label: 'Moldova, Republic of',\r\n      phone: '373',\r\n    },\r\n    { code: 'ME', label: 'Montenegro', phone: '382' },\r\n    {\r\n      code: 'MF',\r\n      label: 'Saint Martin (French part)',\r\n      phone: '590',\r\n    },\r\n    { code: 'MG', label: 'Madagascar', phone: '261' },\r\n    { code: 'MH', label: 'Marshall Islands', phone: '692' },\r\n    {\r\n      code: 'MK',\r\n      label: 'Macedonia, the Former Yugoslav Republic of',\r\n      phone: '389',\r\n    },\r\n    { code: 'ML', label: 'Mali', phone: '223' },\r\n    { code: 'MM', label: 'Myanmar', phone: '95' },\r\n    { code: 'MN', label: 'Mongolia', phone: '976' },\r\n    { code: 'MO', label: 'Macao', phone: '853' },\r\n    {\r\n      code: 'MP',\r\n      label: 'Northern Mariana Islands',\r\n      phone: '1-670',\r\n    },\r\n    { code: 'MQ', label: 'Martinique', phone: '596' },\r\n    { code: 'MR', label: 'Mauritania', phone: '222' },\r\n    { code: 'MS', label: 'Montserrat', phone: '1-664' },\r\n    { code: 'MT', label: 'Malta', phone: '356' },\r\n    { code: 'MU', label: 'Mauritius', phone: '230' },\r\n    { code: 'MV', label: 'Maldives', phone: '960' },\r\n    { code: 'MW', label: 'Malawi', phone: '265' },\r\n    { code: 'MX', label: 'Mexico', phone: '52' },\r\n    { code: 'MY', label: 'Malaysia', phone: '60' },\r\n    { code: 'MZ', label: 'Mozambique', phone: '258' },\r\n    { code: 'NA', label: 'Namibia', phone: '264' },\r\n    { code: 'NC', label: 'New Caledonia', phone: '687' },\r\n    { code: 'NE', label: 'Niger', phone: '227' },\r\n    { code: 'NF', label: 'Norfolk Island', phone: '672' },\r\n    { code: 'NG', label: 'Nigeria', phone: '234' },\r\n    { code: 'NI', label: 'Nicaragua', phone: '505' },\r\n    { code: 'NL', label: 'Netherlands', phone: '31' },\r\n    { code: 'NO', label: 'Norway', phone: '47' },\r\n    { code: 'NP', label: 'Nepal', phone: '977' },\r\n    { code: 'NR', label: 'Nauru', phone: '674' },\r\n    { code: 'NU', label: 'Niue', phone: '683' },\r\n    { code: 'NZ', label: 'New Zealand', phone: '64' },\r\n    { code: 'OM', label: 'Oman', phone: '968' },\r\n    { code: 'PA', label: 'Panama', phone: '507' },\r\n    { code: 'PE', label: 'Peru', phone: '51' },\r\n    { code: 'PF', label: 'French Polynesia', phone: '689' },\r\n    { code: 'PG', label: 'Papua New Guinea', phone: '675' },\r\n    { code: 'PH', label: 'Philippines', phone: '63' },\r\n    { code: 'PK', label: 'Pakistan', phone: '92' },\r\n    { code: 'PL', label: 'Poland', phone: '48' },\r\n    {\r\n      code: 'PM',\r\n      label: 'Saint Pierre and Miquelon',\r\n      phone: '508',\r\n    },\r\n    { code: 'PN', label: 'Pitcairn', phone: '870' },\r\n    { code: 'PR', label: 'Puerto Rico', phone: '1' },\r\n    {\r\n      code: 'PS',\r\n      label: 'Palestine, State of',\r\n      phone: '970',\r\n    },\r\n    { code: 'PT', label: 'Portugal', phone: '351' },\r\n    { code: 'PW', label: 'Palau', phone: '680' },\r\n    { code: 'PY', label: 'Paraguay', phone: '595' },\r\n    { code: 'QA', label: 'Qatar', phone: '974' },\r\n    { code: 'RE', label: 'Reunion', phone: '262' },\r\n    { code: 'RO', label: 'Romania', phone: '40' },\r\n    { code: 'RS', label: 'Serbia', phone: '381' },\r\n    { code: 'RU', label: 'Russian Federation', phone: '7' },\r\n    { code: 'RW', label: 'Rwanda', phone: '250' },\r\n    { code: 'SA', label: 'Saudi Arabia', phone: '966' },\r\n    { code: 'SB', label: 'Solomon Islands', phone: '677' },\r\n    { code: 'SC', label: 'Seychelles', phone: '248' },\r\n    { code: 'SD', label: 'Sudan', phone: '249' },\r\n    { code: 'SE', label: 'Sweden', phone: '46' },\r\n    { code: 'SG', label: 'Singapore', phone: '65' },\r\n    { code: 'SH', label: 'Saint Helena', phone: '290' },\r\n    { code: 'SI', label: 'Slovenia', phone: '386' },\r\n    {\r\n      code: 'SJ',\r\n      label: 'Svalbard and Jan Mayen',\r\n      phone: '47',\r\n    },\r\n    { code: 'SK', label: 'Slovakia', phone: '421' },\r\n    { code: 'SL', label: 'Sierra Leone', phone: '232' },\r\n    { code: 'SM', label: 'San Marino', phone: '378' },\r\n    { code: 'SN', label: 'Senegal', phone: '221' },\r\n    { code: 'SO', label: 'Somalia', phone: '252' },\r\n    { code: 'SR', label: 'Suriname', phone: '597' },\r\n    { code: 'SS', label: 'South Sudan', phone: '211' },\r\n    {\r\n      code: 'ST',\r\n      label: 'Sao Tome and Principe',\r\n      phone: '239',\r\n    },\r\n    { code: 'SV', label: 'El Salvador', phone: '503' },\r\n    {\r\n      code: 'SX',\r\n      label: 'Sint Maarten (Dutch part)',\r\n      phone: '1-721',\r\n    },\r\n    {\r\n      code: 'SY',\r\n      label: 'Syrian Arab Republic',\r\n      phone: '963',\r\n    },\r\n    { code: 'SZ', label: 'Swaziland', phone: '268' },\r\n    {\r\n      code: 'TC',\r\n      label: 'Turks and Caicos Islands',\r\n      phone: '1-649',\r\n    },\r\n    { code: 'TD', label: 'Chad', phone: '235' },\r\n    {\r\n      code: 'TF',\r\n      label: 'French Southern Territories',\r\n      phone: '262',\r\n    },\r\n    { code: 'TG', label: 'Togo', phone: '228' },\r\n    { code: 'TH', label: 'Thailand', phone: '66' },\r\n    { code: 'TJ', label: 'Tajikistan', phone: '992' },\r\n    { code: 'TK', label: 'Tokelau', phone: '690' },\r\n    { code: 'TL', label: 'Timor-Leste', phone: '670' },\r\n    { code: 'TM', label: 'Turkmenistan', phone: '993' },\r\n    { code: 'TN', label: 'Tunisia', phone: '216' },\r\n    { code: 'TO', label: 'Tonga', phone: '676' },\r\n    { code: 'TR', label: 'Turkey', phone: '90' },\r\n    {\r\n      code: 'TT',\r\n      label: 'Trinidad and Tobago',\r\n      phone: '1-868',\r\n    },\r\n    { code: 'TV', label: 'Tuvalu', phone: '688' },\r\n    {\r\n      code: 'TW',\r\n      label: 'Taiwan, Province of China',\r\n      phone: '886',\r\n    },\r\n    {\r\n      code: 'TZ',\r\n      label: 'United Republic of Tanzania',\r\n      phone: '255',\r\n    },\r\n    { code: 'UA', label: 'Ukraine', phone: '380' },\r\n    { code: 'UG', label: 'Uganda', phone: '256' },\r\n    {\r\n      code: 'US',\r\n      label: 'United States',\r\n      phone: '1',\r\n      suggested: true,\r\n    },\r\n    { code: 'UY', label: 'Uruguay', phone: '598' },\r\n    { code: 'UZ', label: 'Uzbekistan', phone: '998' },\r\n    {\r\n      code: 'VA',\r\n      label: 'Holy See (Vatican City State)',\r\n      phone: '379',\r\n    },\r\n    {\r\n      code: 'VC',\r\n      label: 'Saint Vincent and the Grenadines',\r\n      phone: '1-784',\r\n    },\r\n    { code: 'VE', label: 'Venezuela', phone: '58' },\r\n    {\r\n      code: 'VG',\r\n      label: 'British Virgin Islands',\r\n      phone: '1-284',\r\n    },\r\n    {\r\n      code: 'VI',\r\n      label: 'US Virgin Islands',\r\n      phone: '1-340',\r\n    },\r\n    { code: 'VN', label: 'Vietnam', phone: '84' },\r\n    { code: 'VU', label: 'Vanuatu', phone: '678' },\r\n    { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\r\n    { code: 'WS', label: 'Samoa', phone: '685' },\r\n    { code: 'XK', label: 'Kosovo', phone: '383' },\r\n    { code: 'YE', label: 'Yemen', phone: '967' },\r\n    { code: 'YT', label: 'Mayotte', phone: '262' },\r\n    { code: 'ZA', label: 'South Africa', phone: '27' },\r\n    { code: 'ZM', label: 'Zambia', phone: '260' },\r\n    { code: 'ZW', label: 'Zimbabwe', phone: '263' },\r\n  ];","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { countriesList } from '../../assets/common/countries';\r\n\r\nexport const Contact = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const address = props.data?.address;\r\n    const houseNumber = address[0]?.houseNumber ? address[0]?.houseNumber + \", \" : \"\";\r\n    const street = address[0]?.street ? address[0]?.street + \", \" : \"\";\r\n    const city = address[0]?.city ? address[0]?.city + \", \" : \"\";\r\n    const state = address[0]?.state ? address[0]?.state + \", \" : \"\";\r\n    const district = address[0]?.district ? address[0]?.district + \", \" : \"\";\r\n    const postalCode = address[0]?.postalCode ? address[0]?.postalCode + \" - \" : \"\";\r\n\r\n\r\n    const showPhone = props.data?.contactPerson.length > 0 ? \"icofont-phone\" : \"\";\r\n    const contactDetails = props.data?.contactPerson.length > 0\r\n        && `${props.data?.contactPerson && props.data?.contactPerson[0]?.name} (${props.data?.contactPerson && props.data?.contactPerson[0]?.relationship})`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><span style={{color:'red'}}>*</span>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span style={{color:'red'}}>*</span>Address</td>\r\n                                <td>{address && address === []\r\n                                    ? \"\"\r\n                                    : `${houseNumber}${street}${city}${district}${state}${postalCode}`}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span style={{color:'red'}}>*</span>Country</td>\r\n                                <td>{address ? address[0]?.country : \"-\"}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span style={{color:'red'}}>*</span>E-mail</td>\r\n                                <td>{props.data.emailId}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span style={{color:'red'}}>*</span>Contact Person</td>\r\n                                <td>\r\n                                    { contactDetails }<br />\r\n                                    <i className={showPhone}></i>{props.data?.contactPerson && props.data?.contactPerson?.phoneNumber}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                setPatientsData={props.setPatientsData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const addressData = props.data.address[0] || {};\r\n    const contactPerson = props.data.contactPerson || {};\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [addressType, setAddressType] = useState(addressData?.type);\r\n    const [txtHouseNo, setTxtHouseNo] = useState(addressData?.houseNumber);\r\n    const [txtStreet, setTxtStreet] = useState(addressData?.street);\r\n    const [txtCity, setTxtCity] = useState(addressData?.city);\r\n    const [txtDistrict, setTxtDistrict] = useState(addressData?.district);\r\n    const [txtState, setTxtState] = useState(addressData?.state);\r\n    const [txtPostalCode, setTxtPostalCode] = useState(addressData.postalCode);\r\n    const [txtCountry, setTxtCountry] = useState(addressData?.country);\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailId);\r\n    const [txtContactPerson, setTxtContactPerson] = useState(contactPerson?.name);\r\n    const [txtRelationship, setTxtRelationship] = useState(contactPerson?.relationship)\r\n    const [txtContactPhone, setTxtContactPhone] = useState(contactPerson?.contact?.value)\r\n\r\n    const updateContactDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            emailId: txtEmail,\r\n            address: [{\r\n                \"type\": addressType,\r\n                \"houseNumber\": txtHouseNo,\r\n                \"street\": txtStreet,\r\n                \"city\": txtCity,\r\n                \"district\": txtDistrict,\r\n                \"state\": txtState,\r\n                \"postalCode\": txtPostalCode,\r\n                \"country\": txtCountry\r\n            }],\r\n            contactPerson: {\r\n                \"relationship\": txtRelationship,\r\n                \"name\": txtContactPerson,\r\n                \"phoneNumber\": txtContactPhone,\r\n            },\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n\r\n                    //Also, update the sessionstorate\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n    const countryList =  countriesList.map((item, index) => {\r\n        return (<option key={index} value={item.name}>{item.name} ({item.code})</option>)\r\n    })\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row-3\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Type</label>\r\n                            <select\r\n                                id=\"addressType\"\r\n                                value={addressType}\r\n                                onChange={e => setAddressType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"Home\">Home</option>\r\n                                <option value=\"Work\">Work</option>\r\n                                <option value=\"Office\">Office</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>House Number</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtHouseNo\"\r\n                                value={txtHouseNo}\r\n                                onChange={e => setTxtHouseNo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className=\"input-group\">\r\n                            <label>Street</label>\r\n                            <textarea\r\n                                rows={2}\r\n                                className=\"form-control\"\r\n                                id=\"txtStreet\"\r\n                                value={txtStreet}\r\n                                onChange={e => setTxtStreet(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>City <span style={{color: 'red'}}>*</span></label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtCity\"\r\n                                value={txtCity}\r\n                                onChange={e => setTxtCity(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>District</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtDistrict\"\r\n                                value={txtDistrict}\r\n                                onChange={e => setTxtDistrict(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>State</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtState\"\r\n                                value={txtState}\r\n                                onChange={e => setTxtState(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Postal Code</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPostalCode\"\r\n                                value={txtPostalCode}\r\n                                onChange={e => setTxtPostalCode(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className=\"input-group\">\r\n                            <label>Country <span style={{color: 'red'}}>*</span></label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtCountry\"\r\n                                value={txtCountry}\r\n                                onChange={e => setTxtCountry(e.target.value)}\r\n                            >\r\n                                {countryList}\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Contact Person (Name)</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPerson\"\r\n                                value={txtContactPerson}\r\n                                onChange={e => setTxtContactPerson(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Relationship</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtRelationship\"\r\n                                value={txtRelationship}\r\n                                onChange={e => setTxtRelationship(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPhone\"\r\n                                value={txtContactPhone}\r\n                                onChange={e => setTxtContactPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateContactDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const toTimestamp = (year,month,day,hour,minute,second) => {\r\n    var datum = new Date(Date.UTC(year,month-1,day,hour,minute,second));\r\n    return datum.getTime()/1000;\r\n}\r\n\r\nexport const DynamicSort = (property, sortType = \"asc\") => {\r\n    const sortOrder = sortType === \"asc\" ? 1 : -1;\r\n\r\n    return function (a, b) {\r\n        const secVal = (a[property] > b[property]) ? 1 : 0;\r\n        const result = (a[property] < b[property])\r\n            ? -1\r\n            : secVal;\r\n\r\n        return result * sortOrder;\r\n    }\r\n}\r\n\r\nexport const shortDateString = dateValue => {\r\n    const fullDate = new Date(dateValue);\r\n    if (!dateValue) return \"-\"\r\n    return (fullDate.getDate() < 10 ? \"0\" : \"\") + fullDate.getDate() + \"-\" + monthToShortString(fullDate.getMonth()) + \"-\" + fullDate.getFullYear();\r\n}\r\n\r\nconst monthToShortString = intMonthVal => {\r\n\r\n    let retMonth;\r\n\r\n    switch (intMonthVal) {\r\n        case 0:\r\n            retMonth = 'Jan';\r\n            break;\r\n        case 1:\r\n            retMonth = 'Feb';\r\n            break;\r\n        case 2:\r\n            retMonth = 'Mar';\r\n            break;\r\n        case 3:\r\n            retMonth = 'Apr';\r\n            break;\r\n        case 4:\r\n            retMonth = 'May';\r\n            break;\r\n        case 5:\r\n            retMonth = 'Jun';\r\n            break;\r\n        case 6:\r\n            retMonth = 'Jul';\r\n            break;\r\n        case 7:\r\n            retMonth = 'Aug';\r\n            break;\r\n        case 8:\r\n            retMonth = 'Sep';\r\n            break;\r\n        case 9:\r\n            retMonth = 'Oct';\r\n            break;\r\n        case 10:\r\n            retMonth = 'Nov';\r\n            break;\r\n        default:\r\n            retMonth = 'Dec'\r\n            break;\r\n    }\r\n\r\n    return retMonth;\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { shortDateString } from \"../../assets/common/operations\"\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Marital Status</td>\r\n                            <td>{props.data?.maritalStatus}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Date of Birth</td>\r\n                            <td>{shortDateString(props.data?.birthDate)}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{color:'red'}}>*</span>Is Deceased?</td>\r\n                            <td>{props.data?.deceased?.deceasedBoolean || \"No\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Deceased Date</td>\r\n                            <td>{props.data?.deceased?.deceasedDateTime || \"-\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n                setPatientsData={props.setPatientsData}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [showDeceased, setShowDeceased] = useState('none');\r\n    const [cbxDeceased, setCbxDeceased] = useState(props.data.deceased?.deceasedBoolean)\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [cbxMaritalStatus, setCbxMaritalStatus] = useState(props.data.maritalStatus)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n    const [txtDeceasedDate, setTxtDeceasedDate] = useState(props.data?.deceased?.deceasedDateTime);\r\n\r\n    useEffect(() => {\r\n        if (cbxDeceased === \"Yes\") {\r\n            setShowDeceased('block')\r\n        } else {\r\n            setShowDeceased('none');\r\n        }\r\n    }, [cbxDeceased])\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n            \"deceased\": {\r\n                deceasedBoolean: cbxDeceased === \"Yes\" ? true : false,\r\n                deceasedDateTime: txtDeceasedDate,\r\n            },\r\n            maritalStatus: cbxMaritalStatus,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n\r\n                    //Also, update the sessionstorate\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response?.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)'}}><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Marital Status</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxMaritalStatus\"\r\n                                value={cbxMaritalStatus}\r\n                                onChange={e => setCbxMaritalStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Married\">Married</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Do not wish to disclose\">Do not wish to disclose</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindi\">Hindi</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Is Deceased?</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxIsDeceased\"\r\n                                value={cbxDeceased}\r\n                                onChange={e => setCbxDeceased(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group' style={{ display: showDeceased }}>\r\n                            <label>Deceased Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtDeceasedDate\"\r\n                                value={txtDeceasedDate}\r\n                                onChange={e => setTxtDeceasedDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url'\r\n\r\nexport const Medical = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical Details</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Allergies</td>\r\n                            <td>{Object.keys(props.data?.allergies).length > 0 ? props.data?.allergies?.value.join(\", \") : ''}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr className='d-none'>\r\n                            <td><span style={{ color: 'red' }}>*</span>Managing Organization (Hospital)</td>\r\n                            <td>{props.data.managingOrganization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Blood Group</td>\r\n                            <td>{props.data.general?.bloodGroup}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Height</td>\r\n                            <td>{props.data.general?.height} cm</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Weight</td>\r\n                            <td>{props.data.general?.weight} kg</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>BMI</td>\r\n                            <td>{props.data.general?.bmi}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Chest Expansion</td>\r\n                            <td>{props.data.general?.chestExpansion} cm</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Vision</td>\r\n                            <td>{props.data.general?.vision}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BP</td>\r\n                            <td>{props.data.general?.bp}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Pulse</td>\r\n                            <td>{props.data.general?.pulse} BPM</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Oxygen Saturation</td>\r\n                            <td>{props.data.general?.oxygenSaturation} %</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <MedicalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setPatientsData={props.setPatientsData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalDialog = props => {\r\n\r\n    const [txtAllergies, setTxtAllergies] = useState('')\r\n    const [chkAllergies, setChkAllergies] = useState(props.data?.general.allergies?.length !== 0 ? false : true);\r\n    const [txtManagingOrg, setTxtManagingOrg] = useState(props.data.managingOrganization)\r\n\r\n    const [bloodGroup, setBloodGroup] = useState(props.data?.general?.bloodGroup);\r\n    const [height, setHeight] = useState(props.data?.general?.height);\r\n    const [weight, setWeight] = useState(props.data?.general?.weight);\r\n    const [vision, setVision] = useState(props.data?.general?.vision);\r\n    const [chestExpansion, setChestExpansion] = useState(props.data?.general?.chestExpansion);\r\n    const [bloodPressure, setBloodPressure] = useState(props.data?.general?.bp);\r\n    const [pulse, setPulse] = useState(props.data?.general?.pulse);\r\n    const [oxygenSaturation, setOxygenSaturation] = useState(props.data?.general?.oxygenSaturation);\r\n    const [bmi, setBmi] = useState(props.data?.general?.bmi);\r\n\r\n    const [selectedAllergies, setSelectedAllergies] = useState(Object.keys(props.data?.allergies).length > 0 ? [...props.data?.allergies?.value] : []);\r\n    const allergiesList = ['Lactose', 'Soy', 'Seafood', 'Nuts', 'Eggs', 'Fish', 'Mushroom', 'Gluten', 'Penicillin', 'Sulpha drugs', 'Local anaesthesia',\r\n        'Aspirin', 'Insulin', 'X-Ray dye', 'Pollen', 'Mould', 'Pets', 'Other']\r\n\r\n    const allergiesMap = allergiesList.map((item, index) => {\r\n        return (<option key={index} value={item}>{item}</option>)\r\n    })\r\n\r\n    const addAllergiesToList = selItem => {\r\n        //Ensure that the selected item is not in the list...\r\n        if (selectedAllergies.indexOf(selItem) === -1) {\r\n            //Item is not found in the list...\r\n            setSelectedAllergies([...selectedAllergies, selItem])\r\n\r\n            //Also, remove this item from the original list.\r\n            allergiesList.splice(allergiesList.indexOf(selItem), 1)\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (parseInt(height) === 0 || parseInt(weight) === 0) {\r\n            //Avoid NaN\r\n            setBmi(0);\r\n        } else {\r\n            setBmi((parseInt(height) / parseInt(weight)).toString().substring(0, 4))\r\n        }\r\n\r\n    }, [height, weight])\r\n\r\n    const handleBlur = (minValue, maxValue, inputValue, item) => {\r\n        //Check for split values in blood pressure and vision\r\n        if (item === 'bloodPressure' || item === 'vision') {\r\n            //Proceed to do the rest...\r\n            const splitValue = inputValue.split(\"/\");\r\n            if (splitValue[1] > maxValue || splitValue[0] < minValue) {\r\n                //Doesnt work...\r\n                props.showToast('Acceptable range of values for ' + item + ' is between ' + minValue + ' and ' + maxValue + '.', 'exclamation');\r\n                const itemElt = document.getElementById(item)\r\n                itemElt.classList.add('error-border')\r\n                itemElt.focus();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (inputValue > maxValue || inputValue < minValue) {\r\n            //Beyond range\r\n            props.showToast('Acceptable range of values for ' + item + ' is between ' + minValue + ' and ' + maxValue + '.', 'exclamation');\r\n            const itemElt = document.getElementById(item)\r\n            itemElt.classList.add('error-border')\r\n            itemElt.focus();\r\n        }\r\n    }\r\n\r\n    const updateMedicalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            allergies: { value: [...selectedAllergies] },\r\n            general: {\r\n                \"bloodGroup\": bloodGroup,\r\n                \"height\": height,\r\n                \"weight\": weight,\r\n                \"bmi\": bmi,\r\n                \"chestExpansion\": chestExpansion,\r\n                \"vision\": vision,\r\n                \"bp\": bloodPressure,\r\n                \"pulse\": pulse,\r\n                \"oxygenSaturation\": oxygenSaturation\r\n            },\r\n            managingOrganization: txtManagingOrg\r\n        }\r\n\r\n        const options = { ...constants.putOptions, 'body': JSON.stringify(data) }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response?.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    id='chkAllergies'\r\n                                    value={chkAllergies}\r\n                                    onChange={e => setChkAllergies(!chkAllergies)}\r\n                                    className='custom-checkbox' /> Allergies\r\n                            </label>\r\n                            <select\r\n                                id=\"txtAllergies\"\r\n                                className={chkAllergies ? \"form-control mb-1\" : 'd-none'}\r\n                                value={txtAllergies}\r\n                                onChange={e => {\r\n                                    setTxtAllergies(e.target.value)\r\n                                    addAllergiesToList(e.target.value);\r\n                                }}\r\n                            >\r\n                                {allergiesMap}\r\n                            </select>\r\n                            {selectedAllergies.length > 0 && chkAllergies &&\r\n                                <div className='sel-items'>\r\n                                    {selectedAllergies.join(\", \")}\r\n                                    <button onClick={() => setSelectedAllergies([])} className='btn-grey' style={{ float: 'right' }}>Clear</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row d-none\">\r\n                        <div className='input-group'>\r\n                            <label>Managing Organization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtManagingOrg\"\r\n                                value={txtManagingOrg}\r\n                                onChange={e => setTxtManagingOrg(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"ABC Healthcare\">ABC Healthcare</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>Blood Group</label>\r\n                            <select\r\n                                id=\"bloodGroup\"\r\n                                className=\"form-control\"\r\n                                value={bloodGroup}\r\n                                onChange={e => setBloodGroup(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"A+\">A+</option>\r\n                                <option value=\"A-\">A-</option>\r\n                                <option value=\"B+\">B+</option>\r\n                                <option value=\"B-\">B-</option>\r\n                                <option value=\"AB+\">AB+</option>\r\n                                <option value=\"AB-\">AB-</option>\r\n                                <option value=\"O+\">O+</option>\r\n                                <option value=\"O-\">O-</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Height (cm)</label>\r\n                            <input\r\n                                id=\"height\"\r\n                                className=\"form-control\"\r\n                                value={height}\r\n                                onChange={e => {\r\n                                    setHeight(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border')\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(0, 500, height, 'height')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Weight (kg)</label>\r\n                            <input\r\n                                id=\"weight\"\r\n                                className=\"form-control\"\r\n                                value={weight}\r\n                                onChange={e => {\r\n                                    setWeight(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border')\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(0, 180, weight, 'weight')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BMI</label>\r\n                            <input\r\n                                id=\"bmi\"\r\n                                className=\"form-control\"\r\n                                value={bmi}\r\n                                onChange={e => setBmi(e.target.value)}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Chest Expansion (cm)</label>\r\n                            <input\r\n                                id=\"chestExpansion\"\r\n                                className=\"form-control\"\r\n                                value={chestExpansion}\r\n                                onChange={e => {\r\n                                    setChestExpansion(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(2, 5, chestExpansion, 'chestExpansion')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Vision (a/b)</label>\r\n                            <input\r\n                                id=\"vision\"\r\n                                className=\"form-control\"\r\n                                value={vision}\r\n                                onChange={e => {\r\n                                    setVision(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                onBlur={() => handleBlur(0, 6, vision, 'vision')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BP (SYs/DIas)</label>\r\n                            <input\r\n                                id=\"bloodPressure\"\r\n                                className=\"form-control\"\r\n                                value={bloodPressure}\r\n                                onChange={e => {\r\n                                    setBloodPressure(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                onBlur={() => handleBlur(10, 250, bloodPressure, 'bloodPressure')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Pulse (BPM)</label>\r\n                            <input\r\n                                id=\"pulse\"\r\n                                className=\"form-control\"\r\n                                value={pulse}\r\n                                onChange={e => {\r\n                                    setPulse(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(0, 200, pulse, 'pulse')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Oxygen Saturation (%)</label>\r\n                            <input\r\n                                id=\"oxygenSaturation\"\r\n                                className=\"form-control\"\r\n                                value={oxygenSaturation}\r\n                                onChange={e => {\r\n                                    setOxygenSaturation(e.target.value)\r\n                                    document.getElementById(e.target.id).classList.remove('error-border');\r\n                                }}\r\n                                type='number'\r\n                                onBlur={() => handleBlur(1, 100, oxygenSaturation, 'oxygenSaturation')}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const constants = {\r\n\r\n    getOptions: {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    },\r\n    postOptions: {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'POST',\r\n    },\r\n    putOptions: {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'PUT',\r\n    },\r\n\r\n}","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { constants } from '../../assets/common/constants';\r\n\r\nexport const Lifestyle = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Lifestyle</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Smoking Habit</td>\r\n                            <td>{props.data?.lifeStyle?.smokingHabbit}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Alcohol Consumption</td>\r\n                            <td>{props.data?.lifeStyle?.alcoholConsumption}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Activity Level</td>\r\n                            <td>{props.data?.lifeStyle?.activityLevel}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><span style={{ color: 'red' }}>*</span>Food Preference</td>\r\n                            <td>{props.data?.lifeStyle?.foodPreference}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <LifestyleDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n                setPatientsData={props.setPatientsData}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LifestyleDialog = props => {\r\n\r\n    const [txtSmokingHabits, setTxtSmokingHabits] = useState(props.data.lifeStyle?.smokingHabbit)\r\n    const [txtAlcohol, setTxtAlcohol] = useState(props.data.lifeStyle?.alcoholConsumption)\r\n    const [txtActivityLevel, setTxtActivityLevel] = useState(props.data.lifeStyle?.activityLevel)\r\n    const [txtFoodPreference, setTxtFoodPreference] = useState(props.data.lifeStyle?.foodPreference)\r\n\r\n    //Others\r\n    const [txtAnyMedicationTaken, setTxtAnyMedicationTaken] = useState('No');\r\n    const [txtRelapse, setTxtRelapse] = useState('No');\r\n    const [txtWhenQuit, setTxtWhenQuit] = useState('');\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            lifeStyle: {\r\n                \"smokingHabbit\": txtSmokingHabits,\r\n                \"alcoholConsumption\": txtAlcohol,\r\n                \"activityLevel\": txtActivityLevel,\r\n                \"foodPreference\": txtFoodPreference\r\n            }\r\n        }\r\n\r\n        const options = { 'body': JSON.stringify(data), ...constants.putOptions }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Smoking Habits</label>\r\n                            <select\r\n                                id=\"txtSmokingHabits\"\r\n                                value={txtSmokingHabits}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtSmokingHabits(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"I don't smoke\">I don't smoke</option>\r\n                                <option value=\"I used to, but I quit\">I used to, but I quit</option>\r\n                                <option value=\"1-2/day\">1-2/day</option>\r\n                                <option value=\"3-5/day\">3-5/day</option>\r\n                                <option value=\"5-10/day\">5-10/day</option>\r\n                                <option value=\"> 10/day\">{'> 10/day'}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className={txtSmokingHabits === \"I used to, but I quit\" ? \"form-row-3\" : \"d-none\"}>\r\n                        <div className='input-group'>\r\n                            <label>Any Medication Taken?</label>\r\n                            <select\r\n                                id=\"txtAnyMedicationTaken\"\r\n                                value={txtAnyMedicationTaken}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtAnyMedicationTaken(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Any relapse?</label>\r\n                            <select\r\n                                id=\"txtRelapse\"\r\n                                value={txtRelapse}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtRelapse(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>When did you quit?</label>\r\n                            <input\r\n                                id=\"txtWhenQuit\"\r\n                                value={txtWhenQuit}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtWhenQuit(e.target.value)}\r\n                                type='date'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Alcohol Consumption</label>\r\n                            <select\r\n                                id=\"txtAlcohol\"\r\n                                value={txtAlcohol}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtAlcohol(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Non-Drinker\">Non-Drinker</option>\r\n                                <option value=\"Rare\">Rare</option>\r\n                                <option value=\"Social\">Social</option>\r\n                                <option value=\"Regular\">Regular</option>\r\n                                <option value=\"Heavy\">Heavy</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Activity Level</label>\r\n                            <select\r\n                                id=\"txtActivityLevel\"\r\n                                value={txtActivityLevel}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtActivityLevel(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Sedentary (Low)\">Sedentary (Low)</option>\r\n                                <option value=\"Moderately Active (Normal)\">Moderately Active (Normal)</option>\r\n                                <option value=\"Active (High)\">Active (High)</option>\r\n                                <option value=\"Athletic (Very High)\">Athletic (Very High)</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Food Preference</label>\r\n                            <select\r\n                                id=\"txtFoodPreference\"\r\n                                value={txtFoodPreference}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtFoodPreference(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Vegetarian\">Vegetarian</option>\r\n                                <option value=\"Non-Vegetarian\">Non-Vegetarian</option>\r\n                                <option value=\"Eggetarian\">Eggetarian</option>\r\n                                <option value=\"Vegan\">Vegan</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// Convert file to base64 string\r\nexport const fileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n};\r\n","import { useEffect, useState } from 'react'\r\nimport { ApiPath } from '../../assets/common/base-url'\r\nimport { constants } from '../../assets/common/constants'\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64'\r\n\r\nexport const MedicalHistoryDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState('')\r\n    const [txtAddMedication, setTxtAddMedication] = useState('')\r\n    const [cbxIsOnMedications, setCbxIsOnMedications] = useState('')\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState('')\r\n\r\n    const [medicationsData, setMedicationsData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setMedicationsData(props.medicalData)\r\n    }, [])\r\n\r\n    const updateMedicalHistoryDetails = () => {\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        const data = {\r\n            [props.updateField]: [{\r\n                type: cbxIsOnMedications,\r\n                name: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                records: [txtCurrentMedications]\r\n            }]\r\n        }\r\n\r\n        const options = { ...constants.putOptions, 'body': JSON.stringify(data) }\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = (val) => {\r\n\r\n        let fileUpload;\r\n\r\n        if (val === \"curr\") {\r\n            fileUpload = document.querySelector(\"#txtCurrentMedications\")\r\n        }\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    setTxtCurrentMedications(response.toString());\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-drug\"></i> Add {props.title}</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div className=\"form-row\" style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label style={{ transform: 'translateY(-10px)', color: '#999' }}><i className=\"icofont-drug\"></i> {props.title}</label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>{props.questionString}</label>\r\n                                <select\r\n                                    id=\"cbxIsOnMedications\"\r\n                                    value={cbxIsOnMedications}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxIsOnMedications(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Add {props.title}</label>\r\n                                <input\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Select File (optional)</label>\r\n                                <input\r\n                                    id=\"txtCurrentMedications\"\r\n                                    onChange={() => saveImageToBase64(\"curr\")}\r\n                                    className=\"form-control\"\r\n                                    accept=\"image/*,.pdf\"\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalHistoryDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const ImageDialog = props => {\r\n\r\n    const imageSource = props.src;\r\n\r\n    //Find the image components...\r\n    const imageExtension = imageSource.toString().indexOf(\"pdf\") > -1 ? \"pdf\" : \"other\";\r\n\r\n    const dialogClass = props.setImageDisplay\r\n        ? \"dialog-background image-dialog fade\"\r\n        : \"dialog-background image-dialog\";\r\n\r\n\r\n    const extension = imageExtension;\r\n    let imageContainerDisplay;\r\n    let embedContainer;\r\n\r\n    if (extension === \"pdf\") {\r\n        embedContainer = \"embed-container\";\r\n        imageContainerDisplay = \"image-container d-none\";\r\n\r\n    } else {\r\n        embedContainer = \"embed-container d-none\";\r\n        imageContainerDisplay = \"image-container\";\r\n    }\r\n\r\n    const closeMe = () => {\r\n        props.hideImageDialog(false);\r\n    }\r\n\r\n    return (\r\n        <div className={dialogClass}>\r\n            <div className={imageContainerDisplay}>\r\n                <div className=\"image-viewer\">\r\n                    <span className=\"close\">&times;</span>\r\n                    <img\r\n                        id=\"full-image\"\r\n                        alt=\"\"\r\n                        src={imageSource}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={embedContainer}>\r\n                <embed\r\n                    src={imageSource}\r\n                    width=\"100%\"\r\n                    height=\"95%\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-row-3-1\">\r\n                <div></div>\r\n                <button\r\n                    className=\"btn-main\"\r\n                    id=\"btnClose\"\r\n                    onClick={closeMe}\r\n                    style={{ width: 300 }}\r\n                >Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export const MedicationRowItem = props => {\r\n    return (\r\n        <div className='medications-container'>\r\n            <div>\r\n                <h3>Name</h3>\r\n                <p>{props.item.name}</p>\r\n            </div>\r\n            <div>\r\n                <h3>Description</h3>\r\n                <p>{props.item.description}</p>\r\n            </div>\r\n            <div>\r\n                {(props.item.records[0] === \"\")\r\n                    ? <p>No attachments</p>\r\n                    : <>\r\n                        <h3>Attachment</h3>\r\n                        <button\r\n                            className='attachment-preview'\r\n                            onClick={() => props.showImageDialog(props.item.records[0])}>\r\n                            Preview...\r\n                        </button>\r\n                    </>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { ApiPath } from '../../assets/common/base-url'\r\nimport { constants } from '../../assets/common/constants'\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64'\r\n\r\nexport const SurgeriesDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState('')\r\n    const [txtAddMedication, setTxtAddMedication] = useState('')\r\n    const [cbxIsOnMedications, setCbxIsOnMedications] = useState('')\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState('')\r\n\r\n    const [medicationsData, setMedicationsData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setMedicationsData(props.medicalData)\r\n    }, [])\r\n\r\n    const updateMedicalHistoryDetails = () => {\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        const data = {\r\n            [props.updateField]: [{\r\n                type: cbxIsOnMedications,\r\n                name: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                records: [txtCurrentMedications]\r\n            }]\r\n        }\r\n\r\n        const options = { ...constants.putOptions, 'body': JSON.stringify(data) }\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n\r\n                    props.showToast(`Update Successful!`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = (val) => {\r\n\r\n        let fileUpload;\r\n\r\n        if (val === \"curr\") {\r\n            fileUpload = document.querySelector(\"#txtCurrentMedications\")\r\n        }\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    setTxtCurrentMedications(response.toString());\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-drug\"></i> Add {props.title}</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div className=\"form-row\" style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label style={{ transform: 'translateY(-10px)', color: '#999' }}><i className=\"icofont-drug\"></i> {props.title}</label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>{props.questionString}</label>\r\n                                <select\r\n                                    id=\"cbxIsOnMedications\"\r\n                                    value={cbxIsOnMedications}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxIsOnMedications(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Add {props.title}</label>\r\n                                <select\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                    {props.inputArray.map((item, index) => {\r\n                                        return (<option key={index} value={item}>{item}</option>)\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Select File (optional)</label>\r\n                                <input\r\n                                    id=\"txtCurrentMedications\"\r\n                                    onChange={() => saveImageToBase64(\"curr\")}\r\n                                    className=\"form-control\"\r\n                                    accept=\"image/*,.pdf\"\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalHistoryDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\nimport { SurgeriesDialog } from \"../others/sugeries-dialog\";\r\n\r\nexport const Surgeries = props => {\r\n\r\n    const [medicationsArray, setMedicationsArray] = useState(props.data.surgeries)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [medicationsExist, setMedicationsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => setMedicationsArray(props.data.surgeries), [props.data])\r\n\r\n    useEffect(() => {\r\n        medicationsArray.length === 0\r\n            ? setMedicationsExist(false)\r\n            : setMedicationsExist(true);\r\n\r\n    }, [medicationsArray])\r\n\r\n\r\n    //Set the array of medications to show...\r\n    const currentMeds = medicationsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                medicationsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Surgeries</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No surgeries...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add surgery\r\n            </button>\r\n\r\n            {/* Other parts of the page */}\r\n\r\n\r\n            {dialogVisible && <SurgeriesDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).surgeries}\r\n                updateField={'surgeries'}\r\n                questionString={\"Have you had a surgery before?\"}\r\n                title={\"Surgery\"}\r\n                inputArray={['Heart', 'Liver', 'Kidney', 'Lungs', 'Brain', 'Facial/Cosmetic', 'Other']}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\nimport { SurgeriesDialog } from \"../others/sugeries-dialog\";\r\n\r\nexport const Injuries = props => {\r\n\r\n    const [medicationsArray, setMedicationsArray] = useState(props.data.injuries)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [medicationsExist, setMedicationsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n    useEffect(() => setMedicationsArray(props.data.injuries), [props.data])\r\n\r\n    useEffect(() => {\r\n        medicationsArray.length === 0\r\n            ? setMedicationsExist(false)\r\n            : setMedicationsExist(true);\r\n\r\n    }, [medicationsArray])\r\n\r\n\r\n    //Set the array of medications to show...\r\n    const currentMeds = medicationsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                medicationsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Injuries</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No injuries...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add injury\r\n            </button>\r\n\r\n            {/* Other parts of the page */}\r\n\r\n\r\n            {dialogVisible && <SurgeriesDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).injuries}\r\n                updateField={'injuries'}\r\n                questionString={\"Have you had an injury before?\"}\r\n                title={\"Injury\"}\r\n                inputArray={['Burns', 'Spinal cord injury', 'Spinal fracture', 'Rib fracture',\r\n                    'Jaw fracture', 'Concussion', 'Amputation', 'Traumatic brain injury', 'Facial trauma',\r\n                    'Acoustic trauma', 'Other']}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\nimport { SurgeriesDialog } from \"../others/sugeries-dialog\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\n\r\nexport const ChronicDiseases = props => {\r\n\r\n    const [medicationsArray, setMedicationsArray] = useState(props.data.chronicDiseases)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [medicationsExist, setMedicationsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => setMedicationsArray(props.data.chronicDiseases), [props.data])\r\n\r\n    useEffect(() => {\r\n        medicationsArray.length === 0\r\n            ? setMedicationsExist(false)\r\n            : setMedicationsExist(true);\r\n\r\n    }, [medicationsArray])\r\n\r\n\r\n    //Set the array of medications to show...\r\n    const currentMeds = medicationsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                medicationsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Chronic Diseases</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No Chronic Diseases...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add chronic disease\r\n            </button>\r\n\r\n            {/* Other parts of the page */}\r\n\r\n\r\n            {dialogVisible && <SurgeriesDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).chronicDiseases}\r\n                updateField={'chronicDiseases'}\r\n                questionString={\"Do you have any chronic disease?\"}\r\n                title={\"Chronic Disease\"}\r\n                inputArray={['Diabetes', 'Hypertension', 'PCOS', 'Hypothyroidism', 'COPD',\r\n                    'Asthma', 'Heart disease', 'Arthritis', 'Mental illness/depression',\r\n                    'Fertility issues', 'Other']}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MedicalHistoryDialog } from \"../others/medical-history-dialog\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\nimport { Surgeries } from \"./surgeries\";\r\nimport { Injuries } from \"./injuries\";\r\nimport { ChronicDiseases } from \"./chronic-diseases\";\r\n\r\nexport const DiagnosisReport = props => {\r\n\r\n    const [medicationsArray, setMedicationsArray] = useState(props.data.diagnosisReport)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [medicationsExist, setMedicationsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMedicationsArray(props.data.diagnosisReport)\r\n    }, [props.data])\r\n\r\n    useEffect(() => {\r\n        medicationsArray.length === 0\r\n            ? setMedicationsExist(false)\r\n            : setMedicationsExist(true);\r\n\r\n    }, [medicationsArray])\r\n\r\n\r\n    //Set the array of medications to show...\r\n    const currentMeds = medicationsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='appointment'>\r\n            {/* <h2><i className='icofont-double-right'></i> Medical History</h2> */}\r\n            {\r\n                medicationsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Diagnosis Report</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No Diagnosis Report...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add diagnosis report\r\n            </button>\r\n\r\n            {/* Other parts of the page */}\r\n            <Surgeries\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                setImageLink={setImageLink}\r\n                showImageDialog={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            <Injuries\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                setImageLink={setImageLink}\r\n                showImageDialog={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            <ChronicDiseases\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                setImageLink={setImageLink}\r\n                showImageDialog={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n\r\n            {dialogVisible && <MedicalHistoryDialog\r\n                data={props.data}\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setPatientsData={props.setPatientsData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).diagnosisReport}\r\n                updateField={'diagnosisReport'}\r\n                questionString={\"Include a diagnosis report?\"}\r\n                title={\"Diagnosis Report\"}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n","import { NavBar } from \"../components/nav-bar\";\r\nimport { PatientTabHeaders } from \"./tab-pages/patient-tab-headers\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Contact } from \"./tab-pages/contact\";\r\nimport { Personal } from \"./tab-pages/personal\"\r\nimport { Medical } from \"./tab-pages/medical\";\r\nimport { Lifestyle } from \"./tab-pages/lifestyle\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport { DiagnosisReport } from \"../dhp/medical-records/diagnosis-report\";\r\nimport { constants } from \"../assets/common/constants\";\r\n\r\nconst Patients = props => {\r\n\r\n    const [patientsData, setPatientsData] = useState(() => JSON.parse(sessionStorage.getItem('patient')));\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n    const [picture, setPicture] = useState(() => JSON.parse(sessionStorage.getItem('patient')).photo);\r\n\r\n    const [tempPix, setTempPix] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setTempPix(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const removeFile = () => {\r\n        setTempPix('');\r\n        const uploadFile = document.querySelector('#uploadFile');\r\n        uploadFile.value = '';\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err, \"exclamation\");\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': tempPix,\r\n        }\r\n\r\n        const options = { ...constants.putOptions, 'body': JSON.stringify(data) };\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful!`, 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setPatientsData(response.data.data);\r\n                    sessionStorage.setItem('patient', JSON.stringify(response.data.data));\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar\r\n                activeLink={2}\r\n                picture={picture}\r\n            />\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={tempPix ? tempPix : (picture || \"/portfolio/avatar.png\")}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Patient</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <div className={tempPix ? 'd-none' : ''}>\r\n                            <i className='icofont-cloud-upload' />\r\n                            <label>Drop files to upload or </label>\r\n                            <button className=\"btn-upload\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"uploadFile\"\r\n                                    id=\"uploadFile\"\r\n                                    accept={\".png, .jpg, .jpeg\"}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                browse\r\n                            </button>\r\n                        </div>\r\n                        <label className={tempPix ? '' : 'd-none'}><span>Attached File: </span>{outputText}<button className='btn-upload' onClick={removeFile}>remove</button></label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={tempPix ? \"btn-main mb-2\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            style={{ fontSize: '12px', width: '100%' }}\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{patientsData.name}</h2>\r\n                    </div>\r\n                    {/* <div className='box'>\r\n                        <h4>Profile Status</h4>\r\n                        <div className=\"percent\">\r\n                            <svg>\r\n                                <circle cx='70' cy='70' r='70'></circle>\r\n                                <circle id='secondCircle' cx='70' cy='70' r='70'></circle>\r\n                            </svg>\r\n                            <div className=\"number\">\r\n                                <h2>{percentComplete}<span>%</span></h2>\r\n                            </div>\r\n                            <h2 className='text'>Complete</h2>\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Update Profile</h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PatientTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 3 && <Medical\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 4 && <Lifestyle\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 5 && <DiagnosisReport\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;\r\n","import { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n\r\n    const history = useHistory();\r\n    const buttonStyle = {\r\n        display: 'block',\r\n        background: 'transparent',\r\n        color: 'white',\r\n        outline: 'none',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        fontFamily: 'Poppins',\r\n        marginRight: '40px',\r\n    }\r\n\r\n    const signOut = () => {\r\n        //Reset the other variables....\r\n        sessionStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"id_val\", null);\r\n        localStorage.setItem('patient', null);\r\n        localStorage.setItem('token', null);\r\n\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"header-bar\">\r\n            <div className=\"header-bar-image\">\r\n                <Link to=\"/patients/profile\" ><img src=\"/mah-logo.png\" width=\"60\" />MAH Health Care</Link>\r\n            </div>\r\n            <button style={buttonStyle} onClick={signOut}>Sign Out</button>\r\n        </div>\r\n    );\r\n}\r\n","\r\nexport const DoctorsTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-karate\"></i>Portfolio\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{props.data.address}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailAddress}</td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [txtAddress, setTxtAddress] = useState(props.data.address ? [...props.data.address] : \"\");\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailAddress);\r\n\r\n    const updateContact = () => {\r\n        const data = {\r\n            address: [txtAddress],\r\n            emailAddress: txtEmail,\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Address</label>\r\n                            <textarea\r\n                                id=\"txtAddress\"\r\n                                value={txtAddress}\r\n                                onChange={e => setTxtAddress(e.target.value)}\r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={() => updateContact()}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Portfolio = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const specialization = props.data.specialization.certification\r\n        ? `${props.data?.specialization?.certification}, ${props.data?.specialization?.type}`\r\n        : \"\";\r\n\r\n    const license = props.data.license.certification\r\n        ? `${props.data?.license?.certification} - ${props.data?.license?.issueDate}`\r\n        : \"\";\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Qualifications and Specializations</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Qualification</td>\r\n                            <td>{props.data?.qualification && [...props.data?.qualification]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Specialization</td>\r\n                            <td>{specialization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>License</td>\r\n                            <td>{license}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <PortfolioDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PortfolioDialog = props => {\r\n    const [txtQualification, setTxtQualification] = useState(props.data.qualification ? [...props.data?.qualification] : '')\r\n    const [txtSpecialization, setTxtSpecialization] = useState(props.data?.specialization?.certification)\r\n    const [txtSpecializationType, setTxtSpecializationType] = useState(props.data?.specialization?.type)\r\n    const [txtLicense, setTxtLicense] = useState(props.data?.license?.certification)\r\n    const [txtLicenseIssueDate, setTxtLicenseIssueDate] = useState(props.data?.license?.issueDate)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            qualification: [txtQualification],\r\n            license: {\r\n                certification: txtLicense,\r\n                issueDate: txtLicenseIssueDate\r\n            },\r\n            specialization: {\r\n                certification: txtSpecialization,\r\n                type: txtSpecializationType\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Portfolio</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Qualification</label>\r\n                            <textarea\r\n                                id=\"txtQualification\"\r\n                                value={txtQualification}\r\n                                onChange={e => setTxtQualification(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <textarea\r\n                                id=\"txtSpecialization\"\r\n                                value={txtSpecialization}\r\n                                onChange={e => setTxtSpecialization(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Specialization - Type</label>\r\n                            <input\r\n                                id=\"txtSpecializationType\"\r\n                                value={txtSpecializationType}\r\n                                onChange={e => setTxtSpecializationType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>License</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"txtLicense\"\r\n                                value={txtLicense}\r\n                                onChange={e => setTxtLicense(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Issue Date</label>\r\n                            <input\r\n                                id=\"txtLicenseIssueDate\"\r\n                                value={txtLicenseIssueDate}\r\n                                onChange={e => setTxtLicenseIssueDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../components/header\";\r\nimport { DoctorsTabHeaders } from \"./tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport { Portfolio } from \"./tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [picture, setPicture] = useState(doctorsData.photo);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (resetData) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n                        setPicture(res.data.photo);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }\r\n\r\n    }, [resetData])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo === \"\" ? \"/portfolio/team-4.jpg\" : picture}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Doctor</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{doctorsData.name}</h2>\r\n                        <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4>\r\n                    </div>\r\n                    <h3>{doctorsData.specialization?.certification}</h3>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nexport const DoctorsLogin = props => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [txtDoctorsID, setTxtDoctorsID] = useState(\"\");\r\n    const [txtPhone, setTxtPhone] = useState(\"\");\r\n    const [txtPassword, setTxtPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        if (txtPhone === \"\" || txtDoctorsID === \"\" || txtPassword === \"\") {\r\n            props.showToast('Complete all fields before proceeding.', 'exclamation');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            loginId: txtPhone,\r\n            role: \"Doctor\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200 && response.uidNo === txtDoctorsID) {\r\n                    //Proceed to the doctors page...\r\n                    sessionStorage.setItem('token', response.token)\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo)\r\n                    history.push(\"/doctors/profile\");\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className='smaller-container'>\r\n                    <div className=\"container-divider\">\r\n                        <div className=\"left-sidebar\">\r\n                            <img src=\"../mah-logo.png\" />\r\n                            <div className='float-logo'>\r\n                                <i className='icofont-sign-in' />\r\n                            </div>\r\n                            <div className=\"left-text\">\r\n\r\n\r\n                                <div className='form-data'>\r\n\r\n                                    <h2>Returning Doctor</h2>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"input-group\">\r\n                                            <input\r\n                                                id=\"txtDoctorsID\"\r\n                                                value={txtDoctorsID}\r\n                                                onChange={e => setTxtDoctorsID(e.target.value)}\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                autoComplete='off'\r\n                                                maxLength={14}\r\n                                                placeholder='Doctor ID'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row mb-2\">\r\n                                        <div className=\"input-group-doctor\">\r\n                                            <PhoneInput\r\n                                                placeholder=\"Enter registered mobile number\"\r\n                                                value={txtPhone}\r\n                                                onChange={phone => setTxtPhone(phone)}\r\n                                                className='form-control'\r\n                                                style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"input-group\">\r\n                                            <input\r\n                                                id=\"txtPassword\"\r\n                                                value={txtPassword}\r\n                                                onChange={e => setTxtPassword(e.target.value)}\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                autoComplete='off'\r\n                                                placeholder='Password'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <h5>By continuing, you agree to our</h5>\r\n                                    <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                                    <button\r\n                                        id=\"btnLogin\"\r\n                                        className=\"btn-continue\"\r\n                                        onClick={tryLogin}   //Show 2fa page...\r\n                                    >Login <i className='icofont-sign-in' /></button>\r\n                                </div>\r\n                                <div className=\"doctor-register\">\r\n                                    <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                                <p>Certified and secure online healthcare platform</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-sidebar\">\r\n                            <img src=\"../doctors.svg\" />\r\n                            <div className=\"image-text\">\r\n                                <p>India's top doctors to guide you to better health everyday</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","export const Cards = (props) => {\r\n    return (\r\n        <div className=\"s-card\">\r\n            <div>\r\n                <div className=\"numbers\">{props.numbers}</div>\r\n                <div className=\"cardName\">{props.totalCases}</div>\r\n            </div>\r\n            <div className=\"iconBox\">\r\n                <i className={props.icofontClass} aria-hidden=\"true\"></i>\r\n                <span>{props.lastUpdatedTime}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const cardsValues = [\r\n    {\r\n      id: 1,\r\n      numbers: 364,\r\n      cases: \"Total Cases\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-medicine\",\r\n    },\r\n    {\r\n      id: 2,\r\n      numbers: 241,\r\n      cases: \"Patients\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-patient-file\",\r\n    },\r\n    {\r\n      id: 3,\r\n      numbers: 82,\r\n      cases: \"Doctors\",\r\n      lastUpdatedTime: \"7 hours ago\",\r\n      icofontClass: \"icofont-doctor\",\r\n    },\r\n    {\r\n      id: 4,\r\n      numbers: 43,\r\n      cases: \"Schedules\",\r\n      lastUpdatedTime: \"12 hours ago\",\r\n      icofontClass: \"icofont-delivery-time\",\r\n    },\r\n  ];\r\n\r\n  export default cardsValues;\r\n","import { Cards } from './cards'\r\nimport cardsValues from './cards-values'\r\n\r\nexport const CardBox = () => {\r\n    const vals = cardsValues.map(item => {\r\n        return (<Cards\r\n            key={item.id}\r\n            numbers={item.numbers}\r\n            totalCases={item.cases}\r\n            lastUpdatedTime={item.lastUpdatedTime}\r\n            icofontClass={item.icofontClass}\r\n        />)\r\n    })\r\n\r\n    return (\r\n        \r\n        <div className=\"cardBox\">\r\n            {vals}\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const DoctorsListItem = props => {\r\n    return (\r\n        <div\r\n            className={props.selectedDoctor === props.id ? \"d-list-item active\" : \"d-list-item\"}\r\n            onClick={() => props.setItem(props.id)}\r\n        >\r\n            <div className=\"image-part\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                <p><span>♥</span>{props.rating}</p>\r\n            </div>\r\n            <div className=\"name-part\">\r\n                <h3>{props.name}</h3>\r\n                <h4>{props.specialization}</h4>\r\n                <span className={props.status?.toLowerCase()}>\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { DoctorsTabHeaders } from \"../../doctors-profile/tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../../assets/common/base-url\";\r\nimport { Portfolio } from \"../../doctors-profile/tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = props.selectedDoctor;\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/search/\" + idValue, params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n        //Always remember to reset the data...\r\n        setResetData(false);\r\n\r\n    }\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n\r\n    }, [resetData, props.selectedDoctor])\r\n\r\n    const activateProfile = () => {\r\n        //Simply make the verification status of the particular individual Active...\r\n        const data = {\r\n            verification: {\r\n                \"uidNo\" : props.selectedDoctor,\r\n                status: \"Active\",\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"POST\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"mahadmin/verifyDoctor\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n    const displayActivate = doctorsData.verification?.status !== \"Pending\" ? \"d-none\" : \"btn-main\";\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"dash-body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo || \"/portfolio/avatar.png\"}\r\n                            alt=\"\"\r\n                        />\r\n                        <div className=\"title\">\r\n                            <h2>{doctorsData.name}</h2>\r\n                            {/* <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4> */}\r\n                        </div>\r\n                        <h3>{doctorsData.specialization?.certification}</h3>\r\n                        <button\r\n                            id=\"btnActivate\"\r\n                            className={displayActivate}\r\n                            onClick={activateProfile}\r\n                        >\r\n                            Activate Profile\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { Header } from \"../../components/header\";\r\nimport { CardBox } from './cardbox';\r\nimport { DoctorsListItem } from './doctors-list-item';\r\nimport Doctors from './doctors'\r\n\r\nconst Dashboard = props => {\r\n\r\n    const [txtSearch, setTxtSearch] = useState(\"\");\r\n    const [doctorsList, setDoctorsList] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n\r\n    const fetchDoctors = () => {\r\n        const params = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            method: 'GET'\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsList(res.data);\r\n                    setSelectedDoctor(res.data[0]?.uidNo)\r\n\r\n                    console.log(res.data[0]?.uidNo)\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Load a doctors' list immediately the form loads...\r\n        fetchDoctors();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const output = doctorsList.filter(item => item.name === txtSearch)\r\n    //     if (txtSearch !== \"\") {\r\n    //         setDoctorsList(output)\r\n    //     } else if (txtSearch === \"\") {\r\n    //         setDoctorsList(doctorsList);\r\n    //     }\r\n\r\n    //     setSelectedDoctor(doctorsList[0]?.id)\r\n\r\n    // }, [txtSearch])\r\n\r\n    const listItems = doctorsList.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                id={item.uidNo}\r\n                name={item.name}\r\n                src={item.photo}\r\n                rating={`4.${Math.floor(Math.random() * 9)}`}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                key={index}\r\n                setItem={value => setSelectedDoctor(value)}\r\n                selectedDoctor={selectedDoctor}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='main'>\r\n                <CardBox />\r\n                <div className='main-content'>\r\n                    <div className=\"left-main mt-2\">\r\n                        <div className=\"input-group d-none\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtSearch\"\r\n                                type=\"text\"\r\n                                value={txtSearch}\r\n                                onChange={e => setTxtSearch(e.target.value)}\r\n                                placeholder='Search for Doctor'\r\n\r\n                            />\r\n                            <i className=\"icofont-search\"></i>\r\n                        </div>\r\n                        <div className='doctors-list'>\r\n                            {listItems}\r\n                        </div>\r\n                    </div>\r\n                    <div className='right-main'>\r\n                        {selectedDoctor && selectedDoctor !== '' && <Doctors\r\n                            setIsLoaderVisible={props.setIsLoaderVisible}\r\n                            showToast={props.showToast}\r\n                            selectedDoctor={selectedDoctor}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","export const DEFAULT_DOMAIN = 'meet.webshrine.in';","export const getRoomName = (roomName, tenant) => tenant ? `${tenant}/${roomName}` : roomName;\nlet instancesCounter = 0;\nexport const generateComponentId = (prefix) => `${prefix}-${instancesCounter++}`;\n","import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\r\n\r\nexport default function meetspinner() {\r\n  return  _jsx(_Fragment, {\r\n    children: [\r\n      _jsx(\"div\", {\r\n        style: {\r\n          color: 'green',\r\n          textAlign: 'center',\r\n          fontSize:'1.75rem',\r\n          fontWeight:500,\r\n        },\r\n        children: 'Meeting Loading ...'\r\n      }),\r\n      _jsx(\"div\", {\r\n      children:[\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-primary\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-secondary\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-success\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-danger\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-warning\"\r\n        }),\r\n        _jsx(\"div\", {\r\n          class:\"spinner-grow text-info\"\r\n        })\r\n      ]\r\n    })\r\n    ]\r\n  });\r\n}\r\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { fetchExternalApi } from '@meet/web-sdk';\nimport { generateComponentId } from '@meet/web-sdk/lib/utils';\nimport { DEFAULT_DOMAIN } from \"@meet/web-sdk/lib/constants\";\nimport  meetspinner  from \"@meet/web-sdk/lib/components/MeetSpinner\";\n\n\nconst Meet = ({roomName, subject,  \n    interfaceConfigOverwrite, jwt, invitees, devices, \n    userInfo, onApiReady, width, height, border, background }) => {\n    const [componentId, setComponentId] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [apiLoaded, setApiLoaded] = useState(false);\n    const externalApi = useRef();\n    const apiRef = useRef();\n    const meetingRef = useRef(null);\n    const Spinner = meetspinner;\n    const domain =\"meet.webshrine.in\";\n    var configOverwrite = {\n        subject : subject\n    };\n\n    var getIFrameRef= (iframeRef) => {\n        (border)?iframeRef.style.border = border: '0px solid cadetblue';\n        (background)?iframeRef.style.background = background: iframeRef.style.background = 'transparent'; \n        iframeRef.style.width = width;\n        iframeRef.style.height = height;\n    };\n\n\n    useEffect(() => {\n        setComponentId(generateComponentId('Meet'));\n        fetchExternalApi(DEFAULT_DOMAIN)\n            .then((api) => {\n            externalApi.current = api;\n            setApiLoaded(true);\n        })\n            .catch((e) => console.error(e.message));\n    }, []);\n\n    \n    const loadIFrame = useCallback((JitsiMeetExternalAPI) => {\n        \n        apiRef.current = new JitsiMeetExternalAPI(DEFAULT_DOMAIN, {\n            roomName,\n            configOverwrite,\n            interfaceConfigOverwrite,\n            jwt,\n            invitees,\n            devices,\n            userInfo,\n            parentNode: meetingRef.current\n        });\n        setLoading(false);\n        if (apiRef.current) {\n            onApiReady(apiRef.current);\n            (getIFrameRef && meetingRef.current) && getIFrameRef(meetingRef.current);\n        }\n    }, [\n        apiRef,\n        meetingRef,\n        onApiReady,\n        getIFrameRef,\n        domain,\n        roomName,\n        configOverwrite,\n        interfaceConfigOverwrite,\n        jwt,\n        invitees,\n        devices,\n        userInfo\n    ]);\n    useEffect(() => {\n        if (apiLoaded && !apiRef.current) {\n            if (externalApi.current) {\n                loadIFrame(externalApi.current);\n            }\n        }\n    }, [apiLoaded, loadIFrame]);\n    const renderLoadingSpinner = useCallback(() => {\n        if (!Spinner) {\n            return null;\n        }\n        if (!loading || apiRef.current) {\n            return null;\n        }\n        return _jsx(Spinner, {}, void 0);\n    }, [Spinner, apiRef.current]);\n    return (_jsxs(_Fragment, { children: [renderLoadingSpinner(), _jsx(\"div\", { id: componentId, ref: meetingRef }, componentId)] }, void 0));\n};\nexport default Meet;\n","\r\nexport const MeetingTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-check\"></i> Complaints\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-glass\"></i>Lifestyle\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-medicine\"></i>Prescriptions\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-laboratory\"></i>Labs\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 5 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(5)}\r\n            >\r\n                <i className=\"icofont-double-right\"></i>Next.Consult\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nexport const Complaints = props => {\r\n\r\n    const { cbxComplaints, setCbxComplaints } = props.Complaints;\r\n    const { txtRemarks, setTxtRemarks } = props.Remarks;\r\n    const { txtObservations, setTxtObservations } = props.Observations\r\n    const { selectedSymptoms, setSelectedSymptoms } = props.SelectedSymptoms\r\n\r\n    const symptoms = [\"Cough\", \"Cold\", \"Cattargh\", \"Fever\", \"Headaches\", \"Sneezing\"]\r\n    const symptomsObj = symptoms.map((item, index) => {\r\n        return (<option key={index} value={item}>{item}</option>)\r\n    })\r\n\r\n    useEffect(() => {\r\n        //As the variables in the dependency array change,\r\n        //Proceed to updat the props...\r\n        props.setComplaints({\r\n            \"symptoms\": selectedSymptoms.join(\", \"),\r\n            \"remarks\": txtRemarks\r\n        })\r\n\r\n        props.setObs({\r\n            \"earlySigns\": txtObservations,\r\n            \"remarks\": txtRemarks\r\n        })\r\n\r\n    }, [cbxComplaints, txtRemarks, txtObservations])\r\n\r\n    const addItemToList = (selItem) => {\r\n        //Ensure that the selected item is not in the list...\r\n        if (selectedSymptoms.indexOf(selItem) === -1) {\r\n            //Item is not found in the list...\r\n            setSelectedSymptoms([...selectedSymptoms, selItem])\r\n\r\n            //Also, remove this item from the original list.\r\n            symptoms.splice(symptoms.indexOf(selItem), 1);\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px' }}>\r\n                <div className='form-row'>\r\n                    <div className=\"input-group\">\r\n                        <label>Complaints / Discomforts / Symptoms</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxComplaints'\r\n                            value={cbxComplaints}\r\n                            onChange={e => {\r\n                                setCbxComplaints(e.target.value)\r\n                                addItemToList(e.target.value)\r\n                            }}\r\n                        >\r\n                            {symptomsObj}\r\n                        </select>\r\n                    </div>\r\n                    {selectedSymptoms.length > 0 && <div className='sel-items'>{selectedSymptoms.join(\", \")}</div>}\r\n                </div>\r\n                <div className='form-row-2'>\r\n                    <div className='input-group'>\r\n                        <label>Remarks</label>\r\n                        <textarea\r\n                            className='form-control'\r\n                            rows={3}\r\n                            id='txtRemarks'\r\n                            value={txtRemarks}\r\n                            onChange={e => setTxtRemarks(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Observations by Doctor</label>\r\n                        <textarea\r\n                            className='form-control'\r\n                            rows={3}\r\n                            id='txtObservations'\r\n                            value={txtObservations}\r\n                            onChange={e => setTxtObservations(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\n\r\nexport const NextConsult = props => {\r\n\r\n    const { cbxRevisit, setCbxRevisit } = props.Revisit;\r\n    const { cbxRevisitDate, setCbxRevisitDate } = props.RevisitDate;\r\n    const { txtDescription, setTxtDescription } = props.Description;\r\n\r\n    useEffect(() => {\r\n        props.setRevisitData({\r\n            \"revisitRequired\": cbxRevisit,\r\n            \"revisitDate\": cbxRevisitDate,\r\n            \"revisitDescription\": txtDescription\r\n        })\r\n\r\n    }, [cbxRevisit, cbxRevisitDate, txtDescription])\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px' }}>\r\n                <div className='form-row-2-1'>\r\n                    <div className='input-group'>\r\n                        <label>Revisit required?</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxRevisit'\r\n                            value={cbxRevisit}\r\n                            onChange={e => setCbxRevisit(e.target.value)}\r\n                        >\r\n                            <option value='No'>No</option>\r\n                            <option value='Yes'>Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={cbxRevisit === \"Yes\" ? 'input-group' : 'd-none'}>\r\n                        <label>Revisit Date?</label>\r\n                        <input\r\n                            className='form-control'\r\n                            id='cbxRevisitDate'\r\n                            value={cbxRevisitDate}\r\n                            onChange={e => setCbxRevisitDate(e.target.value)}\r\n                            type='datetime-local'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='form-row'>\r\n                    <div className={cbxRevisit === \"Yes\" ? 'input-group' : 'd-none'}>\r\n                        <label>Description</label>\r\n                        <textarea\r\n                            className='form-control'\r\n                            id='txtDescription'\r\n                            value={txtDescription}\r\n                            onChange={e => setTxtDescription(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport const Prescriptions = props => {\r\n\r\n    const { cbxName, setCbxName } = props.Name;\r\n\r\n\r\n    const [cbxFormulation, setCbxFormulation] = useState('')\r\n    const [cbxUnits, setCbxUnits] = useState('')\r\n    const [cbxDosage, setCbxDosage] = useState('')\r\n    const [cbxFrequency, setCbxFrequency] = useState('')\r\n    const [cbxDuration, setCbxDuration] = useState('')\r\n    const [cbxHowToTake, setCbxHowToTake] = useState('')\r\n    const [txtRemarks, setTxtRemarks] = useState('')\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px', marginTop: '-20px' }}>\r\n                <div className='form-row'>\r\n                    <div className='input-group'>\r\n                        <label>Drug</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxName'\r\n                            value={cbxName}\r\n                            onChange={e => setCbxName(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='Maldox'>Maldox</option>\r\n                            <option value='Augmentin'>Augmentin</option>\r\n                            <option value='Penicillin'>Penicillin</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-3'>\r\n                    <div className='input-group'>\r\n                        <label>Formulation</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxFormulation'\r\n                            value={cbxFormulation}\r\n                            onChange={e => setCbxFormulation(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='Tablet'>Tablet</option>\r\n                            <option value='Capsule'>Capsule</option>\r\n                            <option value='Syrup'>Syrup</option>\r\n                            <option value='Injection'>Injection</option>\r\n                            <option value='Powder'>Powder</option>\r\n                            <option value='Serum'>Serum</option>\r\n                            <option value='Oil'>Oil</option>\r\n                            <option value='Other'>Other</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Units (uom)</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxUnits'\r\n                            value={cbxUnits}\r\n                            onChange={e => setCbxUnits(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='tbsp'>tbsp</option>\r\n                            <option value='tablet'>tablet</option>\r\n                            <option value='ml'>ml</option>\r\n                            <option value='mg'>mg</option>\r\n                            <option value='unit'>unit</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Dosage</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxDosage'\r\n                            value={cbxDosage}\r\n                            onChange={e => setCbxDosage(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='1 uom'>1 uom</option>\r\n                            <option value='2 uom'>2 uom</option>\r\n                            <option value='3 uom'>3 uom</option>\r\n                            <option value='4 uom'>4 uom</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-3'>\r\n                    <div className='input-group'>\r\n                        <label>Frequency</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxFrequency'\r\n                            value={cbxFrequency}\r\n                            onChange={e => setCbxFrequency(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='Once a day'>Once a day</option>\r\n                            <option value='Twice a day'>Twice a day</option>\r\n                            <option value='Thrice a day'>Thrice a day</option>\r\n                            <option value='Once a week'>Once a week</option>\r\n                            <option value='Once a month'>Once a month</option>\r\n                            <option value='Twice a month'>Twice a month</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Duration</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxDuration'\r\n                            value={cbxDuration}\r\n                            onChange={e => setCbxDuration(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='1 day'>1 day</option>\r\n                            <option value='2 days'>2 days</option>\r\n                            <option value='3 days'>3 days</option>\r\n                            <option value='1 week'>1 week</option>\r\n                            <option value='2 weeks'>2 weeks</option>\r\n                            <option value='1 month'>1 month</option>\r\n                            <option value='1 year'>1 year</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>How to take</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxHowToTake'\r\n                            value={cbxHowToTake}\r\n                            onChange={e => setCbxHowToTake(e.target.value)}\r\n                        >\r\n                            <option value=''>Select</option>\r\n                            <option value='od'>od</option>\r\n                            <option value='bd'>bd</option>\r\n                            <option value='tds'>tds</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-2-1'>\r\n                    <div className='input-group'>\r\n                        <label>Remarks</label>\r\n                        <textarea\r\n                            className='form-control'\r\n                            id='txtRemarks'\r\n                            value={txtRemarks}\r\n                            onChange={e => setTxtRemarks(e.target.value)}\r\n                            rows={2}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label style={{ opacity: 0 }}>1</label>\r\n                        <button\r\n                            className='btn-main-outline'\r\n                            id='btnAdd'\r\n                            onClick={() => props.showToast('This will eventually add this to a list/array of prescriptions, to be updated with the update click.', 'exclamation')}\r\n                        >\r\n                            Add <i className='icofont-plus' />\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nexport const SuggestedLifestyle = props => {\r\n\r\n    const { txtSmokingHabits, setTxtSmokingHabits } = props.SmokingHabits\r\n    const { txtAlcohol, setTxtAlcohol } = props.Alcohol\r\n    const { txtActivityLevel, setTxtActivityLevel } = props.ActivityLevel\r\n    const { txtFoodPreference, setTxtFoodPreference } = props.FoodPreference\r\n    const { txtPhysiotherapy, setTxtPhysiotherapy } = props.Physiotherapy\r\n    const { txtFoodsToAvoid, setTxtFoodsToAvoid } = props.FoodsToAvoid\r\n\r\n    const [selectedPhysio, setSelectedPhysio] = useState([])\r\n    const [selectedFoodsToAvoid, setSelectedFoodsToAvoid] = useState([])\r\n\r\n    useEffect(() => {\r\n        props.setPhysiotherapy(selectedPhysio)\r\n        props.setFoodsToAvoid(selectedFoodsToAvoid)\r\n        props.setRecommendedFoods(txtFoodPreference?.split(\",\"));\r\n\r\n    }, [txtPhysiotherapy, txtFoodsToAvoid])\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px' }}>\r\n                <div className='form-row-2'>\r\n                    <div className='input-group'>\r\n                        <label>Smoking Habits</label>\r\n                        <select\r\n                            id=\"txtSmokingHabits\"\r\n                            value={txtSmokingHabits}\r\n                            className=\"form-control\"\r\n                            onChange={e => setTxtSmokingHabits(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"I don't smoke\">I don't smoke</option>\r\n                            <option value=\"I used to, but I quit\">I used to, but I quit</option>\r\n                            <option value=\"1-2/day\">1-2/day</option>\r\n                            <option value=\"3-5/day\">3-5/day</option>\r\n                            <option value=\"5-10/day\">5-10/day</option>\r\n                            <option value=\"> 10/day\">{'> 10/day'}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Alcohol Consumption</label>\r\n                        <select\r\n                            id=\"txtAlcohol\"\r\n                            value={txtAlcohol}\r\n                            className=\"form-control\"\r\n                            onChange={e => setTxtAlcohol(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Non-Drinker\">Non-Drinker</option>\r\n                            <option value=\"Rare\">Rare</option>\r\n                            <option value=\"Social\">Social</option>\r\n                            <option value=\"Regular\">Regular</option>\r\n                            <option value=\"Heavy\">Heavy</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row-2-1\">\r\n                    <div className='input-group'>\r\n                        <label>Activity Level</label>\r\n                        <select\r\n                            id=\"txtActivityLevel\"\r\n                            value={txtActivityLevel}\r\n                            className=\"form-control\"\r\n                            onChange={e => setTxtActivityLevel(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Sedentary (Low)\">Sedentary (Low)</option>\r\n                            <option value=\"Moderately Active (Normal)\">Moderately Active (Normal)</option>\r\n                            <option value=\"Active (High)\">Active (High)</option>\r\n                            <option value=\"Athletic (Very High)\">Athletic (Very High)</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Food Preference</label>\r\n                        <select\r\n                            id=\"txtFoodPreference\"\r\n                            value={txtFoodPreference}\r\n                            className=\"form-control\"\r\n                            onChange={e => setTxtFoodPreference(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Vegetarian\">Vegetarian</option>\r\n                            <option value=\"Non-Vegetarian\">Non-Vegetarian</option>\r\n                            <option value=\"Eggetarian\">Eggetarian</option>\r\n                            <option value=\"Vegan\">Vegan</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='form-row-2'>\r\n                    <div className='input-group'>\r\n                        <label>Foods to avoid</label>\r\n                        <select\r\n                            id=\"txtFoodsToAvoid\"\r\n                            value={txtFoodsToAvoid}\r\n                            className=\"form-control\"\r\n                            onChange={e => {\r\n                                setTxtFoodsToAvoid(e.target.value);\r\n                                (selectedFoodsToAvoid.indexOf(e.target.value) === -1) && setSelectedFoodsToAvoid([...selectedFoodsToAvoid, e.target.value])\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Starchy\">Starchy</option>\r\n                            <option value=\"Animal Protein\">Animal Protein</option>\r\n                            <option value=\"Oily\">Oily</option>\r\n                            <option value=\"Alcohol\">Alcohol</option>\r\n                        </select>\r\n                        {selectedFoodsToAvoid.length > 0 && <div className='sel-items'>{selectedFoodsToAvoid.join(\", \")}</div>}\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <label>Physiotherapy</label>\r\n                        <select\r\n                            id='txtPhysiotherapy'\r\n                            value={txtPhysiotherapy}\r\n                            onChange={e => {\r\n                                setTxtPhysiotherapy(e.target.value);\r\n                                (selectedPhysio.indexOf(e.target.value) === -1) && setSelectedPhysio([...selectedPhysio, e.target.value])\r\n                            }}\r\n                            className='form-control'\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Walking\">Walking</option>\r\n                            <option value=\"Stretching\">Stretching</option>\r\n                            <option value=\"Yoga\">Yoga</option>\r\n                            <option value=\"Skipping\">Skipping</option>\r\n                            <option value=\"Other\">Other</option>\r\n                        </select>\r\n                        {selectedPhysio.length > 0 && <div className='sel-items'>{selectedPhysio.join(\", \")}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nexport const TestsAndLabs = props => {\r\n\r\n    const { cbxTests, setCbxTests } = props.Tests;\r\n    const { selectedTests, setSelectedTests } = props.SelectedTests;\r\n\r\n    const tests = ['PCV', 'Malaria Parasite', 'Widal', 'FBC', 'FBS', 'RBS', 'Stool M/C/C']\r\n    const testsObj = tests.map((item, index) => {\r\n        return (<option key={index} value={item}>{item}</option>)\r\n    })\r\n\r\n    const addItemToList = (selItem) => {\r\n        //Ensure that the selected item is not in the list...\r\n        if (selectedTests.indexOf(selItem) === -1) {\r\n            //Item is not found in the list...\r\n            setSelectedTests([...selectedTests, selItem])\r\n\r\n            //Also, remove this item from the original list.\r\n            tests.splice(tests.indexOf(selItem), 1)\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.setRecommendedTests(selectedTests);\r\n    }, [selectedTests])\r\n\r\n    return (\r\n        <div className='tab-page-content'>\r\n            <div className='page-body' style={{ padding: '0 10px' }}>\r\n                <div className='form-row'>\r\n                    <div className='input-group'>\r\n                        <label>Recommended tests/laboratories</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='cbxTests'\r\n                            value={cbxTests}\r\n                            onChange={e => {\r\n                                setCbxTests(e.target.value)\r\n                                addItemToList(e.target.value)\r\n                            }}\r\n                        >\r\n                            <option value='' style={{ background: '#efefef01' }}>Select</option>\r\n                            { testsObj }\r\n                        </select>\r\n                    </div>\r\n                    {selectedTests.length > 0 && <div className='sel-items'>{selectedTests.join(\", \")}</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { MeetingTabHeaders } from './meeting-tab-headers'\r\nimport { Complaints } from './meeting-tabs/complaints'\r\nimport { NextConsult } from './meeting-tabs/next-consult'\r\nimport { Prescriptions } from './meeting-tabs/prescriptions'\r\nimport { SuggestedLifestyle } from './meeting-tabs/suggested-lifestyle'\r\nimport { TestsAndLabs } from './meeting-tabs/tests-and-labs'\r\nimport { ApiPath } from '../assets/common/base-url'\r\n\r\nexport const MeetingDialog = (props) => {\r\n\r\n    const patientData = useRef(JSON.parse(localStorage.getItem('patient')))\r\n    const [age, setAge] = useState('')\r\n    const [selectedTab, setSelectedTab] = useState(1)\r\n\r\n    const [complaints, setComplaints] = useState({ \"symptoms\": \"\", \"remarks\": \"\" })\r\n    const [physiotherapy, setPhysiotherapy] = useState([])\r\n    const [foodsToAvoid, setFoodsToAvoid] = useState([])\r\n    const [recommendedFoods, setRecommendedFoods] = useState([])\r\n    const [recommendedTests, setRecommendedTests] = useState([])\r\n    const [revisitData, setRevisitData] = useState({ \"revisitRequired\": \"\", \"revisitDate\": \"\", \"revisitDescription\": \"\" })\r\n    const [obs, setObs] = useState({ \"earlySigns\": \"\", \"remarks\": \"\" })\r\n\r\n\r\n    //Complaints...\r\n    const [cbxComplaints, setCbxComplaints] = useState('')\r\n    const [txtRemarks, setTxtRemarks] = useState('')\r\n    const [txtObservations, setTxtObservations] = useState('')\r\n    const [selectedSymptoms, setSelectedSymptoms] = useState([])\r\n\r\n    //Suggested Lifestyle...\r\n    const [txtSmokingHabits, setTxtSmokingHabits] = useState(patientData.lifeStyle?.smokingHabbit)\r\n    const [txtAlcohol, setTxtAlcohol] = useState(patientData.lifeStyle?.alcoholConsumption)\r\n    const [txtActivityLevel, setTxtActivityLevel] = useState(patientData.lifeStyle?.activityLevel)\r\n    const [txtFoodPreference, setTxtFoodPreference] = useState(patientData.lifeStyle?.foodPreference)\r\n    const [txtPhysiotherapy, setTxtPhysiotherapy] = useState('')\r\n    const [txtFoodsToAvoid, setTxtFoodsToAvoid] = useState('')\r\n\r\n\r\n    //Prescriptions part...\r\n    const [cbxName, setCbxName] = useState('')\r\n\r\n    //Labs and Tests\r\n    const [cbxTests, setCbxTests] = useState('')\r\n    const [selectedTests, setSelectedTests] = useState([])\r\n\r\n    //Next consultation\r\n    const [cbxRevisit, setCbxRevisit] = useState('')\r\n    const [cbxRevisitDate, setCbxRevisitDate] = useState('')\r\n    const [txtDescription, setTxtDescription] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        //fetch the required data fro the patient...\r\n        const dateDiff = new Date().getFullYear() - new Date(patientData.current.birthDate).getFullYear();\r\n        setAge(dateDiff);\r\n\r\n    }, [])\r\n\r\n    const updatePrescriptions = () => {\r\n        //Update all requirements...\r\n        const updateData = {\r\n            complaints: complaints,\r\n            physiotherapy: physiotherapy,\r\n            foodToAvoid: foodsToAvoid,\r\n            recommendedFood: recommendedFoods,\r\n            recommendedTests: recommendedTests,\r\n            revisit: revisitData,\r\n            observations: obs,\r\n            medicinesPrescribed: [cbxName]\r\n\r\n        }\r\n\r\n        //Proceed to update...\r\n        const params = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(updateData),\r\n        }\r\n\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"appointment/addPrescription\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    props.showToast(\"Prescription updated successfully!\", 'success');\r\n\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='dialog-background fade'>\r\n            <div className='dialog-container' style={{ minWidth: '900px' }}>\r\n                <div className='dialog-header'>\r\n                    <h2 className='nully' style={{ color: 'var(--bluish)' }}>\r\n                        <i className='icofont-stethoscope'></i> {'In-Call Consultation'}\r\n                    </h2>\r\n                </div>\r\n                <div className='dialog-body mb-2'>\r\n                    <div className='span-in-span'>\r\n                        <span><i className='icofont-user-alt-7' /> {patientData.current.name} ({age}): <span> {patientData.current.uidNo} - <i className='icofont-location-pin'></i> {patientData.current.address[0]?.city}</span></span>\r\n                        <span><i className='icofont-doctor' /> Consulting Doctor: <span>{props.doctorId}</span></span>\r\n                    </div>\r\n                    <div className='form-row-1-2'>\r\n                        <div className='left' style={{ minHeight: '400px', background: '#efefef', padding: 20 }}>\r\n                            <button className='link-main' onClick={() => alert('This to be added later!')}>Past Prescriptions...</button>\r\n                            <button className='link-main mb-2' onClick={() => alert('This to be added later!')}>Current Medications...</button>\r\n\r\n                            <div>\r\n                                <table className='dialog-left-panel'>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>Bld Grp</td>\r\n                                            <td>{patientData.current.general.bloodGroup}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Height</td>\r\n                                            <td>{patientData.current.general.height}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Weight</td>\r\n                                            <td>{patientData.current.general.weight}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>BMI</td>\r\n                                            <td>{patientData.current.general.bmi}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Chest Exp.</td>\r\n                                            <td>{patientData.current.general.chestExpansion}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Vision</td>\r\n                                            <td>{patientData.current.general.vision}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>BP</td>\r\n                                            <td>{patientData.current.general.bp}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Pulse</td>\r\n                                            <td>{patientData.current.general.pulse}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Oxy. Sat</td>\r\n                                            <td>{patientData.current.general.oxygenSaturation}</td>\r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className='right' style={{ height: '400px' }}>\r\n                            <MeetingTabHeaders\r\n                                selectedTab={selectedTab}\r\n                                setSelectedTab={value => setSelectedTab(value)}\r\n                            />\r\n                            {/* The tab pages... */}\r\n                            {selectedTab === 1 && <Complaints\r\n                                data={patientData}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                setComplaints={setComplaints}\r\n                                setObs={setObs}\r\n\r\n                                Complaints={{ cbxComplaints, setCbxComplaints }}\r\n                                Remarks={{ txtRemarks, setTxtRemarks }}\r\n                                Observations={{ txtObservations, setTxtObservations }}\r\n                                SelectedSymptoms={{ selectedSymptoms, setSelectedSymptoms }}\r\n                            />}\r\n\r\n                            {selectedTab === 2 && <SuggestedLifestyle\r\n                                data={patientData}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                setPhysiotherapy={setPhysiotherapy}\r\n                                setFoodsToAvoid={setFoodsToAvoid}\r\n                                setRecommendedFoods={setRecommendedFoods}\r\n\r\n                                SmokingHabits={{ txtSmokingHabits, setTxtSmokingHabits }}\r\n                                Alcohol={{ txtAlcohol, setTxtAlcohol }}\r\n                                ActivityLevel={{ txtActivityLevel, setTxtActivityLevel }}\r\n                                FoodPreference={{ txtFoodPreference, setTxtFoodPreference }}\r\n                                Physiotherapy={{ txtPhysiotherapy, setTxtPhysiotherapy }}\r\n                                FoodsToAvoid={{ txtFoodsToAvoid, setTxtFoodsToAvoid }}\r\n                            />}\r\n\r\n                            {selectedTab === 3 && <Prescriptions\r\n                                data={patientData}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                Name={{cbxName, setCbxName}}\r\n                            />}\r\n\r\n                            {selectedTab === 4 && <TestsAndLabs\r\n                                data={patientData}\r\n                                setRecommendedTests={setRecommendedTests}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n\r\n                                Tests={{ cbxTests, setCbxTests }}\r\n                                SelectedTests={{ selectedTests, setSelectedTests }}\r\n                            />}\r\n\r\n                            {selectedTab === 5 && <NextConsult\r\n                                data={patientData}\r\n                                showToast={props.showToast}\r\n                                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                                setRevisitData={setRevisitData}\r\n\r\n                                Revisit={{ cbxRevisit, setCbxRevisit }}\r\n                                RevisitDate={{ cbxRevisitDate, setCbxRevisitDate }}\r\n                                Description={{ txtDescription, setTxtDescription }}\r\n                            />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='dialog-footer main'>\r\n                    <button className='btn-main mr-1' onClick={() => updatePrescriptions()}>Update</button>\r\n                    <button className='btn-main-outline' onClick={() => props.hideDialog()}>Cancel</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { CryptoApiPath } from '../assets/common/base-url';\r\nimport { Meet } from '@meet/web-sdk';\r\nimport { MeetingDialog } from './meeting-dialog';\r\n\r\nconst Meeting = props => {\r\n\r\n    const [token, setToken] = useState('')\r\n    const [txtPastPrescription, setTxtPastPrescription] = useState('')\r\n    const [showDialog, setShowDialog] = useState(false)\r\n    const [meetingData, setMeetingData] = useState({});\r\n    const [patientId, setPatientId] = useState('')\r\n    const [doctorId, setDoctorId] = useState('')\r\n\r\n    const apiRef = useRef();\r\n\r\n    useEffect(() => {\r\n        fetchToken()\r\n    }, [])\r\n\r\n    const fetchToken = () => {\r\n        //Get the top elements...\r\n        const searchString = window.location.search;\r\n        const urlParams = new URLSearchParams(searchString);\r\n\r\n        const meetingId = urlParams.get('meeting_id');\r\n        setDoctorId(urlParams.get('doctor_id'));\r\n        setPatientId(urlParams.get('patient_id'));\r\n        const gravatar = urlParams.get('gravatar');\r\n        const past_prescription = urlParams.get('past_prescription');\r\n\r\n        //Set the token for loading...\r\n        sessionStorage.setItem('token', urlParams.get('tk'));\r\n\r\n        //fetch token on form load....\r\n        fetch(CryptoApiPath + 'retriveTokenFor?meeting_id=' + meetingId + '&doctor=' + doctorId + '&gravatar=' + gravatar)\r\n            .then(response => (response.json()))\r\n            .then(res => {\r\n                if (res.status === 200 && res.statusText === \"OK\") {\r\n                    //Set the output\r\n                    setToken(res.result.token);\r\n                    setTxtPastPrescription(past_prescription);\r\n                    setMeetingData(res.result);\r\n\r\n                    console.log(res.result.token);\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const handleClose = data => {\r\n        console.log('Close Meeting', data);\r\n    }\r\n\r\n    const suspendDetected = (data) => {\r\n        console.log(data);\r\n    }\r\n\r\n    const manageApi = (apiObj, ref) => {\r\n        ref.current = apiObj;\r\n        ref.current.addEventListeners({\r\n            readyToClose: handleClose,\r\n            suspendDetected: suspendDetected\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <Meet\r\n                roomName={'room1'}  //meetingData.roomNumber\r\n                subject='Doctor Consultation'\r\n                jwt={token}\r\n                onApiReady={eApi => manageApi(eApi, apiRef)}\r\n                width={'100vw'}\r\n                height={'100vh'}\r\n\r\n            />\r\n            <div className='meeting-button-container'>\r\n                <div className='prescription'>\r\n                    <button\r\n                        id='btnPostPrescription'\r\n                        onClick={() => setShowDialog(true)}\r\n                        className='btn-main'\r\n                        style={{ width: '100%' }}\r\n                    >\r\n                        Prescription Dialog ...\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {\r\n                showDialog && <MeetingDialog\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    hideDialog={() => setShowDialog(false)}\r\n                    patientId={patientId}\r\n                    doctorId={meetingData.displayName}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Meeting;\r\n","import { useEffect, useState } from \"react\";\r\nimport { CryptoApiPath } from \"../assets/common/base-url\";\r\nimport { constants } from \"../assets/common/constants\";\r\n\r\nconst useCheckAppointmentBooked = (uidNo, setAppointmentBooked, appointmentBooked) => {\r\n\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [doctorsData, setDoctorsData] = useState({});\r\n    const [pastAppointments, setPastAppointments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //Remember, that this should be for\r\n        // year, month, day, hour, minute, second\r\n        const timeValueOfToday = new Date('2022-01-01').getTime();      //Remove date in parenthesis later....\r\n        const timeValueOf3MonthsTime = new Date().getTime() + (60 * 60 * 24 * 90);\r\n\r\n        //Set other parameters...\r\n        const input1 = `starttime=${timeValueOfToday}&endtime=${timeValueOf3MonthsTime}`;\r\n        const options = constants.getOptions;\r\n\r\n        setIsLoading(true);\r\n\r\n        fetch(`${CryptoApiPath}getMeetingList?${input1}`, options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoading(false);\r\n                if (response.status === 200) {\r\n                    //Retrieve the result...\r\n                    const result = response.result?.filter(item => item.patient_id === uidNo)\r\n\r\n                    //Set other parameters...\r\n                    setDoctorsData(result[result.length - 1]);\r\n                    setPastAppointments(result)\r\n\r\n                    console.log(result[result.length]);\r\n\r\n                    if (result.length > 0) {\r\n                        //Fiter generated result thus...\r\n                        setAppointmentBooked(true);\r\n                    } else {\r\n                        setAppointmentBooked(false);\r\n                    }\r\n\r\n\r\n                } else {\r\n                    setError('Failed to fetch data. Please try again after some time.', 'exclamation');\r\n                }\r\n            })\r\n\r\n            .catch(err => {\r\n                setIsLoading(false);\r\n                setError(err, \"exclamation\");\r\n            })\r\n\r\n    }, [])\r\n\r\n    return ({ error, isLoading, doctorsData, pastAppointments });\r\n}\r\n\r\nexport default useCheckAppointmentBooked;\r\n","export const DHPHeader = () => {\r\n\r\n    return (\r\n        <div className='dhp-header'>\r\n            <div className='header-text'>\r\n                <h2>Digital Health Passport</h2>\r\n                <p>The pandemic of Corona Virus infection in 2020 has triggered the importance\r\n                    of fast response to health issues\r\n                </p>\r\n                <button className='btn-main' onClick={() => alert('Confirm Passort Status')}>Confirm Passport Status</button>\r\n            </div>\r\n            <div className='bar-code'>\r\n                <img src='/QR_code.png' alt='' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { ApiPath, CryptoApiPath } from '../assets/common/base-url';\r\nimport { constants } from '../assets/common/constants';\r\n\r\nexport const DoctorsDialog = props => {\r\n\r\n    const today = new Date();\r\n    const [cbxSpeciality, setCbxSpeciality] = useState('Allergist')\r\n    const [doctorsData, setDoctorsData] = useState('')\r\n    const [selectedDoctor, setSelectedDoctor] = useState('')\r\n    const [txtDate, setTxtDate] = useState(today.getFullYear() + \"-\" + today.getMonth() + 1 + \"-\" + today.getDate());\r\n    const [spanValue, setSpanValue] = useState(1);\r\n    const [timeOfCommencement, setTimeOfCommencement] = useState('')\r\n\r\n    //The componentDidMount equivalent...\r\n    //Fetch the doctors list...\r\n    const params = constants.getOptions;\r\n\r\n    useEffect(() => {\r\n        //To set the actual timing for the time of commencement\r\n        switch (spanValue) {\r\n            case 1:\r\n                setTimeOfCommencement(new Date(`${txtDate} 11:00:00`))\r\n                break;\r\n            case 2:\r\n                setTimeOfCommencement(new Date(`${txtDate} 14:00:00`))\r\n                break;\r\n            default:\r\n                setTimeOfCommencement(new Date(`${txtDate} 20:00:00`))\r\n                break;\r\n        }\r\n\r\n        console.log(timeOfCommencement);\r\n\r\n    }, [spanValue])\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    const selectDoctor = () => {\r\n        //Call api to schedule appointment...\r\n        //Get the details of the doctor in question...\r\n        if (cbxSpeciality === \"\" || txtDate === \"\") {\r\n            props.showToast(\"You must select both doctor's speciality and date to proceed.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const thisDoctor = doctorsData.find(item => item.uidNo === selectedDoctor)\r\n        props.setIsLoaderVisible(true);\r\n\r\n        const input1 = `doctor_id=${thisDoctor.uidNo}&doctor_name=${thisDoctor.name}&doctor_email_id=${thisDoctor.email || 'somedoctor@mailer.com'}&`;\r\n        const input2 = `patient_id=${props.data.uidNo}&patient_name=${props.data.name}&patient_email_id=${props.data.emailId || 'somepatient@gmail.com'}&`;\r\n        const input3 = `starttime=${timeOfCommencement.getTime()}&duration=${0.50 * 60 * 60}`\r\n        ////const input3 = `starttime=1642264897448&duration=${0.75 * 60 * 60}`\r\n\r\n        const options = constants.postOptions;\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(`${CryptoApiPath}scheduleAppointment?${input1}${input2}${input3}`, options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    //Did a proper scheduling...\r\n                    //Get the parameters...\r\n                    props.setIsLoaderVisible(false);\r\n\r\n                    props.setSpecialObject({\r\n                        speciality: cbxSpeciality,\r\n                        startTime: timeOfCommencement.getTime(),\r\n                        duration: 0.50 * 60,\r\n                        meetingID: response.result?.meeting_id,\r\n                        doctor_id: thisDoctor.uidNo,\r\n                        doctor_name: thisDoctor.name\r\n                    })\r\n\r\n                    //Set other parameters...\r\n                    props.setDoctorSelected(selectedDoctor)\r\n                    props.hideDoctorsDialog();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err, \"exclamation\");\r\n            })\r\n\r\n    }\r\n\r\n    const doctorsArray = doctorsData && doctorsData.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                key={index}\r\n                selectedDoctor={selectedDoctor}\r\n                setSelectedDoctor={setSelectedDoctor}\r\n                id={item.uidNo}\r\n                src={item.photo}\r\n                name={item.name}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                rating={4.3}\r\n                spanValue={spanValue}\r\n                setSpanValue={setSpanValue}\r\n\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"dialog-background fade\">\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}>\r\n                        <i className='icofont-doctor-alt'></i> Select a Doctor\r\n                    </h2>\r\n                </div>\r\n                <div className=\"dialog-body mb-2\">\r\n                    <div className='form-row-3'>\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxSpeciality\"\r\n                                value={cbxSpeciality}\r\n                                onChange={e => setCbxSpeciality(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Allergist\">Allergist</option>\r\n                                <option value=\"Cardiologist\">Cardiologist</option>\r\n                                <option value=\"Dermatologist\">Dermatologist</option>\r\n                                <option value=\"Endocrinologist\">Endocrinologist</option>\r\n                                <option value=\"Gastroenterologist\">Gastroenterologist</option>\r\n                                <option value=\"Geriatrician\">Geriatrician</option>\r\n                                <option value=\"Nephrologist\">Nephrologist</option>\r\n                                <option value=\"Neurologist\">Neurologist</option>\r\n                                <option value=\"OB/GYN\">OB/GYN</option>\r\n                                <option value=\"Ophthalmologist\">Ophthalmologist</option>\r\n                                <option value=\"Pediatrician\">Pediatrician</option>\r\n                                <option value=\"Psychiatrist\">Psychiatrist</option>\r\n                                <option value=\"Urologist\">Urologist</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Choose Date</label>\r\n                            <input\r\n                                className='form-control'\r\n                                type='date'\r\n                                id='txtDate'\r\n                                value={txtDate}\r\n                                onChange={e => setTxtDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Wallet Balance</label>\r\n                            <input\r\n                                className='form-control'\r\n                                value=\"123 HTRAX\"\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='doctors-list-container'>\r\n                            {doctorsArray}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        onClick={selectDoctor}\r\n                        className=\"btn-main mr-1\"\r\n                    ><i className=\"icofont-doctor\"></i> Choose Doctor\r\n                    </button>\r\n                    <button\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDoctorsDialog()}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n            Doctors Dialog\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DoctorsListItem = props => {\r\n\r\n    const [spanValue, setSpanValue] = useState(1);\r\n    const [selDoctor, setSelDoctor] = useState('');\r\n\r\n    const randomValue = useRef(Math.floor(Math.random() * 9))\r\n\r\n    return (\r\n        <div className={selDoctor === props.id ? 'doctor-area selected' : 'doctor-area'}>\r\n            <div className=\"chosen-doctor\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                {/* <p><span>♥</span>{props.rating}</p> */}\r\n                <div className=\"details\">\r\n                    <h3>{props.name}</h3>\r\n                    <p>{props.specialization}</p>\r\n                    <div>\r\n                        <span className={spanValue === 1 ? 'blue' : ''} onClick={() => setSpanValue(1)}>\r\n                            11:00 - 11:45\r\n                        </span>\r\n                        <span className={spanValue === 2 ? 'blue' : ''} onClick={() => setSpanValue(2)}>\r\n                            14:00 - 14:45\r\n                        </span>\r\n                        <span className={spanValue === 3 ? 'blue' : ''} onClick={() => setSpanValue(3)}>\r\n                            20:00 - 20:45\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"schedule\">\r\n                        <p><i className='icofont-clock-time'></i>{' Choose Schedule (UTC)'}</p>\r\n                        <button\r\n                            style={{ float: 'right', marginTop: '10px' }}\r\n                            className=\"btn-main\"\r\n                            onClick={() => {\r\n                                setSelDoctor(props.id)\r\n                                props.setSelectedDoctor(props.id)\r\n                                props.setSpanValue(spanValue)\r\n\r\n                            }}\r\n                        ><i className='icofont-check-circled' /> Select Doctor\r\n                        </button>\r\n\r\n                    </div>\r\n                    <div className='costing'>\r\n                        <p><i className='icofont-bitcoin'></i> 1.{randomValue.current} HTRAX</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const SplitDate = (longDate) => {\r\n    const dateParts = longDate ? longDate?.toString().split(\"T\") : [\"-\", \"-\"];\r\n    const dateSplit = dateParts[0].split(\"-\");\r\n\r\n    const waDate = longDate\r\n        ? `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`\r\n        : \"-\";\r\n    const shortCodedDate = (longDate)\r\n        ? `${dateSplit[2]}${dateSplit[1]}${dateSplit[0].substring(2)}`\r\n        : \"-\";\r\n\r\n    return ({\r\n        \"date\": waDate,\r\n        \"time\": waDate !== \"-\" ? waDate.substring(0, 8) : \"\",\r\n        \"dateTime\": longDate ? `${waDate} ${dateParts[1].substring(0, 8)}` : waDate,\r\n        \"codedDate\": shortCodedDate,\r\n    });\r\n}\r\n\r\nexport const ShortDateToCoded = (shortDate) => {\r\n    /**\r\n     * Converts the date\r\n     * to a 6-digit\r\n     * short format\r\n     */\r\n    const splitDate = shortDate ? shortDate.split(\"-\") : [\"-\", \"-\"]\r\n    return (\r\n        splitDate[2] + splitDate[1] + splitDate[0].substring(2)\r\n    )\r\n}\r\n\r\nfunction formatDate(val) {\r\n    if (val < 10) {\r\n        return `0${val}`\r\n    } else {\r\n        return `${val}`\r\n    }\r\n}\r\n\r\nexport const SplitDateFromTimestamp = timeStamp => {\r\n    const longDate = new Date(parseInt(timeStamp));\r\n\r\n    const waDate = formatDate(longDate.getDate()) +\r\n          \"/\" + formatDate(longDate.getMonth() + 1) +\r\n          \"/2022\" + //longDate.getFullYear() +\r\n          \" \" + formatDate(longDate.getHours()) +\r\n          \":\" + formatDate(longDate.getMinutes()) +\r\n          \":\" + formatDate(longDate.getSeconds())\r\n\r\n    return ({\r\n        \"date\": waDate.split(\" \")[0],\r\n        \"time\": waDate.split(\" \")[1],\r\n        \"dateTime\": waDate,\r\n\r\n    });\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { DoctorsDialog } from './doctors-dialog';\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport { SplitDateFromTimestamp } from '../assets/common/split-date';\r\nimport { constants } from '../assets/common/constants';\r\n\r\nconst ScheduleAppointment = props => {\r\n\r\n    const [doctorSelected, setDoctorSelected] = useState('')\r\n    const [showDoctorDialog, setShowDoctorDialog] = useState(false);\r\n    const [doctorsData, setDoctorsData] = useState({})\r\n\r\n    const [txtPatientsInstruction, setTxtPatientsInstruction] = useState('')\r\n    const [txtSupportingInfo, setTxtSupportingInfo] = useState('')\r\n    const [fileConsent, setFileConsent] = useState('')\r\n    const [specialObject, setSpecialObject] = useState('')\r\n\r\n    const scheduleAppointment = () => {\r\n        //Use the endpoint for the appointment scheduling\r\n        const payLoad = {\r\n            \"meetingId\": specialObject.meetingID,\r\n            \"speciality\": specialObject.speciality,\r\n            \"startTIme\": specialObject.startTime,\r\n            \"duration\": specialObject.duration,\r\n            \"patientInstruction\": txtPatientsInstruction,\r\n            \"patientId\": props.data.uidNo,\r\n            \"doctorId\": specialObject.doctor_id,\r\n            \"supportingInfo\": {\r\n                \"filesConsent\": fileConsent\r\n            }\r\n        }\r\n\r\n        const options = { ...constants.postOptions, 'body': JSON.stringify(payLoad) }\r\n\r\n        props.setIsLoaderVisible(true);\r\n        fetch(ApiPath + \"appointment/bookAppointment\", options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response.status === \"success\") {\r\n                    //Success message\r\n                    props.showToast(\"Appointment with doctor scheduled successfully!\", \"success\");\r\n\r\n                    props.setAppointmentBooked()\r\n                    props.hideAppointmentDialog();\r\n                    //props.setScheduleObject({ ...payLoad, \"doctor_name\": specialObject.doctor_name })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err, 'exclamation')\r\n            })\r\n\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const params = constants.getOptions;\r\n    \r\n    useEffect(() => {\r\n        //Use the selected doctor to reload the doctor's profile and hsow data here...\r\n\r\n        if (doctorSelected) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + doctorSelected, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n\r\n            //Alwasy remember to reset this so that we dont have an infinite loop\r\n            setDoctorSelected(false);\r\n        }\r\n\r\n    }, [doctorSelected])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dialog-background fade\">\r\n                <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-stopwatch\"></i> Schedule Appointment</h2>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n\r\n                        <div className='form-row-1-2'>\r\n                            <div className='input-group'>\r\n                                <label>Choose Doctor</label>\r\n                                <button\r\n                                    className=\"btn-main-outline\"\r\n                                    onClick={() => setShowDoctorDialog(true)}\r\n                                >Browse for Doctor...\r\n                                </button>\r\n                            </div>\r\n                            <div className='doctor-area'>\r\n                                <div className={doctorSelected !== '' ? 'chosen-doctor' : 'd-none'}>\r\n                                    <img src='/portfolio/team-4.jpg' alt='' />\r\n                                    <div className=\"details\">\r\n                                        <h3>{doctorsData && \"Dr. \" + doctorsData.name}</h3>\r\n                                        <p>{doctorsData?.specialization?.certification}</p>\r\n                                        <div>\r\n                                            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}><i className='icofont-clock-time' /></span>\r\n                                            <span>{specialObject !== '' && SplitDateFromTimestamp(specialObject.startTime).dateTime}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={doctorSelected === '' ? 'no-doctor-yet' : 'd-none'}>\r\n                                    <img src='/res/doctor.png' alt='' width={50} />\r\n                                    <h2>No Doctor Chosen yet...</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row mb-2 mt-2\" style={{ borderBottom: '2px solid var(--light-golden-rod)' }}>\r\n\r\n                        </div>\r\n                        <div className='form-row'>\r\n                            <div className='input-group'>\r\n                                <label>Allow Doctor to view my medical history?</label>\r\n                                <select\r\n                                    id=\"fileConsent\"\r\n                                    value={fileConsent}\r\n                                    className='form-control'\r\n                                    onChange={e => setFileConsent(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-row-2'>\r\n                            <div className='input-group'>\r\n                                <label>Patients Instructions</label>\r\n                                <textarea\r\n                                    id='txtPatientsInstruction'\r\n                                    value={txtPatientsInstruction}\r\n                                    onChange={e => setTxtPatientsInstruction(e.target.value)}\r\n                                    rows={3}\r\n                                    className='form-control'\r\n                                />\r\n                            </div>\r\n                            <div className='input-group'>\r\n                                <label>Supporting Info</label>\r\n                                <textarea\r\n                                    id='txtSupportingInfo'\r\n                                    value={txtSupportingInfo}\r\n                                    onChange={e => setTxtSupportingInfo(e.target.value)}\r\n                                    rows={3}\r\n                                    className='form-control'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer main\">\r\n                        <button\r\n                            id=\"btnUpdate\"\r\n                            onClick={scheduleAppointment}\r\n                            className=\"btn-main mr-1\"\r\n                        ><i className=\"icofont-checked\"></i> Schedule\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-main-outline\"\r\n                            onClick={() => props.hideAppointmentDialog()}\r\n                        >Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                showDoctorDialog && <DoctorsDialog\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    hideDoctorsDialog={() => setShowDoctorDialog(false)}\r\n                    setDoctorSelected={setDoctorSelected}\r\n                    data={props.data}\r\n                    setSpecialObject={setSpecialObject}\r\n\r\n                />\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScheduleAppointment;\r\n","import { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport ScheduleAppointment from '../../appointments/schedule-appointment';\r\n\r\nexport const Appointments = props => {\r\n\r\n    const { appointmentBooked, doctorsData } = props;\r\n    const [showAppointmentDialog, setShowAppointmentDialog] = useState(false);\r\n    const [appTime, setAppTime] = useState('');\r\n    const [dateToString, setDateToString] = useState('');\r\n\r\n    const remainingTime = () => {\r\n        const apptTime = new Date(parseInt(doctorsData?.starttime)).getTime();\r\n        const today = new Date().getTime();\r\n\r\n        //Set date to string\r\n        setDateToString(new Date(apptTime).toDateString())\r\n\r\n        // // if ((apptTime - today) < 0) {\r\n        // //     props.setAppointmentBooked(false);\r\n        // //     return 'Meeting Expired!'\r\n        // // }\r\n\r\n        //Else proceed...\r\n        const diff = new Date(apptTime - today);\r\n\r\n        //return the value in hours and days...\r\n        let returnValue = \"\";\r\n        if (parseInt(diff.getHours() / 24) < 1) {\r\n            //Less than 1 day...\r\n            if (diff.getHours() === 0) {\r\n                returnValue = `${diff.getMinutes()} minutes`;\r\n            } else {\r\n                returnValue = `${diff.getHours()} hours and ${diff.getMinutes()} minutes`\r\n            }\r\n\r\n        } else {\r\n            if (diff.getHours() === 0) {\r\n                returnValue = `${diff.getHours() % 24} days ${diff.getMinutes()} minutes`;\r\n            } else {\r\n                returnValue = `${diff.getHours() % 24} days ${diff.getHours()} hours and ${diff.getMinutes()} minutes`\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAppTime(remainingTime);\r\n    }, [doctorsData])\r\n\r\n    const noPastAppointments = (props.pastAppointments.length !== 0) ? 'book-appointment' : 'd-none';\r\n    const showPastAppointments = (props.pastAppointments.length === 0) ? 'past-appointments' : 'd-none';\r\n\r\n    return (\r\n        <>\r\n            <div className='appointment'>\r\n                <h2><i className='icofont-double-right'></i> Upcoming Appointment</h2>\r\n                {!appointmentBooked\r\n                    ? <div className=\"book-appointment\">\r\n\r\n                        <img src=\"/img/svg/doctor_appointment.svg\" alt=\"\" />\r\n                        <img className='warning' src=\"/warning-96.png\" alt=\"\" />\r\n                        <h4>You do not have any upcoming appointment!</h4>\r\n\r\n                        <button\r\n                            className=\"btn-main\"\r\n                            onClick={() => {\r\n                                setShowAppointmentDialog(true)\r\n                            }}\r\n                        >Book an Appointment...\r\n                        </button>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div className='details'>\r\n                            <img src=\"/portfolio/team-3.jpg\" alt=\"\" />\r\n                            <h3>Your upcoming virtual appointment with</h3>\r\n                            <h4>{`Dr. ${doctorsData?.doctor_name}`}</h4>\r\n\r\n                            <h5><i className='icofont-clock-time' /> is in {appTime}</h5>\r\n                            <p><i className='icofont-calendar' /> {dateToString}</p>\r\n                            <Link\r\n                                to={doctorsData !== '' && '/meeting/meeting-page?meeting_id=' +\r\n                                    doctorsData?.meetinng_id + '&doctor_id=' + doctorsData?.doctor_id +\r\n                                    '&gravatar=./portfolio/avatar.png&past_prescription=' + props.data?.pastPrescriptions[0]?.name +\r\n                                    '&patient_id=' + props.data?.uidNo + '&tk=' + sessionStorage.getItem('token')}\r\n                                target='_blank'>\r\n                                <i className='icofont-video-cam' /> Join Video Consultation\r\n                            </Link>\r\n                        </div>\r\n                        <h2><i className='icofont-double-right'></i> Past Appointments</h2>\r\n                        <div className={noPastAppointments}>\r\n\r\n                            <img src=\"/img/svg/doctor_appointment.svg\" alt=\"\" style={{width:'200px'}} />\r\n                            <img className='warning' src=\"/warning-96.png\" alt=\"\" />\r\n                            <h4>No previous appointment!</h4>\r\n\r\n                        </div>\r\n                        <div className={showPastAppointments}>\r\n                            <div className=\"appt-card\">\r\n                                <div className='card-top'>\r\n                                    <img src='/portfolio/team-2.jpg' alt='' />\r\n                                    <div className=\"card-top-text\">\r\n                                        <h3>Dr. James 12345</h3>\r\n                                        <h5>Cardiologist</h5>\r\n                                        <span>12 years of experience</span>\r\n                                        <p><i className='icofont-location-pin' /> London - UK | Karisho Cardio Clinic</p>\r\n                                    </div>\r\n                                </div>\r\n                                <h6>Next Availability at:</h6>\r\n                                <span><i className=\"icofont-video\" /> 10:00AM Tomorrow</span>\r\n                            </div>\r\n                            <div className=\"appt-card\">\r\n                                <div className='card-top'>\r\n                                    <img src='/portfolio/team-4.jpg' alt='' />\r\n                                    <div className=\"card-top-text\">\r\n                                        <h3>Dr. Carol Appenlica</h3>\r\n                                        <h5>Dermatologist</h5>\r\n                                        <span>7 years of experience</span>\r\n                                        <p><i className='icofont-location-pin' /> Chicago - US | SafeHope Medical Center</p>\r\n                                    </div>\r\n                                </div>\r\n                                <h6>Next Availability at:</h6>\r\n                                <span><i className=\"icofont-video\" /> 10:00AM Tomorrow</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </>\r\n                }\r\n            </div>\r\n            {\r\n                showAppointmentDialog && <ScheduleAppointment\r\n                    data={JSON.parse(sessionStorage.getItem('patient'))}\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    setAppointmentBooked={() => props.setAppointmentBooked(true)}\r\n                    hideAppointmentDialog={() => setShowAppointmentDialog(false)}\r\n\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","export const MedicalRecordsTabHeaders = props => {\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-drug\"></i>Prescriptions\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-surgeon-alt\"></i>Visits\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-prescription\"></i>Lab Reports\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { MedicalHistoryDialog } from \"../others/medical-history-dialog\";\r\nimport { ImageDialog } from \"../../components/image-dialog\";\r\nimport { MedicationRowItem } from \"../../components/medication-row-item\";\r\n\r\nexport const Prescriptions = props => {\r\n\r\n    const [prescriptionsArray] = useState(props.data.pastPrescriptions)\r\n    const [dialogVisible, setDialogVisible] = useState(false)\r\n    const [prescriptionsExist, setPrescriptionsExist] = useState(false);\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageDialogVisible, setImageDialogVisible] = useState(false)\r\n\r\n    const addMedication = () => {\r\n        //Show the medication dialog...\r\n        setDialogVisible(true);\r\n    }\r\n\r\n    const showImageDialog = imgLink => {\r\n        setImageLink(imgLink)\r\n        setImageDialogVisible(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        prescriptionsArray.length === 0\r\n            ? setPrescriptionsExist(false)\r\n            : setPrescriptionsExist(true);\r\n\r\n    }, [prescriptionsArray])\r\n\r\n\r\n    //Set the array of prescriptions to show...\r\n    const currentMeds = prescriptionsArray.map((item, index) => {\r\n        return (\r\n            <MedicationRowItem\r\n                key={index}\r\n                item={item}\r\n                showImageDialog={showImageDialog}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                prescriptionsExist\r\n                    ? <div className='medications'>\r\n                        <h3>Past Prescriptions</h3>\r\n                        {currentMeds}\r\n                    </div>\r\n                    : <div className='not-found'>\r\n                        <img src='/img/svg/no-data.svg' style={{ width: '80px' }} />\r\n                        <h4 style={{ fontSize: '15px' }}>No Past Prescription...</h4>\r\n                    </div>\r\n            }\r\n            <button\r\n                className=\"btn-main medication d-none\"\r\n                onClick={addMedication}\r\n                id='btnShowDialog'\r\n            >\r\n                <i className=\"icofont-plus\" /> Add prescription\r\n            </button>\r\n\r\n            {dialogVisible && <MedicalHistoryDialog\r\n                showDialog={dialogVisible}\r\n                hideDialog={() => setDialogVisible(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                medicalData={JSON.parse(sessionStorage.getItem('patient')).pastPrescriptions}\r\n                updateField={'pastPrescriptions'}\r\n                questionString={\"Have you taken any medicines in past?\"}\r\n                title={\"Prescription\"}\r\n            />}\r\n\r\n            {imageDialogVisible && <ImageDialog\r\n                src={imageLink}\r\n                setImageDisplay={showImageDialog}\r\n                hideImageDialog={() => setImageDialogVisible(false)}\r\n            />\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import { useState } from \"react\"\r\nimport { MedicalRecordsTabHeaders } from \"../medical-records/medical-records-tab-headers\"\r\nimport { Prescriptions } from \"../medical-records/prescriptions\"\r\n\r\nexport const MedicalRecords = props => {\r\n\r\n    const [selectedTab, setSelectedTab] = useState(1)\r\n\r\n    return (\r\n        <div className='appointment'>\r\n            <h2 style={{ marginBottom: '30px' }}><i className='icofont-double-right'></i> Medical Records</h2>\r\n            <MedicalRecordsTabHeaders\r\n                selectedTab={selectedTab}\r\n                setSelectedTab={setSelectedTab}\r\n            />\r\n            {selectedTab === 1 &&\r\n                <Prescriptions\r\n                    data={props.data}\r\n                    medicationsExist={false}\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    setResetData={props.setResetData}\r\n\r\n                />\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const SideBarItem = props => {\r\n\r\n    const { headerText, contentText, selectedIndex, setSelectedIndex, index } = props;\r\n    const isActive = selectedIndex === index ? true : false;\r\n    \r\n    return (\r\n        <div\r\n            className={isActive ? 'side-bar-item active' : 'side-bar-item'}\r\n            onClick={() => setSelectedIndex(index)}\r\n        >\r\n            <div>\r\n                <h2>{headerText}</h2>\r\n                <p>{contentText}</p>\r\n            </div>\r\n            <i className='icofont-rounded-right'></i>\r\n        </div>\r\n    )\r\n}\r\n","export const sideBarList = [\r\n    {\r\n        index: 1,\r\n        headerText: 'My Appointments',\r\n        contentText: 'View all appointments, including upcoming and past appointments',\r\n        isActive: true,\r\n    },\r\n    {\r\n        index: 2,\r\n        headerText: 'Medical Records',\r\n        contentText: 'The purpose of a medical clearance is to identify specific health needs and medical conditions that may require speciality management, follow up or monitoring.',\r\n    },\r\n    {\r\n        index: 3,\r\n        headerText: 'Medical Insurance',\r\n        contentText: 'With a valid insurance package, be sure to get the best of healtcare advice from a specialist.',\r\n    },\r\n    {\r\n        index: 4,\r\n        headerText: 'Genetic Information',\r\n        contentText: 'As an integral part of medical treatment, genomic data in the EHR must therefore be continuously and easily accessible.',\r\n    },\r\n    {\r\n        index: 5,\r\n        headerText: 'Vaccination Reports',\r\n        contentText: 'Provides a history of all vaccines received with exact dates, vaccination type, dose, purpose and any other information related to the vaccination.',\r\n    },\r\n]\r\n","export const MedicalInsurance = () => {\r\n    return (\r\n        <div className='appointment'>\r\n            <h2><i className='icofont-double-right'></i> Medical Insurance</h2>\r\n            <div className='not-found'>\r\n                <img src='/not-found.svg' />\r\n                <h4>No Records Found!</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const GeneticInformation = () => {\r\n    return (\r\n        <div className='appointment'>\r\n            <h2><i className='icofont-double-right'></i> Genetic Information</h2>\r\n            <div className='not-found'>\r\n                <img src='/not-found.svg' />\r\n                <h4>No Records Found!</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const VaccinationReports = () => {\r\n    return (\r\n        <div className='appointment'>\r\n            <h2><i className='icofont-double-right'></i> Vaccination Reports</h2>\r\n            <div className='not-found'>\r\n                <img src='/not-found.svg' />\r\n                <h4>No Records Found!</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const HealthProfileBar = () => {\r\n\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [patientsData, setPatientsData] = useState(() => JSON.parse(sessionStorage.getItem('patient')));\r\n\r\n    useEffect(() => {\r\n        //Check every 30 secs...\r\n        setInterval(() => {\r\n            //First, fetch the patients data\r\n            setPatientsData(() => JSON.parse(sessionStorage.getItem('patient')));\r\n        }, 30000);\r\n\r\n        checkCircleSector()\r\n        const progressStatus = document.querySelector(\".progress-status\");\r\n\r\n        if (percentage < 50) {\r\n            progressStatus.style.background = 'var(--light-golden-rod)';\r\n        } else if (percentage > 50 && percentage < 70) {\r\n            progressStatus.style.background = 'var(--bluish)';\r\n        } else if (percentage > 69) {\r\n            progressStatus.style.background = 'var(--main-green)';\r\n        }\r\n\r\n        progressStatus.style.width = `${percentage}%`;\r\n\r\n    }, [percentage])\r\n\r\n    const checkCircleSector = () => {\r\n        //Returns a value based on the percentage completion of\r\n        //the patient's data..\r\n        //First, get all the relative values required...\r\n        const pix = patientsData.photo === \"\" ? 0 : 5;\r\n        const lifeStyle1 = (patientsData.lifeStyle?.activityLevel && patientsData.lifeStyle?.activityLevel === \"\") ? 0 : 3;\r\n        const lifeStyle2 = patientsData.lifeStyle?.alcoholConsumption === \"\" ? 0 : 3;\r\n        const lifeStyle3 = patientsData.lifeStyle?.foodPreference === \"\" ? 0 : 3;\r\n        const lifeStyle4 = patientsData.lifeStyle?.smokingHabbit === \"\" ? 0 : 3;\r\n\r\n        //general\r\n        const general1 = patientsData.general?.bloodGroup === \"\" ? 0 : 2;\r\n        const general2 = patientsData.general?.bmi === \"\" ? 0 : 2;\r\n        const general3 = patientsData.general?.bp === \"\" ? 0 : 2;\r\n        const general4 = patientsData.general?.chestExpansion === \"\" ? 0 : 2;\r\n        const general5 = patientsData.general?.height === \"\" ? 0 : 2;\r\n        const general6 = patientsData.general?.oxygenSaturation === \"\" ? 0 : 2;\r\n        const general7 = patientsData.general?.pulse === \"\" ? 0 : 2;\r\n        const general8 = patientsData.general?.vision === \"\" ? 0 : 2;\r\n        const general9 = patientsData.general?.weight === \"\" ? 0 : 2;\r\n\r\n        const general = general1 + general2 + general3 + general4 + general5 + general6 + general7 + general8 + general9;\r\n\r\n        //Name and phone\r\n        const fullName = patientsData.name === \"\" ? 0 : 10;\r\n        const phoneNo = patientsData.phoneNumber === \"\" ? 0 : 10;\r\n        const gender = patientsData.gender === \"\" ? 0 : 5;\r\n        const birthDate = patientsData.birthDate === \"\" ? 0 : 5;\r\n        const email = patientsData.emailId === \"\" ? 0 : 5;\r\n        const maritalStatus = patientsData.maritalStatus === \"\" ? 0 : 5;\r\n        const pastPrescriptions = patientsData.pastPrescriptions?.length === 0 ? 0 : 5;\r\n        const currentMedications = patientsData.currentMedications?.length === 0 ? 0 : 5;\r\n        const diagnosisReport = patientsData.diagnosisReport?.length === 0 ? 0 : 5;\r\n        const address = patientsData.address?.length === 0 || Object.keys(patientsData.address[0]).length === 0 ? 0 : 5;\r\n        const contactPerson = patientsData.contactPerson?.length === 0 ? 0 : 5;\r\n\r\n        const totalValue = pix + lifeStyle1 + lifeStyle2 + lifeStyle3 + lifeStyle4 + general +\r\n            fullName + phoneNo + gender + email + maritalStatus + pastPrescriptions +\r\n            currentMedications + diagnosisReport + address + contactPerson + birthDate;\r\n\r\n        //Set the variable...\r\n        setPercentage(totalValue);\r\n\r\n        // //const circle2 = document.getElementById('secondCircle');\r\n        // //circle2.style.strokeDashoffset = `calc(440 - (440 * ${totalValue}) / 100)`;\r\n\r\n\r\n        //\r\n        // // if (totalValue < 50) {\r\n        // //     circle2.style.stroke = 'var(--light-golden-rod)';\r\n        // // } else if (totalValue > 50 && totalValue < 70) {\r\n        // //     circle2.style.stroke = 'var(--bluish)';\r\n        // // } else if (totalValue > 69) {\r\n        // //     circle2.style.stroke = 'var(--main-green)';\r\n        // // }\r\n    }\r\n\r\n    return (\r\n        <div className='health-status'>\r\n            <h2>Your Health Profile</h2>\r\n            <div>\r\n                <span className='progress-bar'></span>\r\n                <span className='progress-status'></span>\r\n            </div>\r\n\r\n            <h4>{percentage}% Complete</h4>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport useCheckAppointmentBooked from \"../hooks/useCheckAppointmentBooked\";\r\n\r\nimport { DHPHeader } from \"../components/dhp-header\";\r\nimport { NavBar } from \"../components/nav-bar\";\r\nimport { Appointments } from \"./side-tab-pages/appointments\";\r\nimport { MedicalRecords } from \"./side-tab-pages/medical-records\";\r\nimport { SideBarItem } from \"./others/side-bar-item\";\r\nimport { sideBarList } from \"./others/side-bar-list\";\r\nimport { MedicalInsurance } from \"./side-tab-pages/medical-insurance\";\r\nimport { GeneticInformation } from \"./side-tab-pages/genetic-information\";\r\nimport { VaccinationReports } from \"./side-tab-pages/vaccination-reports\";\r\nimport { HealthProfileBar } from \"./others/health-profile-bar\";\r\n\r\nconst DigitalHealthPassport = props => {\r\n\r\n    const [selectedIndex, setSelectedIndex] = useState(1);\r\n    const [appointmentBooked, setAppointmentBooked] = useState(false);\r\n    const [patientsData] = useState(JSON.parse(sessionStorage.getItem('patient')))\r\n\r\n    const { isLoading, doctorsData, pastAppointments } = useCheckAppointmentBooked(patientsData.uidNo, setAppointmentBooked, appointmentBooked);\r\n\r\n    const sideBarItems = sideBarList.map(item => {\r\n        return <SideBarItem\r\n            key={item.index}\r\n            headerText={item.headerText}\r\n            contentText={item.contentText}\r\n            index={item.index}\r\n            selectedIndex={selectedIndex}\r\n            setSelectedIndex={value => setSelectedIndex(value)}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <div className='dhp-container'>\r\n            {isLoading ? props.setIsLoaderVisible(true) : props.setIsLoaderVisible(false)}\r\n            <NavBar\r\n                activeLink={1}\r\n                picture={patientsData.photo}\r\n            />\r\n            <DHPHeader />\r\n            <HealthProfileBar />\r\n            <div className='dhp-body'>\r\n                <div className=\"left-side-bar\">\r\n                    {sideBarItems}\r\n                </div>\r\n                <div className='main-content'>\r\n                    {selectedIndex === 1 && <Appointments\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        appointmentBooked={appointmentBooked}\r\n                        setAppointmentBooked={setAppointmentBooked}\r\n                        doctorsData={doctorsData}\r\n                        pastAppointments={pastAppointments}\r\n                    />\r\n                    }\r\n                    {selectedIndex === 2 && <MedicalRecords\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        doctorsData={doctorsData}\r\n                        data={patientsData}\r\n                    />}\r\n\r\n                    {selectedIndex === 3 && <MedicalInsurance />}\r\n                    {selectedIndex === 4 && <GeneticInformation />}\r\n                    {selectedIndex === 5 && <VaccinationReports />}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DigitalHealthPassport;\r\n","import { Link, useHistory } from 'react-router-dom'\r\n\r\nconst Page404 = () => {\r\n    const history = useHistory();\r\n\r\n    const previousPage = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='page-404-container'>\r\n                <h1>Page Not Found!</h1>\r\n                <img src='/404.svg' alt='' />\r\n                <div className='buttons-404'>\r\n                    <button id='previous' onClick={previousPage}>Go Back</button>\r\n                    <Link id='homePage' to=\"/\">Home Page</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;\r\n","import { Login } from './login/login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Register } from './register/register';\nimport Loader from './components/loader';\nimport { useState } from 'react';\nimport Toast from './components/toast';\nimport Patients from './patients-profile/patients';\nimport Doctors from './doctors-profile/doctors';\nimport { DoctorsLogin } from './login/doctors-login';\nimport Dashboard from './admin/dashboard/dashboard';\nimport Meeting from './meeting/meeting';\nimport DigitalHealthPassport from './dhp/digital-health-passport'\nimport Page404 from './page-404';\n\nfunction App() {\n\n  const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n  const [toastVis, setToastVis] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [msgBoxType, setMsgBoxType] = useState(\"success\");\n\n  const ShowToast = (message, messageBoxType) => {\n    setToastMsg(message);\n    setMsgBoxType(messageBoxType);\n    setToastVis(true);\n  }\n\n  return (\n    <>\n      <Loader isVisible={isLoaderVisible} />\n      <Toast\n        toastMessage={toastMsg}\n        msgBoxType={msgBoxType}\n        toastVisibility={toastVis}\n        setToastVisibility={setToastVis}\n      />\n      <Router basename='/'>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Login showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/patients/profile\" exact>\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/profile\" exact>\n            <Doctors showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/login\" exact>\n            <DoctorsLogin showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/admin/dashboard\" exact>\n            <Dashboard showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/meeting/meeting-page\" exact>\n            {/* Re-route to the patient's main page... */}\n            <Meeting showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path='/patients/digital-health-passport' exact>\n            <DigitalHealthPassport showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"*\">\n            {/* Re-route to the patient's main page... */}\n            <Page404 showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/dashboard.css'\nimport './assets/css/new-loader.css'\nimport './assets/css/main.css'\nimport './assets/css/controls.css'\nimport './assets/css/toast.css'\nimport './assets/css/scrollbar.css'\nimport './assets/css/dhp.css'\nimport './assets/css/dialog.css'\nimport './assets/css/tab-pages.css'\nimport './assets/css/progress-bar.css'\nimport './assets/200/icofont/icofont.min.css'\nimport './assets/200/boxicons/css/boxicons.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}