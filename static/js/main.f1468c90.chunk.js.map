{"version":3,"sources":["assets/common/base-url.js","login/OTPLogin.js","login/login.js","register/register.js","components/loader.js","components/toast.js","components/header.js","patients-profile/tab-pages/patient-tab-headers.js","assets/common/countries.js","patients-profile/tab-pages/contact.js","patients-profile/tab-pages/personal.js","patients-profile/tab-pages/medical.js","components/image-dialog.js","assets/common/file-to-base64.js","patients-profile/tab-pages/others/past-prescriptions-dialog.js","patients-profile/tab-pages/medical-history.js","patients-profile/tab-pages/lifestyle.js","assets/common/operations.js","appointments/doctors-dialog.js","assets/common/split-date.js","appointments/schedule-appointment.js","patients-profile/patients.js","doctors-profile/tab-pages/doctors-tab-headers.js","doctors-profile/tab-pages/personal.js","doctors-profile/tab-pages/contact.js","doctors-profile/tab-pages/portfolio.js","doctors-profile/doctors.js","login/doctors-login.js","admin/dashboard/cards.js","admin/dashboard/cards-values.js","admin/dashboard/cardbox.js","admin/dashboard/doctors-list-item.js","admin/dashboard/doctors.js","admin/dashboard/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["ApiPath","CryptoApiPath","OTPLogin","props","history","useHistory","useState","countdownTimer","setCountdownTimer","input1","setInput1","input2","setInput2","input3","setInput3","input4","setInput4","input5","setInput5","input6","setInput6","useEffect","setInterval","value","postLogin","a","OTP","data","loginId","phoneNumber","role","otp","options","setIsLoaderVisible","fetch","JSON","stringify","then","res","json","statusCode","showToast","sessionStorage","setItem","token","uidNo","push","message","catch","err","error","displayClasss","showDialog","className","id","onClick","hideDialog","type","maxLength","onChange","e","target","keyCode","document","getElementById","focus","Login","setValue","displayOTP","setDisplayOTP","style","minHeight","src","defaultCountry","placeholder","to","response","display","Register","name","setName","email","setEmail","setRole","phone","setPhone","password","setPassword","verifyPassword","setVerifyPassword","marginTop","marginBottom","autoComplete","emailId","substring","width","Loader","displayClass","isVisible","Toast","visStatus","toastVisibility","toastMessage","setTimeout","setToastVisibility","iconSrc","contentStyle","headerStyle","msgBoxType","borderLeft","color","innerText","alt","Header","background","outline","border","cursor","fontFamily","marginRight","PatientTabHeaders","selectedTab","setSelectedTab","countriesList","code","Contact","setShowDialog","address","houseNumber","street","city","state","district","postalCode","showPhone","contactPerson","length","contactDetails","relationship","country","contact","setResetData","ContactDialog","addressData","txtPhone","setTxtPhone","addressType","setAddressType","txtHouseNo","setTxtHouseNo","txtStreet","setTxtStreet","txtCity","setTxtCity","txtDistrict","setTxtDistrict","txtState","setTxtState","txtPostalCode","setTxtPostalCode","txtCountry","setTxtCountry","txtEmail","setTxtEmail","txtContactPerson","setTxtContactPerson","txtRelationship","setTxtRelationship","txtContactPhone","setTxtContactPhone","displayDialog","countryList","map","item","index","rows","getItem","Personal","gender","maritalStatus","birthDate","communicationLang","languagePref","deceased","deceasedBoolean","deceasedDateTime","PersonalDialog","showDeceased","setShowDeceased","cbxDeceased","setCbxDeceased","fullName","setFullName","cbxGender","setCbxGender","cbxMaritalStatus","setCbxMaritalStatus","txtBirthDate","setTxtBirthDate","txtLanguage","setTxtLanguage","txtDeceasedDate","setTxtDeceasedDate","Medical","Object","keys","allergies","join","managingOrganization","general","bloodGroup","height","weight","bmi","chestExpansion","vision","bp","pulse","oxygenSaturation","MedicalDialog","boxContent","setBoxContent","txtAllergies","setTxtAllergies","txtManagingOrg","setTxtManagingOrg","setBloodGroup","setHeight","setWeight","setVision","setChestExpansion","bloodPressure","setBloodPressure","setPulse","setOxygenSaturation","setBmi","createItems","content","Array","isArray","split","trim","onBlur","ImageDialog","imageContainerDisplay","embedContainer","imageSource","imageExtension","toString","indexOf","dialogClass","setImageDisplay","hideImageDialog","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","PastPrescriptionsDialog","pastPrescriptions","records","txtPastPrescriptions","setTxtPastPrescriptions","cbxMedicines","setCbxMedicines","txtAddMedication","setTxtAddMedication","description","txtMedicationDescription","setTxtMedicationDescription","borderRadius","padding","transform","fileUpload","querySelector","files","size","setTxtCurrentMedications","saveImageToBase64","accept","MedicalHistory","showPrescriptionsDialog","setShowPrescriptionsDialog","showImageDialog","setShowImageDialog","setImageSource","currentMedications","diagnosisReport","mandateExtension","isURL","MedicalHistoryDialog","txtCurrentMedications","txtDiagnosisReport","setTxtDiagnosisReport","cbxIsOnMedications","setCbxIsOnMedications","val","Lifestyle","lifeStyle","smokingHabbit","alcoholConsumption","activityLevel","foodPreference","LifestyleDialog","txtSmokingHabits","setTxtSmokingHabits","txtAlcohol","setTxtAlcohol","txtActivityLevel","setTxtActivityLevel","txtFoodPreference","setTxtFoodPreference","toTimestamp","year","month","day","hour","minute","second","Date","UTC","getTime","DoctorsDialog","today","cbxSpeciality","setCbxSpeciality","doctorsData","setDoctorsData","selectedDoctor","setSelectedDoctor","getFullYear","getMonth","getDate","txtDate","setTxtDate","spanValue","setSpanValue","timeOfCommenement","setTimeOfCommencement","params","splitDate","dateArray","console","log","fetchUsersData","doctorsArray","photo","specialization","certification","status","verification","rating","disabled","thisDoctor","find","setSpecialObject","speciality","startTime","duration","meetingID","meeting_id","doctor_id","doctor_name","setDoctorSelected","hideDoctorsDialog","DoctorsListItem","selDoctor","setSelDoctor","randomValue","useRef","Math","floor","random","float","current","formatDate","SplitDateFromTimestamp","timeStamp","longDate","parseInt","waDate","getHours","getMinutes","getSeconds","ScheduleAppointment","doctorSelected","showDoctorDialog","setShowDoctorDialog","txtPatientsInstruction","setTxtPatientsInstruction","txtSupportingInfo","setTxtSupportingInfo","fileConsent","setFileConsent","specialObject","alignItems","justifyContent","dateTime","borderBottom","payLoad","setAppointmentBooked","hideAppointmentDialog","setScheduleObject","Patients","scheduleObject","patientsData","setPatientsData","resetData","outputText","setOutputText","picture","setPicture","appointmentBooked","showAppointmentDialog","setShowAppointmentDialog","idValue","dropZone","fileInput","addEventListener","preventDefault","dataTransfer","removeEventListener","startTIme","href","meetingId","DoctorsTabHeaders","emailAddress","txtAddress","setTxtAddress","updateContact","Portfolio","license","issueDate","qualification","PortfolioDialog","txtQualification","setTxtQualification","txtSpecialization","setTxtSpecialization","txtSpecializationType","setTxtSpecializationType","txtLicense","setTxtLicense","txtLicenseIssueDate","setTxtLicenseIssueDate","Doctors","DoctorsLogin","txtDoctorsID","setTxtDoctorsID","txtPassword","setTxtPassword","validatedbyotp","Cards","numbers","totalCases","icofontClass","lastUpdatedTime","cardsValues","cases","CardBox","vals","toLowerCase","displayActivate","Dashboard","txtSearch","setTxtSearch","doctorsList","setDoctorsList","headers","method","fetchDoctors","listItems","App","isLoaderVisible","toastVis","setToastVis","toastMsg","setToastMsg","setMsgBoxType","ShowToast","messageBoxType","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1468c90.chunk.js","sourcesContent":["export const ApiPath = \"http://122.176.120.160:4000/\";\r\nexport const CryptoApiPath = 'https://crypto.webshrine.in/api/'","import { useState, useEffect } from \"react\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst OTPLogin = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [countdownTimer, setCountdownTimer] = useState(45);\r\n\r\n    const [input1, setInput1] = useState('')\r\n    const [input2, setInput2] = useState('')\r\n    const [input3, setInput3] = useState('')\r\n    const [input4, setInput4] = useState('')\r\n    const [input5, setInput5] = useState('')\r\n    const [input6, setInput6] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (countdownTimer <= 0) {\r\n            setInterval(() => {\r\n                setCountdownTimer(value => (value - 1));\r\n            }, 1000)\r\n        }\r\n\r\n    }, [countdownTimer])\r\n\r\n    const postLogin = async () => {\r\n        //Build the OTP...\r\n        try {\r\n            const OTP = input1 + input2 + input3 + input4 + input5 + input6;\r\n\r\n            const data = {\r\n                loginId: props.phoneNumber,\r\n                role: 'Patient',\r\n                otp: OTP,\r\n            }\r\n\r\n            const options = {\r\n                'headers': {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                'method': 'POST',\r\n            }\r\n\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"login\", { ...options, 'body': JSON.stringify(data) })\r\n                ?.then(res => (res.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false);\r\n\r\n                    if (res.statusCode === 200) {\r\n                        props.showToast(\"Login successful!\", 'success');\r\n\r\n                        //Remember to store the bearer token\r\n                        sessionStorage.setItem(\"token\", res.token);\r\n                        sessionStorage.setItem(\"id_val\", res.uidNo);\r\n\r\n                        history.push(\"/patients/profile\")\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n        } catch (error) {\r\n            props.showToast(error, 'exclamation')\r\n        }\r\n    }\r\n\r\n    const displayClasss = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayClasss}>\r\n            <div className=\"dialog-container otp\">\r\n                <div className=\"dialog-content\">\r\n                    <div className=\"dialog-header\">\r\n                        <h2 className=\"nully\">Confirm your phone number</h2>\r\n                        <span id=\"close_toast\" onClick={props.hideDialog}>&times;</span>\r\n                    </div>\r\n                    <div className=\"dialog-body\">\r\n                        <h4>To complete your login, please enter the 6-digit OTP sent to\r\n\r\n                        </h4>\r\n                        <h2 className=\"phone-no\">{props.phoneNumber}</h2>\r\n                        <div className=\"input-array\">\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input1\"\r\n                                value={input1}\r\n                                onChange={e => {\r\n                                    setInput1(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input2\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input2\"\r\n                                value={input2}\r\n                                onChange={e => {\r\n                                    setInput2(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input3\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input3\"\r\n                                value={input3}\r\n                                onChange={e => {\r\n                                    setInput3(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input4\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input4\"\r\n                                value={input4}\r\n                                onChange={e => {\r\n                                    setInput4(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input5\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input5\"\r\n                                value={input5}\r\n                                onChange={e => {\r\n                                    setInput5(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input6\").focus();\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                id=\"input6\"\r\n                                value={input6}\r\n                                onChange={e => {\r\n                                    setInput6(e.target.value);\r\n                                    if (e.keyCode !== 8) document.getElementById(\"input1\").focus();\r\n                                }}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"resend-group\">\r\n                            <div>\r\n                                <p>Didn't receive the OTP?</p>\r\n                                <button>Resend</button>\r\n                            </div>\r\n                            <div>00:{countdownTimer}</div>\r\n                        </div>\r\n\r\n                        <div className=\"otp-call\">\r\n                            <button>Get OTP on call</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button className=\"btn-continue\" onClick={postLogin}>Continue</button>\r\n                        <button className=\"btn-cancel\" onClick={props.hideDialog}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OTPLogin;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport OTPLogin from './OTPLogin';\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [displayOTP, setDisplayOTP] = useState(false);\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            phoneNumber: value\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"sendSms\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode !== 200) {\r\n                    showToast(response.message, 'exclamation');\r\n                } else {\r\n                    //Else, proceed... show the 2fa page...\r\n                    showToast(\"Enter the OTP sent to your registered phone number to proceed.\", \"information\");\r\n                    setDisplayOTP(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"./mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Let's get started!</h2>\r\n\r\n                            <h4>Enter your mobile number</h4>\r\n                            <div className=\"phone-input-container\">\r\n                                <input\r\n                                    id=\"value\"\r\n                                    value={value}\r\n                                    onChange={e => setValue(e.target.value)}\r\n                                    defaultCountry='IN'\r\n                                    className=\"login-control\"\r\n                                    placeholder=\"Mobile Number\"\r\n                                    maxLength={14}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/admin/dashboard\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Continue</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Returning Doctor? <Link to=\"/doctors/login\">Login here</Link></h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"./doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                displayOTP && <OTPLogin\r\n                    showDialog={displayOTP}\r\n                    phoneNumber={value}\r\n                    hideDialog={() => setDisplayOTP(false)}\r\n                    showToast={showToast}\r\n                    setIsLoaderVisible={setIsLoaderVisible}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\nexport const Register = ({ setIsLoaderVisible, showToast }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\")\r\n    const [role, setRole] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const register = () => {\r\n        //Connect to the api after validation...\r\n        if (name === \"\" || role === \"\" || phone === \"\" || password === \"\" || email === \"\") {\r\n            showToast(\"Complete all fields to proceed!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        if (password !== verifyPassword) {\r\n            showToast(\"Password and verify password fields must match!\", 'exclamation');\r\n            return;\r\n        }\r\n\r\n        //Else, proceed...\r\n        const data = {\r\n            name: name,\r\n            role: role,\r\n            phoneNumber: phone,\r\n            password: password,\r\n            emailId: email,\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"register\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n                setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    showToast(\"Registration successful! Now login with the new credentials...\", 'success');\r\n\r\n                    if (response.data.uidNo.substring(0, 1) === \"P\") {\r\n                        history.push(\"/\");\r\n                    } else {\r\n                        history.push(\"/doctors/login\")\r\n                    }\r\n\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-divider\">\r\n                <div className=\"left-sidebar\">\r\n                    <img src=\"./mah-logo.png\" />\r\n\r\n                    <div className=\"left-text\" style={{ marginTop: -5 }}>\r\n                        <h2 style={{ marginBottom: 25 }}>Registration</h2>\r\n\r\n                        {/* Form for details entry... */}\r\n                        <div className=\"form-data\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Name (Firstname and Lastname)</label>\r\n                                    <input\r\n                                        id=\"name\"\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Email</label>\r\n                                    <input\r\n                                        id=\"email\"\r\n                                        value={email}\r\n                                        onChange={e => setEmail(e.target.value)}\r\n                                        type=\"email\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Role</label>\r\n                                    <select\r\n                                        id=\"role\"\r\n                                        value={role}\r\n                                        onChange={e => setRole(e.target.value)}\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Patient\">Patient</option>\r\n                                        <option value=\"Doctor\">Doctor</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        id=\"phone\"\r\n                                        value={phone}\r\n                                        onChange={e => setPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Password</label>\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={e => setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <label>Verify Password</label>\r\n                                    <input\r\n                                        id=\"verifyPasword\"\r\n                                        value={verifyPassword}\r\n                                        onChange={e => setVerifyPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={register}\r\n                            >Register</button>\r\n                        </div>\r\n\r\n                        <div className=\"doctor-register\">\r\n                            <h4>Already a user? <Link to=\"/\">Login here</Link></h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-sidebar\">\r\n                    <img src=\"./access-account.svg\" style={{ width: '50%' }} />\r\n                    <div className=\"image-text\">\r\n                        <p>India's top doctors to guide you to better health everyday...</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","const Loader = ({ isVisible }) => {\r\n\r\n    const displayClass = !isVisible ? \"d-none\" : \"new-loader-bg\";\r\n\r\n    return (\r\n        <div className={displayClass}>\r\n            <div className=\"new-loader-container\">\r\n                <span style={{ '--i': 0 }}></span>\r\n                <span style={{ '--i': 1 }}></span>\r\n                <span style={{ '--i': 2 }}></span>\r\n                <span style={{ '--i': 3 }}></span>\r\n                <span style={{ '--i': 4 }}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nconst Toast = (props) => {\r\n\r\n    const visStatus = (props.toastVisibility) ? \"toast\" : \"toast d-none\";\r\n    const message = props.toastMessage === \"Failed to fetch\" ? \"Failed to retrieve data. Check your internet connection and try again.\" : props.toastMessage;\r\n\r\n    function closeToast() {\r\n        props.setToastVisibility(false)\r\n    }\r\n\r\n    if (props.toastVisibility) {\r\n        setTimeout(() => {\r\n            props.setToastVisibility(false)\r\n        }, 8000)\r\n    }\r\n\r\n    let iconSrc = \"\"\r\n    const contentStyle = {}\r\n    const headerStyle = {}\r\n\r\n    switch (props.msgBoxType) {\r\n        case \"success\":\r\n            iconSrc = \"/success.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--main-green)\"\r\n\r\n            headerStyle.color = \"var(--main-green)\"\r\n            headerStyle.innerText = \"Success\"\r\n\r\n            break;\r\n\r\n        case \"information\":\r\n            iconSrc = \"/info.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--bluish)\";\r\n\r\n            headerStyle.color = \"var(--bluish)\"\r\n            headerStyle.innerText = \"Information\"\r\n\r\n            break;\r\n\r\n        case \"exclamation\":\r\n            iconSrc = \"/warning.png\";\r\n            contentStyle.borderLeft = \"3px solid var(--golden-rod)\";\r\n\r\n            headerStyle.color = \"var(--golden-rod)\"\r\n            headerStyle.innerText = \"Error\"\r\n\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        // This returns the basic\r\n        //Frame setup for the custom message box\r\n        // and based on the above props\r\n        // the state values can be changed\r\n        // depending on the values\r\n        // of the\r\n        // 1. Message\r\n        // 2. Box style (information, exclamation or success)\r\n        // 3. The message box visibility (true or false)\r\n        <div className={visStatus}>\r\n            <div className=\"logo\">\r\n                <img id=\"toastIcon\" src={iconSrc} alt=\"\" />\r\n            </div>\r\n            <div className=\"content\" style={contentStyle}>\r\n                <div className=\"content-header\">\r\n                    <h4 id=\"headerText\" style={headerStyle}>MAH Health Care</h4>\r\n                    <span id=\"close_toast\" onClick={closeToast}>&times;</span>\r\n                </div>\r\n                <p id=\"toast_message\">{(message === \"Unauthenticated user\" || message === \"No user found\") ? \"Access Denied!\" : message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast;\r\n","import { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n\r\n    const history = useHistory();\r\n    const buttonStyle = {\r\n        display: 'block',\r\n        background: 'transparent',\r\n        color: 'white',\r\n        outline: 'none',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        fontFamily: 'Poppins',\r\n        marginRight: '40px',\r\n    }\r\n\r\n    const signOut = () => {\r\n        //Reset the other variables....\r\n        sessionStorage.setItem(\"token\", null);\r\n        sessionStorage.setItem(\"id_val\", null);\r\n\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"header-bar\">\r\n            <div className=\"header-bar-image\">\r\n                <Link to=\"/patients/profile\" ><img src=\"/mah-logo.png\" width=\"60\" />MAH Health Care</Link>\r\n            </div>\r\n            <button style={buttonStyle} onClick={signOut}>Sign Out</button>\r\n        </div>\r\n    );\r\n}\r\n","\r\nexport const PatientTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-ui-user\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Medical\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 4 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(4)}\r\n            >\r\n                <i className=\"icofont-history\"></i>History\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 5 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(5)}\r\n            >\r\n                <i className=\"icofont-glass\"></i>Lifestyle\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export const countriesList = [\r\n    {name: 'Afghanistan', code: 'AF'},\r\n    {name: 'Åland Islands', code: 'AX'},\r\n    {name: 'Albania', code: 'AL'},\r\n    {name: 'Algeria', code: 'DZ'},\r\n    {name: 'American Samoa', code: 'AS'},\r\n    {name: 'AndorrA', code: 'AD'},\r\n    {name: 'Angola', code: 'AO'},\r\n    {name: 'Anguilla', code: 'AI'},\r\n    {name: 'Antarctica', code: 'AQ'},\r\n    {name: 'Antigua and Barbuda', code: 'AG'},\r\n    {name: 'Argentina', code: 'AR'},\r\n    {name: 'Armenia', code: 'AM'},\r\n    {name: 'Aruba', code: 'AW'},\r\n    {name: 'Australia', code: 'AU'},\r\n    {name: 'Austria', code: 'AT'},\r\n    {name: 'Azerbaijan', code: 'AZ'},\r\n    {name: 'Bahamas', code: 'BS'},\r\n    {name: 'Bahrain', code: 'BH'},\r\n    {name: 'Bangladesh', code: 'BD'},\r\n    {name: 'Barbados', code: 'BB'},\r\n    {name: 'Belarus', code: 'BY'},\r\n    {name: 'Belgium', code: 'BE'},\r\n    {name: 'Belize', code: 'BZ'},\r\n    {name: 'Benin', code: 'BJ'},\r\n    {name: 'Bermuda', code: 'BM'},\r\n    {name: 'Bhutan', code: 'BT'},\r\n    {name: 'Bolivia', code: 'BO'},\r\n    {name: 'Bosnia and Herzegovina', code: 'BA'},\r\n    {name: 'Botswana', code: 'BW'},\r\n    {name: 'Bouvet Island', code: 'BV'},\r\n    {name: 'Brazil', code: 'BR'},\r\n    {name: 'British Indian Ocean Territory', code: 'IO'},\r\n    {name: 'Brunei Darussalam', code: 'BN'},\r\n    {name: 'Bulgaria', code: 'BG'},\r\n    {name: 'Burkina Faso', code: 'BF'},\r\n    {name: 'Burundi', code: 'BI'},\r\n    {name: 'Cambodia', code: 'KH'},\r\n    {name: 'Cameroon', code: 'CM'},\r\n    {name: 'Canada', code: 'CA'},\r\n    {name: 'Cape Verde', code: 'CV'},\r\n    {name: 'Cayman Islands', code: 'KY'},\r\n    {name: 'Central African Republic', code: 'CF'},\r\n    {name: 'Chad', code: 'TD'},\r\n    {name: 'Chile', code: 'CL'},\r\n    {name: 'China', code: 'CN'},\r\n    {name: 'Christmas Island', code: 'CX'},\r\n    {name: 'Cocos (Keeling) Islands', code: 'CC'},\r\n    {name: 'Colombia', code: 'CO'},\r\n    {name: 'Comoros', code: 'KM'},\r\n    {name: 'Congo', code: 'CG'},\r\n    {name: 'Congo, The Democratic Republic of the', code: 'CD'},\r\n    {name: 'Cook Islands', code: 'CK'},\r\n    {name: 'Costa Rica', code: 'CR'},\r\n    {name: 'Cote D\\'Ivoire', code: 'CI'},\r\n    {name: 'Croatia', code: 'HR'},\r\n    {name: 'Cuba', code: 'CU'},\r\n    {name: 'Cyprus', code: 'CY'},\r\n    {name: 'Czech Republic', code: 'CZ'},\r\n    {name: 'Denmark', code: 'DK'},\r\n    {name: 'Djibouti', code: 'DJ'},\r\n    {name: 'Dominica', code: 'DM'},\r\n    {name: 'Dominican Republic', code: 'DO'},\r\n    {name: 'Ecuador', code: 'EC'},\r\n    {name: 'Egypt', code: 'EG'},\r\n    {name: 'El Salvador', code: 'SV'},\r\n    {name: 'Equatorial Guinea', code: 'GQ'},\r\n    {name: 'Eritrea', code: 'ER'},\r\n    {name: 'Estonia', code: 'EE'},\r\n    {name: 'Ethiopia', code: 'ET'},\r\n    {name: 'Falkland Islands (Malvinas)', code: 'FK'},\r\n    {name: 'Faroe Islands', code: 'FO'},\r\n    {name: 'Fiji', code: 'FJ'},\r\n    {name: 'Finland', code: 'FI'},\r\n    {name: 'France', code: 'FR'},\r\n    {name: 'French Guiana', code: 'GF'},\r\n    {name: 'French Polynesia', code: 'PF'},\r\n    {name: 'French Southern Territories', code: 'TF'},\r\n    {name: 'Gabon', code: 'GA'},\r\n    {name: 'Gambia', code: 'GM'},\r\n    {name: 'Georgia', code: 'GE'},\r\n    {name: 'Germany', code: 'DE'},\r\n    {name: 'Ghana', code: 'GH'},\r\n    {name: 'Gibraltar', code: 'GI'},\r\n    {name: 'Greece', code: 'GR'},\r\n    {name: 'Greenland', code: 'GL'},\r\n    {name: 'Grenada', code: 'GD'},\r\n    {name: 'Guadeloupe', code: 'GP'},\r\n    {name: 'Guam', code: 'GU'},\r\n    {name: 'Guatemala', code: 'GT'},\r\n    {name: 'Guernsey', code: 'GG'},\r\n    {name: 'Guinea', code: 'GN'},\r\n    {name: 'Guinea-Bissau', code: 'GW'},\r\n    {name: 'Guyana', code: 'GY'},\r\n    {name: 'Haiti', code: 'HT'},\r\n    {name: 'Heard Island and Mcdonald Islands', code: 'HM'},\r\n    {name: 'Holy See (Vatican City State)', code: 'VA'},\r\n    {name: 'Honduras', code: 'HN'},\r\n    {name: 'Hong Kong', code: 'HK'},\r\n    {name: 'Hungary', code: 'HU'},\r\n    {name: 'Iceland', code: 'IS'},\r\n    {name: 'India', code: 'IN'},\r\n    {name: 'Indonesia', code: 'ID'},\r\n    {name: 'Iran, Islamic Republic Of', code: 'IR'},\r\n    {name: 'Iraq', code: 'IQ'},\r\n    {name: 'Ireland', code: 'IE'},\r\n    {name: 'Isle of Man', code: 'IM'},\r\n    {name: 'Israel', code: 'IL'},\r\n    {name: 'Italy', code: 'IT'},\r\n    {name: 'Jamaica', code: 'JM'},\r\n    {name: 'Japan', code: 'JP'},\r\n    {name: 'Jersey', code: 'JE'},\r\n    {name: 'Jordan', code: 'JO'},\r\n    {name: 'Kazakhstan', code: 'KZ'},\r\n    {name: 'Kenya', code: 'KE'},\r\n    {name: 'Kiribati', code: 'KI'},\r\n    {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'},\r\n    {name: 'Korea, Republic of', code: 'KR'},\r\n    {name: 'Kuwait', code: 'KW'},\r\n    {name: 'Kyrgyzstan', code: 'KG'},\r\n    {name: 'Lao People\\'S Democratic Republic', code: 'LA'},\r\n    {name: 'Latvia', code: 'LV'},\r\n    {name: 'Lebanon', code: 'LB'},\r\n    {name: 'Lesotho', code: 'LS'},\r\n    {name: 'Liberia', code: 'LR'},\r\n    {name: 'Libyan Arab Jamahiriya', code: 'LY'},\r\n    {name: 'Liechtenstein', code: 'LI'},\r\n    {name: 'Lithuania', code: 'LT'},\r\n    {name: 'Luxembourg', code: 'LU'},\r\n    {name: 'Macao', code: 'MO'},\r\n    {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'},\r\n    {name: 'Madagascar', code: 'MG'},\r\n    {name: 'Malawi', code: 'MW'},\r\n    {name: 'Malaysia', code: 'MY'},\r\n    {name: 'Maldives', code: 'MV'},\r\n    {name: 'Mali', code: 'ML'},\r\n    {name: 'Malta', code: 'MT'},\r\n    {name: 'Marshall Islands', code: 'MH'},\r\n    {name: 'Martinique', code: 'MQ'},\r\n    {name: 'Mauritania', code: 'MR'},\r\n    {name: 'Mauritius', code: 'MU'},\r\n    {name: 'Mayotte', code: 'YT'},\r\n    {name: 'Mexico', code: 'MX'},\r\n    {name: 'Micronesia, Federated States of', code: 'FM'},\r\n    {name: 'Moldova, Republic of', code: 'MD'},\r\n    {name: 'Monaco', code: 'MC'},\r\n    {name: 'Mongolia', code: 'MN'},\r\n    {name: 'Montserrat', code: 'MS'},\r\n    {name: 'Morocco', code: 'MA'},\r\n    {name: 'Mozambique', code: 'MZ'},\r\n    {name: 'Myanmar', code: 'MM'},\r\n    {name: 'Namibia', code: 'NA'},\r\n    {name: 'Nauru', code: 'NR'},\r\n    {name: 'Nepal', code: 'NP'},\r\n    {name: 'Netherlands', code: 'NL'},\r\n    {name: 'Netherlands Antilles', code: 'AN'},\r\n    {name: 'New Caledonia', code: 'NC'},\r\n    {name: 'New Zealand', code: 'NZ'},\r\n    {name: 'Nicaragua', code: 'NI'},\r\n    {name: 'Niger', code: 'NE'},\r\n    {name: 'Nigeria', code: 'NG'},\r\n    {name: 'Niue', code: 'NU'},\r\n    {name: 'Norfolk Island', code: 'NF'},\r\n    {name: 'Northern Mariana Islands', code: 'MP'},\r\n    {name: 'Norway', code: 'NO'},\r\n    {name: 'Oman', code: 'OM'},\r\n    {name: 'Pakistan', code: 'PK'},\r\n    {name: 'Palau', code: 'PW'},\r\n    {name: 'Palestinian Territory, Occupied', code: 'PS'},\r\n    {name: 'Panama', code: 'PA'},\r\n    {name: 'Papua New Guinea', code: 'PG'},\r\n    {name: 'Paraguay', code: 'PY'},\r\n    {name: 'Peru', code: 'PE'},\r\n    {name: 'Philippines', code: 'PH'},\r\n    {name: 'Pitcairn', code: 'PN'},\r\n    {name: 'Poland', code: 'PL'},\r\n    {name: 'Portugal', code: 'PT'},\r\n    {name: 'Puerto Rico', code: 'PR'},\r\n    {name: 'Qatar', code: 'QA'},\r\n    {name: 'Reunion', code: 'RE'},\r\n    {name: 'Romania', code: 'RO'},\r\n    {name: 'Russian Federation', code: 'RU'},\r\n    {name: 'RWANDA', code: 'RW'},\r\n    {name: 'Saint Helena', code: 'SH'},\r\n    {name: 'Saint Kitts and Nevis', code: 'KN'},\r\n    {name: 'Saint Lucia', code: 'LC'},\r\n    {name: 'Saint Pierre and Miquelon', code: 'PM'},\r\n    {name: 'Saint Vincent and the Grenadines', code: 'VC'},\r\n    {name: 'Samoa', code: 'WS'},\r\n    {name: 'San Marino', code: 'SM'},\r\n    {name: 'Sao Tome and Principe', code: 'ST'},\r\n    {name: 'Saudi Arabia', code: 'SA'},\r\n    {name: 'Senegal', code: 'SN'},\r\n    {name: 'Serbia and Montenegro', code: 'CS'},\r\n    {name: 'Seychelles', code: 'SC'},\r\n    {name: 'Sierra Leone', code: 'SL'},\r\n    {name: 'Singapore', code: 'SG'},\r\n    {name: 'Slovakia', code: 'SK'},\r\n    {name: 'Slovenia', code: 'SI'},\r\n    {name: 'Solomon Islands', code: 'SB'},\r\n    {name: 'Somalia', code: 'SO'},\r\n    {name: 'South Africa', code: 'ZA'},\r\n    {name: 'South Georgia and the South Sandwich Islands', code: 'GS'},\r\n    {name: 'Spain', code: 'ES'},\r\n    {name: 'Sri Lanka', code: 'LK'},\r\n    {name: 'Sudan', code: 'SD'},\r\n    {name: 'Suriname', code: 'SR'},\r\n    {name: 'Svalbard and Jan Mayen', code: 'SJ'},\r\n    {name: 'Swaziland', code: 'SZ'},\r\n    {name: 'Sweden', code: 'SE'},\r\n    {name: 'Switzerland', code: 'CH'},\r\n    {name: 'Syrian Arab Republic', code: 'SY'},\r\n    {name: 'Taiwan, Province of China', code: 'TW'},\r\n    {name: 'Tajikistan', code: 'TJ'},\r\n    {name: 'Tanzania, United Republic of', code: 'TZ'},\r\n    {name: 'Thailand', code: 'TH'},\r\n    {name: 'Timor-Leste', code: 'TL'},\r\n    {name: 'Togo', code: 'TG'},\r\n    {name: 'Tokelau', code: 'TK'},\r\n    {name: 'Tonga', code: 'TO'},\r\n    {name: 'Trinidad and Tobago', code: 'TT'},\r\n    {name: 'Tunisia', code: 'TN'},\r\n    {name: 'Turkey', code: 'TR'},\r\n    {name: 'Turkmenistan', code: 'TM'},\r\n    {name: 'Turks and Caicos Islands', code: 'TC'},\r\n    {name: 'Tuvalu', code: 'TV'},\r\n    {name: 'Uganda', code: 'UG'},\r\n    {name: 'Ukraine', code: 'UA'},\r\n    {name: 'United Arab Emirates', code: 'AE'},\r\n    {name: 'United Kingdom', code: 'GB'},\r\n    {name: 'United States', code: 'US'},\r\n    {name: 'United States Minor Outlying Islands', code: 'UM'},\r\n    {name: 'Uruguay', code: 'UY'},\r\n    {name: 'Uzbekistan', code: 'UZ'},\r\n    {name: 'Vanuatu', code: 'VU'},\r\n    {name: 'Venezuela', code: 'VE'},\r\n    {name: 'Viet Nam', code: 'VN'},\r\n    {name: 'Virgin Islands, British', code: 'VG'},\r\n    {name: 'Virgin Islands, U.S.', code: 'VI'},\r\n    {name: 'Wallis and Futuna', code: 'WF'},\r\n    {name: 'Western Sahara', code: 'EH'},\r\n    {name: 'Yemen', code: 'YE'},\r\n    {name: 'Zambia', code: 'ZM'},\r\n    {name: 'Zimbabwe', code: 'ZW'}\r\n  ]\r\n\r\n  export const countries = [\r\n    { code: 'AD', label: 'Andorra', phone: '376' },\r\n    {\r\n      code: 'AE',\r\n      label: 'United Arab Emirates',\r\n      phone: '971',\r\n    },\r\n    { code: 'AF', label: 'Afghanistan', phone: '93' },\r\n    {\r\n      code: 'AG',\r\n      label: 'Antigua and Barbuda',\r\n      phone: '1-268',\r\n    },\r\n    { code: 'AI', label: 'Anguilla', phone: '1-264' },\r\n    { code: 'AL', label: 'Albania', phone: '355' },\r\n    { code: 'AM', label: 'Armenia', phone: '374' },\r\n    { code: 'AO', label: 'Angola', phone: '244' },\r\n    { code: 'AQ', label: 'Antarctica', phone: '672' },\r\n    { code: 'AR', label: 'Argentina', phone: '54' },\r\n    { code: 'AS', label: 'American Samoa', phone: '1-684' },\r\n    { code: 'AT', label: 'Austria', phone: '43' },\r\n    {\r\n      code: 'AU',\r\n      label: 'Australia',\r\n      phone: '61',\r\n      suggested: true,\r\n    },\r\n    { code: 'AW', label: 'Aruba', phone: '297' },\r\n    { code: 'AX', label: 'Alland Islands', phone: '358' },\r\n    { code: 'AZ', label: 'Azerbaijan', phone: '994' },\r\n    {\r\n      code: 'BA',\r\n      label: 'Bosnia and Herzegovina',\r\n      phone: '387',\r\n    },\r\n    { code: 'BB', label: 'Barbados', phone: '1-246' },\r\n    { code: 'BD', label: 'Bangladesh', phone: '880' },\r\n    { code: 'BE', label: 'Belgium', phone: '32' },\r\n    { code: 'BF', label: 'Burkina Faso', phone: '226' },\r\n    { code: 'BG', label: 'Bulgaria', phone: '359' },\r\n    { code: 'BH', label: 'Bahrain', phone: '973' },\r\n    { code: 'BI', label: 'Burundi', phone: '257' },\r\n    { code: 'BJ', label: 'Benin', phone: '229' },\r\n    { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\r\n    { code: 'BM', label: 'Bermuda', phone: '1-441' },\r\n    { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\r\n    { code: 'BO', label: 'Bolivia', phone: '591' },\r\n    { code: 'BR', label: 'Brazil', phone: '55' },\r\n    { code: 'BS', label: 'Bahamas', phone: '1-242' },\r\n    { code: 'BT', label: 'Bhutan', phone: '975' },\r\n    { code: 'BV', label: 'Bouvet Island', phone: '47' },\r\n    { code: 'BW', label: 'Botswana', phone: '267' },\r\n    { code: 'BY', label: 'Belarus', phone: '375' },\r\n    { code: 'BZ', label: 'Belize', phone: '501' },\r\n    {\r\n      code: 'CA',\r\n      label: 'Canada',\r\n      phone: '1',\r\n      suggested: true,\r\n    },\r\n    {\r\n      code: 'CC',\r\n      label: 'Cocos (Keeling) Islands',\r\n      phone: '61',\r\n    },\r\n    {\r\n      code: 'CD',\r\n      label: 'Congo, Democratic Republic of the',\r\n      phone: '243',\r\n    },\r\n    {\r\n      code: 'CF',\r\n      label: 'Central African Republic',\r\n      phone: '236',\r\n    },\r\n    {\r\n      code: 'CG',\r\n      label: 'Congo, Republic of the',\r\n      phone: '242',\r\n    },\r\n    { code: 'CH', label: 'Switzerland', phone: '41' },\r\n    { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\r\n    { code: 'CK', label: 'Cook Islands', phone: '682' },\r\n    { code: 'CL', label: 'Chile', phone: '56' },\r\n    { code: 'CM', label: 'Cameroon', phone: '237' },\r\n    { code: 'CN', label: 'China', phone: '86' },\r\n    { code: 'CO', label: 'Colombia', phone: '57' },\r\n    { code: 'CR', label: 'Costa Rica', phone: '506' },\r\n    { code: 'CU', label: 'Cuba', phone: '53' },\r\n    { code: 'CV', label: 'Cape Verde', phone: '238' },\r\n    { code: 'CW', label: 'Curacao', phone: '599' },\r\n    { code: 'CX', label: 'Christmas Island', phone: '61' },\r\n    { code: 'CY', label: 'Cyprus', phone: '357' },\r\n    { code: 'CZ', label: 'Czech Republic', phone: '420' },\r\n    {\r\n      code: 'DE',\r\n      label: 'Germany',\r\n      phone: '49',\r\n      suggested: true,\r\n    },\r\n    { code: 'DJ', label: 'Djibouti', phone: '253' },\r\n    { code: 'DK', label: 'Denmark', phone: '45' },\r\n    { code: 'DM', label: 'Dominica', phone: '1-767' },\r\n    {\r\n      code: 'DO',\r\n      label: 'Dominican Republic',\r\n      phone: '1-809',\r\n    },\r\n    { code: 'DZ', label: 'Algeria', phone: '213' },\r\n    { code: 'EC', label: 'Ecuador', phone: '593' },\r\n    { code: 'EE', label: 'Estonia', phone: '372' },\r\n    { code: 'EG', label: 'Egypt', phone: '20' },\r\n    { code: 'EH', label: 'Western Sahara', phone: '212' },\r\n    { code: 'ER', label: 'Eritrea', phone: '291' },\r\n    { code: 'ES', label: 'Spain', phone: '34' },\r\n    { code: 'ET', label: 'Ethiopia', phone: '251' },\r\n    { code: 'FI', label: 'Finland', phone: '358' },\r\n    { code: 'FJ', label: 'Fiji', phone: '679' },\r\n    {\r\n      code: 'FK',\r\n      label: 'Falkland Islands (Malvinas)',\r\n      phone: '500',\r\n    },\r\n    {\r\n      code: 'FM',\r\n      label: 'Micronesia, Federated States of',\r\n      phone: '691',\r\n    },\r\n    { code: 'FO', label: 'Faroe Islands', phone: '298' },\r\n    {\r\n      code: 'FR',\r\n      label: 'France',\r\n      phone: '33',\r\n      suggested: true,\r\n    },\r\n    { code: 'GA', label: 'Gabon', phone: '241' },\r\n    { code: 'GB', label: 'United Kingdom', phone: '44' },\r\n    { code: 'GD', label: 'Grenada', phone: '1-473' },\r\n    { code: 'GE', label: 'Georgia', phone: '995' },\r\n    { code: 'GF', label: 'French Guiana', phone: '594' },\r\n    { code: 'GG', label: 'Guernsey', phone: '44' },\r\n    { code: 'GH', label: 'Ghana', phone: '233' },\r\n    { code: 'GI', label: 'Gibraltar', phone: '350' },\r\n    { code: 'GL', label: 'Greenland', phone: '299' },\r\n    { code: 'GM', label: 'Gambia', phone: '220' },\r\n    { code: 'GN', label: 'Guinea', phone: '224' },\r\n    { code: 'GP', label: 'Guadeloupe', phone: '590' },\r\n    { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\r\n    { code: 'GR', label: 'Greece', phone: '30' },\r\n    {\r\n      code: 'GS',\r\n      label: 'South Georgia and the South Sandwich Islands',\r\n      phone: '500',\r\n    },\r\n    { code: 'GT', label: 'Guatemala', phone: '502' },\r\n    { code: 'GU', label: 'Guam', phone: '1-671' },\r\n    { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\r\n    { code: 'GY', label: 'Guyana', phone: '592' },\r\n    { code: 'HK', label: 'Hong Kong', phone: '852' },\r\n    {\r\n      code: 'HM',\r\n      label: 'Heard Island and McDonald Islands',\r\n      phone: '672',\r\n    },\r\n    { code: 'HN', label: 'Honduras', phone: '504' },\r\n    { code: 'HR', label: 'Croatia', phone: '385' },\r\n    { code: 'HT', label: 'Haiti', phone: '509' },\r\n    { code: 'HU', label: 'Hungary', phone: '36' },\r\n    { code: 'ID', label: 'Indonesia', phone: '62' },\r\n    { code: 'IE', label: 'Ireland', phone: '353' },\r\n    { code: 'IL', label: 'Israel', phone: '972' },\r\n    { code: 'IM', label: 'Isle of Man', phone: '44' },\r\n    { code: 'IN', label: 'India', phone: '91' },\r\n    {\r\n      code: 'IO',\r\n      label: 'British Indian Ocean Territory',\r\n      phone: '246',\r\n    },\r\n    { code: 'IQ', label: 'Iraq', phone: '964' },\r\n    {\r\n      code: 'IR',\r\n      label: 'Iran, Islamic Republic of',\r\n      phone: '98',\r\n    },\r\n    { code: 'IS', label: 'Iceland', phone: '354' },\r\n    { code: 'IT', label: 'Italy', phone: '39' },\r\n    { code: 'JE', label: 'Jersey', phone: '44' },\r\n    { code: 'JM', label: 'Jamaica', phone: '1-876' },\r\n    { code: 'JO', label: 'Jordan', phone: '962' },\r\n    {\r\n      code: 'JP',\r\n      label: 'Japan',\r\n      phone: '81',\r\n      suggested: true,\r\n    },\r\n    { code: 'KE', label: 'Kenya', phone: '254' },\r\n    { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\r\n    { code: 'KH', label: 'Cambodia', phone: '855' },\r\n    { code: 'KI', label: 'Kiribati', phone: '686' },\r\n    { code: 'KM', label: 'Comoros', phone: '269' },\r\n    {\r\n      code: 'KN',\r\n      label: 'Saint Kitts and Nevis',\r\n      phone: '1-869',\r\n    },\r\n    {\r\n      code: 'KP',\r\n      label: \"Korea, Democratic People's Republic of\",\r\n      phone: '850',\r\n    },\r\n    { code: 'KR', label: 'Korea, Republic of', phone: '82' },\r\n    { code: 'KW', label: 'Kuwait', phone: '965' },\r\n    { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\r\n    { code: 'KZ', label: 'Kazakhstan', phone: '7' },\r\n    {\r\n      code: 'LA',\r\n      label: \"Lao People's Democratic Republic\",\r\n      phone: '856',\r\n    },\r\n    { code: 'LB', label: 'Lebanon', phone: '961' },\r\n    { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\r\n    { code: 'LI', label: 'Liechtenstein', phone: '423' },\r\n    { code: 'LK', label: 'Sri Lanka', phone: '94' },\r\n    { code: 'LR', label: 'Liberia', phone: '231' },\r\n    { code: 'LS', label: 'Lesotho', phone: '266' },\r\n    { code: 'LT', label: 'Lithuania', phone: '370' },\r\n    { code: 'LU', label: 'Luxembourg', phone: '352' },\r\n    { code: 'LV', label: 'Latvia', phone: '371' },\r\n    { code: 'LY', label: 'Libya', phone: '218' },\r\n    { code: 'MA', label: 'Morocco', phone: '212' },\r\n    { code: 'MC', label: 'Monaco', phone: '377' },\r\n    {\r\n      code: 'MD',\r\n      label: 'Moldova, Republic of',\r\n      phone: '373',\r\n    },\r\n    { code: 'ME', label: 'Montenegro', phone: '382' },\r\n    {\r\n      code: 'MF',\r\n      label: 'Saint Martin (French part)',\r\n      phone: '590',\r\n    },\r\n    { code: 'MG', label: 'Madagascar', phone: '261' },\r\n    { code: 'MH', label: 'Marshall Islands', phone: '692' },\r\n    {\r\n      code: 'MK',\r\n      label: 'Macedonia, the Former Yugoslav Republic of',\r\n      phone: '389',\r\n    },\r\n    { code: 'ML', label: 'Mali', phone: '223' },\r\n    { code: 'MM', label: 'Myanmar', phone: '95' },\r\n    { code: 'MN', label: 'Mongolia', phone: '976' },\r\n    { code: 'MO', label: 'Macao', phone: '853' },\r\n    {\r\n      code: 'MP',\r\n      label: 'Northern Mariana Islands',\r\n      phone: '1-670',\r\n    },\r\n    { code: 'MQ', label: 'Martinique', phone: '596' },\r\n    { code: 'MR', label: 'Mauritania', phone: '222' },\r\n    { code: 'MS', label: 'Montserrat', phone: '1-664' },\r\n    { code: 'MT', label: 'Malta', phone: '356' },\r\n    { code: 'MU', label: 'Mauritius', phone: '230' },\r\n    { code: 'MV', label: 'Maldives', phone: '960' },\r\n    { code: 'MW', label: 'Malawi', phone: '265' },\r\n    { code: 'MX', label: 'Mexico', phone: '52' },\r\n    { code: 'MY', label: 'Malaysia', phone: '60' },\r\n    { code: 'MZ', label: 'Mozambique', phone: '258' },\r\n    { code: 'NA', label: 'Namibia', phone: '264' },\r\n    { code: 'NC', label: 'New Caledonia', phone: '687' },\r\n    { code: 'NE', label: 'Niger', phone: '227' },\r\n    { code: 'NF', label: 'Norfolk Island', phone: '672' },\r\n    { code: 'NG', label: 'Nigeria', phone: '234' },\r\n    { code: 'NI', label: 'Nicaragua', phone: '505' },\r\n    { code: 'NL', label: 'Netherlands', phone: '31' },\r\n    { code: 'NO', label: 'Norway', phone: '47' },\r\n    { code: 'NP', label: 'Nepal', phone: '977' },\r\n    { code: 'NR', label: 'Nauru', phone: '674' },\r\n    { code: 'NU', label: 'Niue', phone: '683' },\r\n    { code: 'NZ', label: 'New Zealand', phone: '64' },\r\n    { code: 'OM', label: 'Oman', phone: '968' },\r\n    { code: 'PA', label: 'Panama', phone: '507' },\r\n    { code: 'PE', label: 'Peru', phone: '51' },\r\n    { code: 'PF', label: 'French Polynesia', phone: '689' },\r\n    { code: 'PG', label: 'Papua New Guinea', phone: '675' },\r\n    { code: 'PH', label: 'Philippines', phone: '63' },\r\n    { code: 'PK', label: 'Pakistan', phone: '92' },\r\n    { code: 'PL', label: 'Poland', phone: '48' },\r\n    {\r\n      code: 'PM',\r\n      label: 'Saint Pierre and Miquelon',\r\n      phone: '508',\r\n    },\r\n    { code: 'PN', label: 'Pitcairn', phone: '870' },\r\n    { code: 'PR', label: 'Puerto Rico', phone: '1' },\r\n    {\r\n      code: 'PS',\r\n      label: 'Palestine, State of',\r\n      phone: '970',\r\n    },\r\n    { code: 'PT', label: 'Portugal', phone: '351' },\r\n    { code: 'PW', label: 'Palau', phone: '680' },\r\n    { code: 'PY', label: 'Paraguay', phone: '595' },\r\n    { code: 'QA', label: 'Qatar', phone: '974' },\r\n    { code: 'RE', label: 'Reunion', phone: '262' },\r\n    { code: 'RO', label: 'Romania', phone: '40' },\r\n    { code: 'RS', label: 'Serbia', phone: '381' },\r\n    { code: 'RU', label: 'Russian Federation', phone: '7' },\r\n    { code: 'RW', label: 'Rwanda', phone: '250' },\r\n    { code: 'SA', label: 'Saudi Arabia', phone: '966' },\r\n    { code: 'SB', label: 'Solomon Islands', phone: '677' },\r\n    { code: 'SC', label: 'Seychelles', phone: '248' },\r\n    { code: 'SD', label: 'Sudan', phone: '249' },\r\n    { code: 'SE', label: 'Sweden', phone: '46' },\r\n    { code: 'SG', label: 'Singapore', phone: '65' },\r\n    { code: 'SH', label: 'Saint Helena', phone: '290' },\r\n    { code: 'SI', label: 'Slovenia', phone: '386' },\r\n    {\r\n      code: 'SJ',\r\n      label: 'Svalbard and Jan Mayen',\r\n      phone: '47',\r\n    },\r\n    { code: 'SK', label: 'Slovakia', phone: '421' },\r\n    { code: 'SL', label: 'Sierra Leone', phone: '232' },\r\n    { code: 'SM', label: 'San Marino', phone: '378' },\r\n    { code: 'SN', label: 'Senegal', phone: '221' },\r\n    { code: 'SO', label: 'Somalia', phone: '252' },\r\n    { code: 'SR', label: 'Suriname', phone: '597' },\r\n    { code: 'SS', label: 'South Sudan', phone: '211' },\r\n    {\r\n      code: 'ST',\r\n      label: 'Sao Tome and Principe',\r\n      phone: '239',\r\n    },\r\n    { code: 'SV', label: 'El Salvador', phone: '503' },\r\n    {\r\n      code: 'SX',\r\n      label: 'Sint Maarten (Dutch part)',\r\n      phone: '1-721',\r\n    },\r\n    {\r\n      code: 'SY',\r\n      label: 'Syrian Arab Republic',\r\n      phone: '963',\r\n    },\r\n    { code: 'SZ', label: 'Swaziland', phone: '268' },\r\n    {\r\n      code: 'TC',\r\n      label: 'Turks and Caicos Islands',\r\n      phone: '1-649',\r\n    },\r\n    { code: 'TD', label: 'Chad', phone: '235' },\r\n    {\r\n      code: 'TF',\r\n      label: 'French Southern Territories',\r\n      phone: '262',\r\n    },\r\n    { code: 'TG', label: 'Togo', phone: '228' },\r\n    { code: 'TH', label: 'Thailand', phone: '66' },\r\n    { code: 'TJ', label: 'Tajikistan', phone: '992' },\r\n    { code: 'TK', label: 'Tokelau', phone: '690' },\r\n    { code: 'TL', label: 'Timor-Leste', phone: '670' },\r\n    { code: 'TM', label: 'Turkmenistan', phone: '993' },\r\n    { code: 'TN', label: 'Tunisia', phone: '216' },\r\n    { code: 'TO', label: 'Tonga', phone: '676' },\r\n    { code: 'TR', label: 'Turkey', phone: '90' },\r\n    {\r\n      code: 'TT',\r\n      label: 'Trinidad and Tobago',\r\n      phone: '1-868',\r\n    },\r\n    { code: 'TV', label: 'Tuvalu', phone: '688' },\r\n    {\r\n      code: 'TW',\r\n      label: 'Taiwan, Province of China',\r\n      phone: '886',\r\n    },\r\n    {\r\n      code: 'TZ',\r\n      label: 'United Republic of Tanzania',\r\n      phone: '255',\r\n    },\r\n    { code: 'UA', label: 'Ukraine', phone: '380' },\r\n    { code: 'UG', label: 'Uganda', phone: '256' },\r\n    {\r\n      code: 'US',\r\n      label: 'United States',\r\n      phone: '1',\r\n      suggested: true,\r\n    },\r\n    { code: 'UY', label: 'Uruguay', phone: '598' },\r\n    { code: 'UZ', label: 'Uzbekistan', phone: '998' },\r\n    {\r\n      code: 'VA',\r\n      label: 'Holy See (Vatican City State)',\r\n      phone: '379',\r\n    },\r\n    {\r\n      code: 'VC',\r\n      label: 'Saint Vincent and the Grenadines',\r\n      phone: '1-784',\r\n    },\r\n    { code: 'VE', label: 'Venezuela', phone: '58' },\r\n    {\r\n      code: 'VG',\r\n      label: 'British Virgin Islands',\r\n      phone: '1-284',\r\n    },\r\n    {\r\n      code: 'VI',\r\n      label: 'US Virgin Islands',\r\n      phone: '1-340',\r\n    },\r\n    { code: 'VN', label: 'Vietnam', phone: '84' },\r\n    { code: 'VU', label: 'Vanuatu', phone: '678' },\r\n    { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\r\n    { code: 'WS', label: 'Samoa', phone: '685' },\r\n    { code: 'XK', label: 'Kosovo', phone: '383' },\r\n    { code: 'YE', label: 'Yemen', phone: '967' },\r\n    { code: 'YT', label: 'Mayotte', phone: '262' },\r\n    { code: 'ZA', label: 'South Africa', phone: '27' },\r\n    { code: 'ZM', label: 'Zambia', phone: '260' },\r\n    { code: 'ZW', label: 'Zimbabwe', phone: '263' },\r\n  ];","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { countriesList } from '../../assets/common/countries';\r\n\r\nexport const Contact = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const address = props.data?.address;\r\n    const houseNumber = address[0]?.houseNumber ? address[0]?.houseNumber + \", \" : \"\";\r\n    const street = address[0]?.street ? address[0]?.street + \", \" : \"\";\r\n    const city = address[0]?.city ? address[0]?.city + \", \" : \"\";\r\n    const state = address[0]?.state ? address[0]?.state + \", \" : \"\";\r\n    const district = address[0]?.district ? address[0]?.district + \", \" : \"\";\r\n    const postalCode = address[0]?.postalCode ? address[0]?.postalCode + \" - \" : \"\";\r\n\r\n\r\n    const showPhone = props.data?.contactPerson.length > 0 ? \"icofont-phone\" : \"\";\r\n    const contactDetails = props.data?.contactPerson.length > 0\r\n        && `${props.data?.contactPerson && props.data?.contactPerson[0]?.name} (${props.data?.contactPerson && props.data?.contactPerson[0]?.relationship})`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{address && address === []\r\n                                    ? \"\"\r\n                                    : `${houseNumber}${street}${city}${district}${state}${postalCode}`}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Country</td>\r\n                                <td>{address ? address[0]?.country : \"-\"}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailId}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Contact Person</td>\r\n                                <td>\r\n                                    { contactDetails }<br />\r\n                                    <i className={showPhone}></i>{props.data?.contactPerson && props.data?.contactPerson[0]?.contact?.value}\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                data={props.data}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const addressData = props.data.address[0] || {};\r\n    const contactPerson = props.data.contactPerson[0] || {};\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [addressType, setAddressType] = useState(addressData?.type);\r\n    const [txtHouseNo, setTxtHouseNo] = useState(addressData?.houseNumber);\r\n    const [txtStreet, setTxtStreet] = useState(addressData?.street);\r\n    const [txtCity, setTxtCity] = useState(addressData?.city);\r\n    const [txtDistrict, setTxtDistrict] = useState(addressData?.district);\r\n    const [txtState, setTxtState] = useState(addressData?.state);\r\n    const [txtPostalCode, setTxtPostalCode] = useState(addressData.postalCode);\r\n    const [txtCountry, setTxtCountry] = useState(addressData?.country);\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailId);\r\n    const [txtContactPerson, setTxtContactPerson] = useState(contactPerson?.name);\r\n    const [txtRelationship, setTxtRelationship] = useState(contactPerson?.relationship)\r\n    const [txtContactPhone, setTxtContactPhone] = useState(contactPerson?.contact?.value)\r\n\r\n    const updateContactDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            emailId: txtEmail,\r\n            address: [{\r\n                \"type\": addressType,\r\n                \"houseNumber\": txtHouseNo,\r\n                \"street\": txtStreet,\r\n                \"city\": txtCity,\r\n                \"district\": txtDistrict,\r\n                \"state\": txtState,\r\n                \"postalCode\": txtPostalCode,\r\n            }],\r\n            contactPerson: [{\r\n                \"relationship\": txtRelationship,\r\n                \"name\": txtContactPerson,\r\n                \"contact\": {\r\n                    \"system\": \"Phone\",\r\n                    \"value\": txtContactPhone,\r\n                }\r\n            }],\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n    const countryList =  countriesList.map((item, index) => {\r\n        return (<option key={index} value={item.name}>{item.name} ({item.code})</option>)\r\n    })\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row-3\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Type</label>\r\n                            <select\r\n                                id=\"addressType\"\r\n                                value={addressType}\r\n                                onChange={e => setAddressType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"Home\">Home</option>\r\n                                <option value=\"Work\">Work</option>\r\n                                <option value=\"Office\">Office</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>House Number</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtHouseNo\"\r\n                                value={txtHouseNo}\r\n                                onChange={e => setTxtHouseNo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className=\"input-group\">\r\n                            <label>Street</label>\r\n                            <textarea\r\n                                rows={2}\r\n                                className=\"form-control\"\r\n                                id=\"txtStreet\"\r\n                                value={txtStreet}\r\n                                onChange={e => setTxtStreet(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>City <span style={{color: 'red'}}>*</span></label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtCity\"\r\n                                value={txtCity}\r\n                                onChange={e => setTxtCity(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>District</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtDistrict\"\r\n                                value={txtDistrict}\r\n                                onChange={e => setTxtDistrict(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>State</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtState\"\r\n                                value={txtState}\r\n                                onChange={e => setTxtState(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Postal Code</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtPostalCode\"\r\n                                value={txtPostalCode}\r\n                                onChange={e => setTxtPostalCode(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className=\"input-group\">\r\n                            <label>Country <span style={{color: 'red'}}>*</span></label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtCountry\"\r\n                                value={txtCountry}\r\n                                onChange={e => setTxtCountry(e.target.value)}\r\n                            >\r\n                                {countryList}\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Contact Person (Name)</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPerson\"\r\n                                value={txtContactPerson}\r\n                                onChange={e => setTxtContactPerson(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Relationship</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtRelationship\"\r\n                                value={txtRelationship}\r\n                                onChange={e => setTxtRelationship(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                                id=\"txtContactPhone\"\r\n                                value={txtContactPhone}\r\n                                onChange={e => setTxtContactPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateContactDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Marital Status</td>\r\n                            <td>{props.data?.maritalStatus}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Is Deceased?</td>\r\n                            <td>{props.data?.deceased?.deceasedBoolean || \"No\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Deceased Date</td>\r\n                            <td>{props.data?.deceased?.deceasedDateTime || \"-\"}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [showDeceased, setShowDeceased] = useState('none');\r\n    const [cbxDeceased, setCbxDeceased] = useState(props.data.deceased?.deceasedBoolean)\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [cbxMaritalStatus, setCbxMaritalStatus] = useState(props.data.maritalStatus)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n    const [txtDeceasedDate, setTxtDeceasedDate] = useState(props.data?.deceased?.deceasedDateTime);\r\n\r\n    useEffect(() => {\r\n        if (cbxDeceased === \"Yes\") {\r\n            setShowDeceased('block')\r\n        } else {\r\n            setShowDeceased('none');\r\n        }\r\n    }, [cbxDeceased])\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n            \"deceased\": {\r\n                deceasedBoolean: cbxDeceased === \"Yes\" ? true : false,\r\n                deceasedDateTime: txtDeceasedDate,\r\n            },\r\n            maritalStatus: cbxMaritalStatus,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)'}}><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Marital Status</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxMaritalStatus\"\r\n                                value={cbxMaritalStatus}\r\n                                onChange={e => setCbxMaritalStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Maried\">Maried</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Do not wish to disclose\">Do not wish to disclose</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Is Deceased?</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxIsDeceased\"\r\n                                value={cbxDeceased}\r\n                                onChange={e => setCbxDeceased(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group' style={{ display: showDeceased }}>\r\n                            <label>Deceased Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtDeceasedDate\"\r\n                                value={txtDeceasedDate}\r\n                                onChange={e => setTxtDeceasedDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url'\r\n\r\nexport const Medical = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical Details</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Allergies</td>\r\n                            <td>{Object.keys(props.data?.allergies).length > 0 ? props.data?.allergies?.value.join(\", \") : ''}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Managing Organization (Hospital)</td>\r\n                            <td>{props.data.managingOrganization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Blood Group</td>\r\n                            <td>{props.data.general?.bloodGroup}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Height</td>\r\n                            <td>{props.data.general?.height} cm</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Weight</td>\r\n                            <td>{props.data.general?.weight} kg</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BMI</td>\r\n                            <td>{props.data.general?.bmi}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Chest Expansion</td>\r\n                            <td>{props.data.general?.chestExpansion} cm</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Vision</td>\r\n                            <td>{props.data.general?.vision}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>BP</td>\r\n                            <td>{props.data.general?.bp}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pulse</td>\r\n                            <td>{props.data.general?.pulse} BPM</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Oxygen Saturation</td>\r\n                            <td>{props.data.general?.oxygenSaturation} %</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <MedicalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalDialog = props => {\r\n\r\n    const [boxContent, setBoxContent] = useState('')\r\n    const [txtAllergies, setTxtAllergies] = useState(Object.keys(props.data?.allergies).length === 0 ? props.data.allergies?.value?.join(\", \") : '')\r\n    const [txtManagingOrg, setTxtManagingOrg] = useState(props.data.managingOrganization)\r\n\r\n    const [bloodGroup, setBloodGroup] = useState(props.data?.general?.bloodGroup);\r\n    const [height, setHeight] = useState(props.data?.general?.height);\r\n    const [weight, setWeight] = useState(props.data?.general?.weight);\r\n    const [vision, setVision] = useState(props.data?.general?.vision);\r\n    const [chestExpansion, setChestExpansion] = useState(props.data?.general?.chestExpansion);\r\n    const [bloodPressure, setBloodPressure] = useState(props.data?.general?.bp);\r\n    const [pulse, setPulse] = useState(props.data?.general?.pulse);\r\n    const [oxygenSaturation, setOxygenSaturation] = useState(props.data?.general?.oxygenSaturation);\r\n    const [bmi, setBmi] = useState(props.data?.general?.bmi);\r\n\r\n    const createItems = () => {\r\n        /** as the textbox blurs,\r\n         * create a list of\r\n         * emails with special colorizing\r\n         * and close items...\r\n\r\n        After clearing the container, fix the emails...*/\r\n        const allergies = Array.isArray(txtAllergies) ? txtAllergies.split(\",\") : [];\r\n        const content = allergies.map((item, index) => {\r\n            return (\r\n                <span key={index}>{item.trim()}</span>\r\n            )\r\n        })\r\n\r\n        setBoxContent(content || \"Selected Allergies\")\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        createItems();\r\n    }, [])\r\n\r\n    const updateMedicalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            allergies: { value: [txtAllergies] },\r\n            general: {\r\n                \"bloodGroup\": bloodGroup,\r\n                \"height\": height,\r\n                \"weight\": weight,\r\n                \"bmi\": bmi,\r\n                \"chestExpansion\": chestExpansion,\r\n                \"vision\": vision,\r\n                \"bp\": bloodPressure,\r\n                \"pulse\": pulse,\r\n                \"oxygenSaturation\": oxygenSaturation\r\n            },\r\n            managingOrganization: txtManagingOrg\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)'}}><i className=\"icofont-ui-edit\"></i> Edit Medical Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Allergies</label>\r\n                            <input\r\n                                id=\"txtAllergies\"\r\n                                className=\"form-control mb-1\"\r\n                                value={txtAllergies}\r\n                                onChange={e => {\r\n                                    setTxtAllergies(e.target.value)\r\n                                    if (e.keyCode === 13) createItems();\r\n                                }}\r\n                                onBlur={createItems}\r\n                                placeholder='Enter comma-separated values'\r\n                            />\r\n                            <div className=\"emails-box\">{boxContent}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Managing Organization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtManagingOrg\"\r\n                                value={txtManagingOrg}\r\n                                onChange={e => setTxtManagingOrg(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"ABC Healthcare\">ABC Healthcare</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>Blood Group</label>\r\n                            <select\r\n                                id=\"bloodGroup\"\r\n                                className=\"form-control\"\r\n                                value={bloodGroup}\r\n                                onChange={e => setBloodGroup(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"A+\">A+</option>\r\n                                <option value=\"A-\">A-</option>\r\n                                <option value=\"B+\">B+</option>\r\n                                <option value=\"B-\">B-</option>\r\n                                <option value=\"AB+\">AB+</option>\r\n                                <option value=\"AB-\">AB-</option>\r\n                                <option value=\"O+\">O+</option>\r\n                                <option value=\"O-\">O-</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Height (cm)</label>\r\n                            <input\r\n                                id=\"height\"\r\n                                className=\"form-control\"\r\n                                value={height}\r\n                                onChange={e => setHeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Weight (kg)</label>\r\n                            <input\r\n                                id=\"weight\"\r\n                                className=\"form-control\"\r\n                                value={weight}\r\n                                onChange={e => setWeight(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BMI</label>\r\n                            <input\r\n                                id=\"bmi\"\r\n                                className=\"form-control\"\r\n                                value={bmi}\r\n                                onChange={e => setBmi(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Chest Expansion (cm)</label>\r\n                            <input\r\n                                id=\"chestExpansion\"\r\n                                className=\"form-control\"\r\n                                value={chestExpansion}\r\n                                onChange={e => setChestExpansion(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Vision (a/b)</label>\r\n                            <input\r\n                                id=\"vision\"\r\n                                className=\"form-control\"\r\n                                value={vision}\r\n                                onChange={e => setVision(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-3\">\r\n                        <div className=\"input-group\">\r\n                            <label>BP (SYs/DIas)</label>\r\n                            <input\r\n                                id=\"bloodPressure\"\r\n                                className=\"form-control\"\r\n                                value={bloodPressure}\r\n                                onChange={e => setBloodPressure(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Pulse (BPM)</label>\r\n                            <input\r\n                                id=\"pulse\"\r\n                                className=\"form-control\"\r\n                                value={pulse}\r\n                                onChange={e => setPulse(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Oxygen Saturation (%)</label>\r\n                            <input\r\n                                id=\"oxygenSaturation\"\r\n                                className=\"form-control\"\r\n                                value={oxygenSaturation}\r\n                                onChange={e => setOxygenSaturation(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const ImageDialog = props => {\r\n\r\n    const imageSource = props.src;\r\n\r\n    //Find the image components...\r\n    const imageExtension = imageSource.toString().indexOf(\"pdf\") > -1 ? \"pdf\" : \"other\";\r\n\r\n    const dialogClass = props.setImageDisplay\r\n        ? \"dialog-background image-dialog fade\"\r\n        : \"dialog-background image-dialog\";\r\n\r\n\r\n    const extension = imageExtension;\r\n    let imageContainerDisplay;\r\n    let embedContainer;\r\n\r\n    if (extension === \"pdf\") {\r\n        embedContainer = \"embed-container\";\r\n        imageContainerDisplay = \"image-container d-none\";\r\n\r\n    } else {\r\n        embedContainer = \"embed-container d-none\";\r\n        imageContainerDisplay = \"image-container\";\r\n    }\r\n\r\n    const closeMe = () => {\r\n        props.hideImageDialog(false);\r\n    }\r\n\r\n    return (\r\n        <div className={dialogClass}>\r\n            <div className={imageContainerDisplay}>\r\n                <div className=\"image-viewer\">\r\n                    <span className=\"close\">&times;</span>\r\n                    <img\r\n                        id=\"full-image\"\r\n                        alt=\"\"\r\n                        src={imageSource}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={embedContainer}>\r\n                <embed\r\n                    src={imageSource}\r\n                    width=\"100%\"\r\n                    height=\"95%\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-row-3-1\">\r\n                <div></div>\r\n                <button\r\n                    className=\"btn-main\"\r\n                    id=\"btnClose\"\r\n                    onClick={closeMe}\r\n                    style={{ width: 300 }}\r\n                >Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// Convert file to base64 string\r\nexport const fileToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ApiPath } from '../../../assets/common/base-url';\r\nimport { fileToBase64 } from '../../../assets/common/file-to-base64';\r\n\r\nexport const PastPrescriptionsDialog = props => {\r\n\r\n    const [txtPastPrescriptions, setTxtPastPrescriptions] = useState(props.data?.pastPrescriptions.length > 1 ? props.data?.pastPrescriptions[0].records[0] : '')\r\n    const [cbxMedicines, setCbxMedicines] = useState(props.data.pastPrescriptions.length > 1 ? props.data?.pastPrescriptions[0].type : 'No')\r\n    const [txtAddMedication, setTxtAddMedication] = useState(props.data?.pastPrescriptions.length > 1 ? props.data?.pastPrescriptions[0].name : '');\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState(props.data?.pastPrescriptions.length > 1 ? props.data?.pastPrescriptions[0].description : '')\r\n\r\n    const updatePastPrescriptions = () => {\r\n\r\n        const data = {\r\n            pastPrescriptions: [{\r\n                type: cbxMedicines,\r\n                name: txtAddMedication,\r\n                records: [txtPastPrescriptions],\r\n                description: txtMedicationDescription,\r\n            }]\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Changes will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = () => {\r\n\r\n        const fileUpload = document.querySelector(\"#txtPastPrescriptions\")\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    setTxtPastPrescriptions(response.toString());\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Add/Edit Past Prescriptions</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div\r\n                        className=\"form-row\"\r\n                        style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label\r\n                            style={{ transform: 'translateY(-10px)', color: '#999' }}>\r\n                            <i className=\"icofont-drug\"></i> Past Prescriptions / Medications\r\n                        </label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>Have you taken any medicines in past?</label>\r\n                                <select\r\n                                    id=\"cbxMedicines\"\r\n                                    value={cbxMedicines}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxMedicines(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxMedicines === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Add Medication</label>\r\n                                <input\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Upload File (.pdf) (optional)</label>\r\n                                <input\r\n                                    id=\"txtPastPrescriptions\"\r\n                                    onChange={() => saveImageToBase64()}\r\n                                    className=\"form-control\"\r\n                                    accept=\".pdf\"\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxMedicines === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePastPrescriptions}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ImageDialog } from \"../../components/image-dialog\"\r\nimport { fileToBase64 } from '../../assets/common/file-to-base64';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { PastPrescriptionsDialog } from './others/past-prescriptions-dialog';\r\n\r\nexport const MedicalHistory = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [showPrescriptionsDialog, setShowPrescriptionsDialog] = useState(false);\r\n    const [showImageDialog, setShowImageDialog] = useState(false);\r\n    const [imageSource, setImageSource] = useState('');\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Medical History</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Current Medications</td>\r\n                            <td>{(props.data.currentMedications.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.currentMedications[0].records[0])\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Diagnosis Reports</td>\r\n                            <td>{(props.data.diagnosisReport.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.diagnosisReport[0].records[0])\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Past prescriptions</td>\r\n                            <td>{(props.data.pastPrescriptions.length > 0 && <button\r\n                                className=\"btn-main\"\r\n                                onClick={() => {\r\n                                    setImageSource(props.data.pastPrescriptions[0].records[3])\r\n                                    setShowImageDialog(true)\r\n                                }}\r\n                            >Preview</button>) || '-'}</td>\r\n                            <td onClick={() => setShowPrescriptionsDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <MedicalHistoryDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setImageSource={setImageSource}\r\n                setResetData={props.setResetData}\r\n                setShowImageDialog={setShowImageDialog}\r\n            />\r\n\r\n            <PastPrescriptionsDialog\r\n                showDialog={showPrescriptionsDialog}\r\n                hideDialog={() => setShowPrescriptionsDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setImageSource={setImageSource}\r\n                setResetData={props.setResetData}\r\n                setShowImageDialog={setShowImageDialog}\r\n            />\r\n\r\n            {showImageDialog &&\r\n                <ImageDialog\r\n                    mandateExtension=\"pdf\"\r\n                    src={imageSource}\r\n                    setImageDisplay={showImageDialog}\r\n                    isURL={true}\r\n                    hideImageDialog={() => setShowImageDialog(false)}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MedicalHistoryDialog = props => {\r\n    const [txtCurrentMedications, setTxtCurrentMedications] = useState(props.data.currentMedications?.length > 1 ? props.data.currentMedications[0].records[0] : '')\r\n    const [txtDiagnosisReport, setTxtDiagnosisReport] = useState(props.data.diagnosisReport?.length > 1 ? props.data?.diagnosisReport[0].records[0] : '')\r\n\r\n    const [txtAddMedication, setTxtAddMedication] = useState(props.data.currentMedications.length > 1 ? props.data?.currentMedications[0].name : '');\r\n    const [cbxIsOnMedications, setCbxIsOnMedications] = useState(props.data.currentMedications.length > 1 ? props.data?.currentMedications[0].type : 'No');\r\n    const [txtMedicationDescription, setTxtMedicationDescription] = useState(props.data.currentMedications.length > 1 ? props.data?.currentMedications[0].description : '');\r\n\r\n    const updateMedicalHistoryDetails = () => {\r\n\r\n        const data = {\r\n            currentMedications: [{\r\n                type: cbxIsOnMedications,\r\n                name: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                records: [txtCurrentMedications]\r\n            }],\r\n            diagnosisReport: [{\r\n                type: cbxIsOnMedications,\r\n                name: txtAddMedication,\r\n                description: txtMedicationDescription,\r\n                records: [txtDiagnosisReport]\r\n            }]\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const saveImageToBase64 = (val) => {\r\n\r\n        let fileUpload;\r\n\r\n        if (val === \"curr\") {\r\n            fileUpload = document.querySelector(\"#txtCurrentMedications\")\r\n        } else if (val === \"pp\") {\r\n            fileUpload = document.querySelector(\"#txtPastPrescriptions\")\r\n        } else {\r\n            fileUpload = document.querySelector(\"#txtDiagnosisReport\")\r\n        }\r\n\r\n        if (fileUpload?.files[0]?.size > 500152) {\r\n            props.showToast(\"File size cannot be more than 500kb!\", \"exclamation\")\r\n            fileUpload.files = null;\r\n            return;\r\n        }\r\n\r\n        if (fileUpload?.files[0]) {\r\n            //Ensuring that there is a file to convert\r\n            fileToBase64(fileUpload?.files[0])\r\n                .then(response => {\r\n                    switch (val) {\r\n                        case \"curr\":\r\n                            setTxtCurrentMedications(response.toString());\r\n                            break;\r\n                        case \"pp\":\r\n                            setTxtPastPrescriptions(response.toString());\r\n                            break;\r\n                        default:\r\n                            setTxtDiagnosisReport(response.toString());\r\n                            break;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        } else {\r\n            setTxtCurrentMedications(\"\");\r\n        }\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n\r\n                    <div className=\"form-row\" style={{ border: '1px solid #efefef', borderRadius: '5px', padding: '20px' }}>\r\n                        <label style={{ transform: 'translateY(-10px)', color: '#999' }}><i className=\"icofont-drug\"></i> Current Medications</label>\r\n                        <div className=\"form-row-2-1\">\r\n                            <div className='input-group'>\r\n                                <label>Are you taking any medicines at the moment?</label>\r\n                                <select\r\n                                    id=\"cbxIsOnMedications\"\r\n                                    value={cbxIsOnMedications}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setCbxIsOnMedications(e.target.value)}\r\n                                >\r\n                                    <option value=\"No\">No</option>\r\n                                    <option value=\"Yes\">Yes</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row-2\" : \"d-none\"}>\r\n                        <div className=\"input-group\">\r\n                                <label>Add Medication</label>\r\n                                <input\r\n                                    id=\"txtAddMedication\"\r\n                                    value={txtAddMedication}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtAddMedication(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label>Select File (optional)</label>\r\n                                <input\r\n                                    id=\"txtCurrentMedications\"\r\n                                    onChange={() => saveImageToBase64(\"curr\")}\r\n                                    className=\"form-control\"\r\n                                    accept=\".pdf\"\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={cbxIsOnMedications === \"Yes\" ? \"form-row\" : \"d-none\"}>\r\n                            <div className=\"input-group\">\r\n                                <label>Description (optional)</label>\r\n                                <textarea\r\n                                    id=\"txtMedicationDescription\"\r\n                                    value={txtMedicationDescription}\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setTxtMedicationDescription(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-row mt-2\">\r\n                        <div className='input-group'>\r\n                            <label>Diagnosis Report (.pdf)</label>\r\n                            <input\r\n                                id=\"txtDiagnosisReport\"\r\n                                onChange={() => saveImageToBase64(\"diag\")}\r\n                                className=\"form-control\"\r\n                                accept=\".pdf\"\r\n                                type=\"file\"\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateMedicalHistoryDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Lifestyle = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Lifestyle</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Smoking Habit</td>\r\n                            <td>{props.data?.lifeStyle?.smokingHabbit}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Alcohol Consumption</td>\r\n                            <td>{props.data?.lifeStyle?.alcoholConsumption}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Activity Level</td>\r\n                            <td>{props.data?.lifeStyle?.activityLevel}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Food Preference</td>\r\n                            <td>{props.data?.lifeStyle?.foodPreference}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <LifestyleDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LifestyleDialog = props => {\r\n\r\n    const [txtSmokingHabits, setTxtSmokingHabits] = useState(props.data.lifeStyle?.smokingHabbit)\r\n    const [txtAlcohol, setTxtAlcohol] = useState(props.data.lifeStyle?.alcoholConsumption)\r\n    const [txtActivityLevel, setTxtActivityLevel] = useState(props.data.lifeStyle?.activityLevel)\r\n    const [txtFoodPreference, setTxtFoodPreference] = useState(props.data.lifeStyle?.foodPreference)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            lifeStyle: {\r\n                \"smokingHabbit\": txtSmokingHabits,\r\n                \"alcoholConsumption\": txtAlcohol,\r\n                \"activityLevel\": txtActivityLevel,\r\n                \"foodPreference\": txtFoodPreference\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-ui-edit\"></i> Edit Medical History</h2>\r\n                </div>\r\n                <div className=\"dialog-body\" style={{ marginBottom: '20px' }}>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Smoking Habits</label>\r\n                            <select\r\n                                id=\"txtSmokingHabits\"\r\n                                value={txtSmokingHabits}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtSmokingHabits(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"I don't smoke\">I don't smoke</option>\r\n                                <option value=\"I used to, but I quit\">I used to, but I quit</option>\r\n                                <option value=\"1-2/day\">1-2/day</option>\r\n                                <option value=\"3-5/day\">3-5/day</option>\r\n                                <option value=\"5-10/day\">5-10/day</option>\r\n                                <option value=\"> 10/day\">{'> 10/day'}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Alcohol Consumption</label>\r\n                            <select\r\n                                id=\"txtAlcohol\"\r\n                                value={txtAlcohol}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtAlcohol(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Non-Drinker\">Non-Drinker</option>\r\n                                <option value=\"Rare\">Rare</option>\r\n                                <option value=\"Social\">Social</option>\r\n                                <option value=\"Regular\">Regular</option>\r\n                                <option value=\"Heavy\">Heavy</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Activity Level</label>\r\n                            <select\r\n                                id=\"txtActivityLevel\"\r\n                                value={txtActivityLevel}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtActivityLevel(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Sedentary (Low)\">Sedentary (Low)</option>\r\n                                <option value=\"Moderately Active (Normal)\">Moderately Active (Normal)</option>\r\n                                <option value=\"Active (High)\">Active (High)</option>\r\n                                <option value=\"Athletic (Very High)\">Athletic (Very High)</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Food Preference</label>\r\n                            <select\r\n                                id=\"txtFoodPreference\"\r\n                                value={txtFoodPreference}\r\n                                className=\"form-control\"\r\n                                onChange={e => setTxtFoodPreference(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Vegetarian\">Vegetarian</option>\r\n                                <option value=\"Non-Vegetarian\">Non-Vegetarian</option>\r\n                                <option value=\"Eggetarian\">Eggetarian</option>\r\n                                <option value=\"Vegan\">Vegan</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const toTimestamp = (year,month,day,hour,minute,second) => {\r\n    var datum = new Date(Date.UTC(year,month-1,day,hour,minute,second));\r\n    return datum.getTime()/1000;\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { ApiPath, CryptoApiPath } from '../assets/common/base-url';\r\nimport { toTimestamp } from '../assets/common/operations';\r\n\r\n\r\nexport const DoctorsDialog = props => {\r\n\r\n    const today = new Date();\r\n    const [cbxSpeciality, setCbxSpeciality] = useState('Allergist')\r\n    const [doctorsData, setDoctorsData] = useState('')\r\n    const [selectedDoctor, setSelectedDoctor] = useState('')\r\n    const [txtDate, setTxtDate] = useState(today.getFullYear() + \"-\" + today.getMonth() + 1 + \"-\" + today.getDate());\r\n    const [spanValue, setSpanValue] = useState(1);\r\n    const [timeOfCommenement, setTimeOfCommencement] = useState([])\r\n\r\n    //The componentDidMount equivalent...\r\n    //Fetch the doctors list...\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        //To set the actual timing for the time of commencement\r\n        const splitDate = txtDate.split(\"-\")\r\n        const dateArray = [splitDate[0], splitDate[1], splitDate[2]]\r\n\r\n        switch (spanValue) {\r\n            case 1:\r\n                setTimeOfCommencement([...dateArray, '11', '00', '00'])\r\n                break;\r\n            case 2:\r\n                setTimeOfCommencement([...dateArray, '14', '00', '00'])\r\n                break;\r\n            default:\r\n                setTimeOfCommencement([...dateArray, '20', '00', '00'])\r\n                break;\r\n        }\r\n\r\n        console.log(timeOfCommenement);\r\n\r\n    }, [spanValue])\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    const selectDoctor = () => {\r\n        //Call api to schedule appointment...\r\n        //Get the details of the doctor in question...\r\n        if (cbxSpeciality === \"\" || txtDate === \"\") {\r\n            props.showToast(\"You must select both doctor's speciality and date to proceed.\", \"exclamation\");\r\n            return;\r\n        }\r\n\r\n        const thisDoctor = doctorsData.find(item => item.uidNo === selectedDoctor)\r\n\r\n        // // const payLoad = {\r\n        // //     doctor_id: thisDoctor.uidNo,\r\n        // //     doctor_name: thisDoctor.name,\r\n        // //     doctor_email_id: thisDoctor.email || 'somedoctor@mailer.com',\r\n        // //     patient_id: props.data.uidNo,\r\n        // //     patient_name: props.data.name,\r\n        // //     patient_email_id: props.data.emailId || 'somepatient@gmail.com',\r\n        // //     starttime: toTimestamp(...timeOfCommenement),\r\n        // //     duration: 0.75 * 60 * 60,\r\n\r\n        // // }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        const input1 = `doctor_id=${thisDoctor.uidNo}&doctor_name=${thisDoctor.name}&doctor_email_id=${thisDoctor.email || 'somedoctor@mailer.com'}&`;\r\n        const input2 = `patient_id=${props.data.uidNo}&patient_name=${props.data.name}&patient_email_id=${props.data.emailId || 'somepatient@gmail.com'}&`;\r\n        const input3 = `starttime=${toTimestamp(...timeOfCommenement)}&duration=${0.75 * 60 * 60}`\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            'method': 'POST',\r\n            // 'body': JSON.stringify(payLoad),\r\n        }\r\n\r\n        fetch(`${CryptoApiPath}scheduleAppointment?${input1}${input2}${input3}`, options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    //Did a proper scheduling...\r\n                    //Get the parameters...\r\n                    props.setIsLoaderVisible(false);\r\n\r\n                    props.setSpecialObject({\r\n                        speciality: cbxSpeciality,\r\n                        startTime: toTimestamp(...timeOfCommenement),\r\n                        duration: 0.75 * 60,\r\n                        meetingID: response.result?.meeting_id,\r\n                        doctor_id: thisDoctor.uidNo,\r\n                        doctor_name: thisDoctor.name\r\n                    })\r\n\r\n                    //Set other parameters...\r\n                    props.setDoctorSelected(selectedDoctor)\r\n                    props.hideDoctorsDialog();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err, \"exclamation\");\r\n            })\r\n\r\n    }\r\n\r\n    const doctorsArray = doctorsData && doctorsData.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                key={index}\r\n                selectedDoctor={selectedDoctor}\r\n                setSelectedDoctor={setSelectedDoctor}\r\n                id={item.uidNo}\r\n                src={item.photo}\r\n                name={item.name}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                rating={4.3}\r\n                spanValue={spanValue}\r\n                setSpanValue={setSpanValue}\r\n\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"dialog-background fade\">\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}>\r\n                        <i className='icofont-doctor-alt'></i> Select a Doctor\r\n                    </h2>\r\n                </div>\r\n                <div className=\"dialog-body mb-2\">\r\n                    <div className='form-row-3'>\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxSpeciality\"\r\n                                value={cbxSpeciality}\r\n                                onChange={e => setCbxSpeciality(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"Allergist\">Allergist</option>\r\n                                <option value=\"Cardiologist\">Cardiologist</option>\r\n                                <option value=\"Dermatologist\">Dermatologist</option>\r\n                                <option value=\"Endocrinologist\">Endocrinologist</option>\r\n                                <option value=\"Gastroenterologist\">Gastroenterologist</option>\r\n                                <option value=\"Geriatrician\">Geriatrician</option>\r\n                                <option value=\"Nephrologist\">Nephrologist</option>\r\n                                <option value=\"Neurologist\">Neurologist</option>\r\n                                <option value=\"OB/GYN\">OB/GYN</option>\r\n                                <option value=\"Ophthalmologist\">Ophthalmologist</option>\r\n                                <option value=\"Pediatrician\">Pediatrician</option>\r\n                                <option value=\"Psychiatrist\">Psychiatrist</option>\r\n                                <option value=\"Urologist\">Urologist</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Choose Date</label>\r\n                            <input\r\n                                className='form-control'\r\n                                type='date'\r\n                                id='txtDate'\r\n                                value={txtDate}\r\n                                onChange={e => setTxtDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Wallet Balance</label>\r\n                            <input\r\n                                className='form-control'\r\n                                value=\"123 HTRAX\"\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='doctors-list-container'>\r\n                            {doctorsArray}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        onClick={selectDoctor}\r\n                        className=\"btn-main mr-1\"\r\n                    ><i className=\"icofont-doctor\"></i> Choose Doctor\r\n                    </button>\r\n                    <button\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDoctorsDialog()}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n            Doctors Dialog\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DoctorsListItem = props => {\r\n\r\n    const [spanValue, setSpanValue] = useState(1);\r\n    const [selDoctor, setSelDoctor] = useState('');\r\n\r\n    const randomValue = useRef(Math.floor(Math.random() * 9))\r\n\r\n    return (\r\n        <div className={selDoctor === props.id ? 'doctor-area selected' : 'doctor-area'}>\r\n            <div className=\"chosen-doctor\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                {/* <p><span>♥</span>{props.rating}</p> */}\r\n                <div className=\"details\">\r\n                    <h3>{props.name}</h3>\r\n                    <p>{props.specialization}</p>\r\n                    <div>\r\n                        <span className={spanValue === 1 ? 'blue' : ''} onClick={() => setSpanValue(1)}>\r\n                            11:00 - 11:45\r\n                        </span>\r\n                        <span className={spanValue === 2 ? 'blue' : ''} onClick={() => setSpanValue(2)}>\r\n                            14:00 - 14:45\r\n                        </span>\r\n                        <span className={spanValue === 3 ? 'blue' : ''} onClick={() => setSpanValue(3)}>\r\n                            20:00 - 20:45\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"schedule\">\r\n                        <p><i className='icofont-clock-time'></i>{' Choose Schedule (UTC)'}</p>\r\n                        <button\r\n                            style={{ float: 'right', marginTop: '10px' }}\r\n                            className=\"btn-main\"\r\n                            onClick={() => {\r\n                                setSelDoctor(props.id)\r\n                                props.setSelectedDoctor(props.id)\r\n                                props.setSpanValue(spanValue)\r\n\r\n                            }}\r\n                        ><i className='icofont-check-circled' /> Select Doctor\r\n                        </button>\r\n\r\n                    </div>\r\n                    <div className='costing'>\r\n                        <p><i className='icofont-bitcoin'></i> 1.{randomValue.current} HTRAX</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const SplitDate = (longDate) => {\r\n    const dateParts = longDate ? longDate?.toString().split(\"T\") : [\"-\", \"-\"];\r\n    const dateSplit = dateParts[0].split(\"-\");\r\n\r\n    const waDate = longDate\r\n        ? `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`\r\n        : \"-\";\r\n    const shortCodedDate = (longDate)\r\n        ? `${dateSplit[2]}${dateSplit[1]}${dateSplit[0].substring(2)}`\r\n        : \"-\";\r\n\r\n    return ({\r\n        \"date\": waDate,\r\n        \"time\": waDate !== \"-\" ? waDate.substring(0, 8) : \"\",\r\n        \"dateTime\": longDate ? `${waDate} ${dateParts[1].substring(0, 8)}` : waDate,\r\n        \"codedDate\": shortCodedDate,\r\n    });\r\n}\r\n\r\nexport const ShortDateToCoded = (shortDate) => {\r\n    /**\r\n     * Converts the date\r\n     * to a 6-digit\r\n     * short format\r\n     */\r\n    const splitDate = shortDate ? shortDate.split(\"-\") : [\"-\", \"-\"]\r\n    return (\r\n        splitDate[2] + splitDate[1] + splitDate[0].substring(2)\r\n    )\r\n}\r\n\r\nfunction formatDate(val) {\r\n    if (val < 10) {\r\n        return `0${val}`\r\n    } else {\r\n        return `${val}`\r\n    }\r\n}\r\n\r\nexport const SplitDateFromTimestamp = timeStamp => {\r\n    const longDate = new Date(parseInt(timeStamp));\r\n\r\n    const waDate = formatDate(longDate.getDate()) +\r\n          \"/\" + formatDate(longDate.getMonth() + 1) +\r\n          \"/2022\" + //longDate.getFullYear() +\r\n          \" \" + formatDate(longDate.getHours()) +\r\n          \":\" + formatDate(longDate.getMinutes()) +\r\n          \":\" + formatDate(longDate.getSeconds())\r\n\r\n    return ({\r\n        \"date\": waDate.split(\" \")[0],\r\n        \"time\": waDate.split(\" \")[1],\r\n        \"dateTime\": waDate,\r\n\r\n    });\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { DoctorsDialog } from './doctors-dialog';\r\nimport { ApiPath } from '../assets/common/base-url';\r\nimport { SplitDateFromTimestamp } from '../assets/common/split-date';\r\n\r\nconst ScheduleAppointment = props => {\r\n\r\n    const [doctorSelected, setDoctorSelected] = useState('')\r\n    const [showDoctorDialog, setShowDoctorDialog] = useState(false);\r\n    const [doctorsData, setDoctorsData] = useState({})\r\n\r\n    const [txtPatientsInstruction, setTxtPatientsInstruction] = useState('')\r\n    const [txtSupportingInfo, setTxtSupportingInfo] = useState('')\r\n    const [fileConsent, setFileConsent] = useState('')\r\n    const [specialObject, setSpecialObject] = useState('')\r\n\r\n    const scheduleAppointment = () => {\r\n        //Use the endpoint for the appointment scheduling\r\n        const payLoad = {\r\n            \"meetingId\": specialObject.meetingID,\r\n            \"speciality\": specialObject.speciality,\r\n            \"startTIme\": specialObject.startTime,\r\n            \"duration\": specialObject.duration,\r\n            \"patientInstruction\": txtPatientsInstruction,\r\n            \"patientId\": props.data.uidNo,\r\n            \"doctorId\": specialObject.doctor_id,\r\n            \"supportingInfo\": {\r\n                \"filesConsent\": fileConsent\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(payLoad),\r\n        }\r\n\r\n        fetch(ApiPath + \"appointment/bookAppointment\", options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                if (response.status === \"success\") {\r\n                    //Success message\r\n                    props.showToast(\"Appointment with doctor scheduled successfully!\", \"success\");\r\n\r\n                    props.setAppointmentBooked()\r\n                    props.hideAppointmentDialog();\r\n                    props.setScheduleObject({...payLoad, \"doctor_name\": specialObject.doctor_name})\r\n                }\r\n            })\r\n\r\n\r\n}\r\n\r\n//Fetch the data on form load...\r\nconst params = {\r\n    'headers': {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n    },\r\n    'method': 'GET',\r\n}\r\n\r\nuseEffect(() => {\r\n    //Use the selected doctor to reload the doctor's profile and hsow data here...\r\n\r\n    if (doctorSelected) {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/search/\" + doctorSelected, params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n\r\n        //Alwasy remember to reset this so that we dont have an infinite loop\r\n        setDoctorSelected(false);\r\n    }\r\n\r\n}, [doctorSelected])\r\n\r\nreturn (\r\n    <>\r\n        <div className=\"dialog-background fade\">\r\n            <div className=\"dialog-container\" style={{ width: '800px' }}>\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully\" style={{ color: 'var(--bluish)' }}><i className=\"icofont-stopwatch\"></i> Schedule Appointment</h2>\r\n                </div>\r\n                <div className=\"dialog-body\">\r\n\r\n                    <div className='form-row-1-2'>\r\n                        <div className='input-group'>\r\n                            <label>Choose Doctor</label>\r\n                            <button\r\n                                className=\"btn-main-outline\"\r\n                                onClick={() => setShowDoctorDialog(true)}\r\n                            >Browse for Doctor...\r\n                            </button>\r\n                        </div>\r\n                        <div className='doctor-area'>\r\n                            <div className={doctorSelected !== '' ? 'chosen-doctor' : 'd-none'}>\r\n                                <img src='/portfolio/team-4.jpg' alt='' />\r\n                                <div className=\"details\">\r\n                                    <h3>{doctorsData && \"Dr. \" + doctorsData.name}</h3>\r\n                                    <p>{doctorsData?.specialization?.certification}</p>\r\n                                    <div>\r\n                                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center'}}><i className='icofont-clock-time' /></span>\r\n                                        <span>{specialObject !== '' && SplitDateFromTimestamp(specialObject.startTime).dateTime}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={doctorSelected === '' ? 'no-doctor-yet' : 'd-none'}>\r\n                                <img src='/res/doctor.png' alt='' width={50} />\r\n                                <h2>No Doctor Chosen yet...</h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row mb-2 mt-2\" style={{ borderBottom: '2px solid var(--light-golden-rod)' }}>\r\n\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='input-group'>\r\n                            <label>Allow Doctor to view my files?</label>\r\n                            <select\r\n                                id=\"fileConsent\"\r\n                                value={fileConsent}\r\n                                className='form-control'\r\n                                onChange={e => setFileConsent(e.target.value)}\r\n                            >\r\n                                <option value=\"No\">No</option>\r\n                                <option value=\"Yes\">Yes</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row-2'>\r\n                        <div className='input-group'>\r\n                            <label>Patients Instructions</label>\r\n                            <textarea\r\n                                id='txtPatientsInstruction'\r\n                                value={txtPatientsInstruction}\r\n                                onChange={e => setTxtPatientsInstruction(e.target.value)}\r\n                                rows={3}\r\n                                className='form-control'\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Supporting Info</label>\r\n                            <textarea\r\n                                id='txtSupportingInfo'\r\n                                value={txtSupportingInfo}\r\n                                onChange={e => setTxtSupportingInfo(e.target.value)}\r\n                                rows={3}\r\n                                className='form-control'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        onClick={scheduleAppointment}\r\n                        className=\"btn-main mr-1\"\r\n                    ><i className=\"icofont-checked\"></i> Schedule\r\n                    </button>\r\n                    <button\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideAppointmentDialog()}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n            showDoctorDialog && <DoctorsDialog\r\n                showToast={props.showToast}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                hideDoctorsDialog={() => setShowDoctorDialog(false)}\r\n                setDoctorSelected={setDoctorSelected}\r\n                data={props.data}\r\n                setSpecialObject={setSpecialObject}\r\n\r\n            />\r\n        }\r\n\r\n    </>\r\n);\r\n}\r\n\r\nexport default ScheduleAppointment;\r\n","import { Header } from \"../components/header\";\r\nimport { PatientTabHeaders } from \"./tab-pages/patient-tab-headers\";\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Contact } from \"./tab-pages/contact\";\r\nimport { Personal } from \"./tab-pages/personal\"\r\nimport { Medical } from \"./tab-pages/medical\";\r\nimport { MedicalHistory } from \"./tab-pages/medical-history\";\r\nimport { Lifestyle } from \"./tab-pages/lifestyle\";\r\nimport { ApiPath, CryptoApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport ScheduleAppointment from \"../appointments/schedule-appointment\";\r\nimport { toTimestamp } from \"../assets/common/operations\";\r\nimport { SplitDateFromTimestamp } from \"../assets/common/split-date\";\r\n\r\nconst Patients = props => {\r\n\r\n    const [scheduleObject, setScheduleObject] = useState('');\r\n\r\n    const [patientsData, setPatientsData] = useState('');\r\n    const [doctorData, setDoctorData] = useState({})\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n    const [picture, setPicture] = useState();\r\n    const [appointmentBooked, setAppointmentBooked] = useState(false);\r\n    const [showAppointmentDialog, setShowAppointmentDialog] = useState(false)\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const refPicture = useRef();\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        //Set loading at this point...\r\n        props.setIsLoaderVisible(true);\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err, \"exclamation\");\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    function objToString(obj) {\r\n        return Object.entries(obj).reduce((str, [p, val]) => {\r\n            return `${str}${p}::${val}\\n`;\r\n        }, '');\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        resetData && setTimeout(() => {\r\n\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setPatientsData(res.data);\r\n                        setPicture(res.data.photo);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }, 5000)\r\n\r\n    }, [resetData])\r\n\r\n\r\n    //Also, always check to see if the appointment has been booked...\r\n    const checkAppointmentBooked = () => {\r\n        //Remember, that this should be for\r\n        // year, month, day, hour, minute, second\r\n        const timeValueOfToday = toTimestamp('2022', '01', '11', '00', '00', '00');\r\n        const timeValueOf3MonthsTime = toTimestamp('2022', '04', '30', '00', '00', '00');\r\n\r\n        //Set other parameters...\r\n        const input1 = `starttime=${timeValueOfToday}&endtime=${timeValueOf3MonthsTime}`;\r\n        const options = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            'method': 'GET',\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(`${CryptoApiPath}getMeetingList?${input1}`, options)\r\n            .then(response => (response.json()))\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response.status === 200) {\r\n                    //Retrieve the result...\r\n                    const result = response.result?.find(item => item.patient_id === patientsData.uidNo)\r\n\r\n                    //Set other parameters...\r\n                    setDoctorData(result)\r\n\r\n                    console.log(result);\r\n\r\n                }\r\n            })\r\n            .catch(err => {\r\n                props.showToast(err, \"exclamation\");\r\n            })\r\n    }\r\n\r\n    //useEffect(() => checkAppointmentBooked(), [appointmentBooked])\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"patient/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(`Update Successful! Will be fully effected in about 5 secs`, 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                    //refPicture.current = picture;\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={picture || \"/portfolio/avatar.png\"}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Patient</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{patientsData.name}</h2>\r\n                        <h4 className=\"d-none\"><i className=\"icofont-location-pin\"></i>{props.data?.address && props.data.address[0]?.city}, {props.data?.address && props.data.address[0]?.state}</h4>\r\n                    </div>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Upcoming Appointment</h4>\r\n                        </div>\r\n                        {appointmentBooked ? <div className=\"appointment\">\r\n                            <div className=\"details\">\r\n                                <h2>{scheduleObject !== '' && `Dr. ${scheduleObject.doctor_name}`}</h2>\r\n                                <h3>Available</h3>\r\n                                <h4><i className=\"icofont-clock-time\" /> {SplitDateFromTimestamp(scheduleObject?.startTIme).dateTime}</h4>\r\n                                <h4>Meeting Link: <a\r\n                                    href={scheduleObject !== '' && scheduleObject?.meetingId}\r\n                                    target='_blank'>\r\n                                    {scheduleObject !== '' && scheduleObject?.meetingId}\r\n                                </a></h4>\r\n                            </div>\r\n                            <img src=\"/portfolio/team-3.jpg\" />\r\n                        </div>\r\n                            : <div className=\"book-appointment\">\r\n                                <h4>You do not have any upcoming appointment!</h4>\r\n                                <button\r\n                                    className=\"btn-main\"\r\n                                    onClick={() => {\r\n                                        setShowAppointmentDialog(true)\r\n                                    }}\r\n                                >Book an Appointment...\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <PatientTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 3 && <Medical\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 4 && <MedicalHistory\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                    {selectedTab === 5 && <Lifestyle\r\n                        setResetData={setResetData}\r\n                        data={patientsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                        setPatientsData={setPatientsData}\r\n                    />}\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                showAppointmentDialog && <ScheduleAppointment\r\n                    data={patientsData}\r\n                    showToast={props.showToast}\r\n                    setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    setAppointmentBooked={() => setAppointmentBooked(true)}\r\n                    hideAppointmentDialog={() => setShowAppointmentDialog(false)}\r\n                    setScheduleObject={setScheduleObject}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;","\r\nexport const DoctorsTabHeaders = (props) => {\r\n\r\n    return (\r\n        <div className=\"tab-container\">\r\n            <div\r\n                className={props.selectedTab === 2 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(2)}\r\n            >\r\n                <i className=\"icofont-doctor\"></i>Personal\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 1 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(1)}\r\n            >\r\n                <i className=\"icofont-tasks-alt\"></i>Contact\r\n            </div>\r\n            <div\r\n                className={props.selectedTab === 3 ? \"tab active\" : \"tab\"}\r\n                onClick={() => props.setSelectedTab(3)}\r\n            >\r\n                <i className=\"icofont-karate\"></i>Portfolio\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Personal = props => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Personal Information</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{props.data?.name}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>{props.data?.gender}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>{props.data?.birthDate}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pref. Language</td>\r\n                            <td>{props.data?.communicationLang?.languagePref}</td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <PersonalDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                setResetData={props.setResetData}\r\n                data={props.data}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonalDialog = props => {\r\n\r\n    const [fullName, setFullName] = useState(props.data?.name);\r\n    const [cbxGender, setCbxGender] = useState(props.data.gender)\r\n    const [txtBirthDate, setTxtBirthDate] = useState(props.data.birthDate)\r\n    const [txtLanguage, setTxtLanguage] = useState(props.data?.communicationLang?.languagePref)\r\n\r\n    const updatePersonalDetails = () => {\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            name: fullName,\r\n            birthDate: txtBirthDate,\r\n            gender: cbxGender,\r\n            communicationLang: {\r\n                \"languageCode\": \"101\",\r\n                \"languagePref\": txtLanguage,\r\n            },\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Personal Information</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                        <label>Fullname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"fullName\"\r\n                                value={fullName}\r\n                                onChange={e => setFullName(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2\">\r\n                        <div className='input-group'>\r\n                            <label>Gender</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"cbxGender\"\r\n                                value={cbxGender}\r\n                                onChange={e => setCbxGender(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='input-group'>\r\n                            <label>Date of Birth</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"txtBirthDate\"\r\n                                value={txtBirthDate}\r\n                                onChange={e => setTxtBirthDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Preferred Language</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"txtLanguage\"\r\n                                value={txtLanguage}\r\n                                onChange={e => setTxtLanguage(e.target.value)}\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"English\">English</option>\r\n                                <option value=\"Hindu\">Hindu</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updatePersonalDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-page-content\">\r\n                <div className=\"page-header\">\r\n                    <h2>Contact Information</h2>\r\n                </div>\r\n                <div className=\"page-body\">\r\n                    <table className=\"profile-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{props.data?.phoneNumber}</td>\r\n                                <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td>{props.data.address}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>E-mail</td>\r\n                                <td>{props.data.emailAddress}</td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ContactDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst ContactDialog = props => {\r\n\r\n    const [txtPhone, setTxtPhone] = useState(props.data.phoneNumber);\r\n    const [txtAddress, setTxtAddress] = useState(props.data.address ? [...props.data.address] : \"\");\r\n    const [txtEmail, setTxtEmail] = useState(props.data?.emailAddress);\r\n\r\n    const updateContact = () => {\r\n        const data = {\r\n            address: [txtAddress],\r\n            emailAddress: txtEmail,\r\n            phoneNumber: txtPhone,\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-contacts\"></i> Edit Contact Details</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Phone</label>\r\n                            <input\r\n                                id=\"txtPhone\"\r\n                                value={txtPhone}\r\n                                onChange={e => setTxtPhone(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"tel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Address</label>\r\n                            <textarea\r\n                                id=\"txtAddress\"\r\n                                value={txtAddress}\r\n                                onChange={e => setTxtAddress(e.target.value)}\r\n                                rows={3}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Email</label>\r\n                            <input\r\n                                id=\"txtEmail\"\r\n                                value={txtEmail}\r\n                                onChange={e => setTxtEmail(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={() => updateContact()}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\n\r\nexport const Portfolio = (props) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const specialization = props.data.specialization.certification\r\n        ? `${props.data?.specialization?.certification}, ${props.data?.specialization?.type}`\r\n        : \"\";\r\n\r\n    const license = props.data.license.certification\r\n        ? `${props.data?.license?.certification} - ${props.data?.license?.issueDate}`\r\n        : \"\";\r\n\r\n    return (\r\n        <div className=\"tab-page-content\">\r\n            <div className=\"page-header\">\r\n                <h2>Qualifications and Specializations</h2>\r\n            </div>\r\n            <div className=\"page-body\">\r\n                <table className=\"profile-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Qualification</td>\r\n                            <td>{props.data?.qualification && [...props.data?.qualification]}</td>\r\n                            <td onClick={() => setShowDialog(true)}><i className=\"icofont-ui-edit\"></i> edit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Specialization</td>\r\n                            <td>{specialization}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>License</td>\r\n                            <td>{license}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <PortfolioDialog\r\n                showDialog={showDialog}\r\n                hideDialog={() => setShowDialog(false)}\r\n                setIsLoaderVisible={props.setIsLoaderVisible}\r\n                showToast={props.showToast}\r\n                data={props.data}\r\n                setResetData={props.setResetData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PortfolioDialog = props => {\r\n    const [txtQualification, setTxtQualification] = useState(props.data.qualification ? [...props.data?.qualification] : '')\r\n    const [txtSpecialization, setTxtSpecialization] = useState(props.data?.specialization?.certification)\r\n    const [txtSpecializationType, setTxtSpecializationType] = useState(props.data?.specialization?.type)\r\n    const [txtLicense, setTxtLicense] = useState(props.data?.license?.certification)\r\n    const [txtLicenseIssueDate, setTxtLicenseIssueDate] = useState(props.data?.license?.issueDate)\r\n\r\n    const updateLifestyleDetails = () => {\r\n        const data = {\r\n            qualification: [txtQualification],\r\n            license: {\r\n                certification: txtLicense,\r\n                issueDate: txtLicenseIssueDate\r\n            },\r\n            specialization: {\r\n                certification: txtSpecialization,\r\n                type: txtSpecializationType\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"PUT\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    props.setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    const displayDialog = props.showDialog ? \"dialog-background fade\" : \"dialog-background\";\r\n\r\n    return (\r\n        <div className={displayDialog}>\r\n            <div className=\"dialog-container\">\r\n                <div className=\"dialog-header\">\r\n                    <h2 className=\"nully main\"><i className=\"icofont-ui-edit\"></i> Edit Portfolio</h2>\r\n                </div>\r\n                <div className=\"dialog-body main\">\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className='input-group'>\r\n                            <label>Qualification</label>\r\n                            <textarea\r\n                                id=\"txtQualification\"\r\n                                value={txtQualification}\r\n                                onChange={e => setTxtQualification(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>Specialization</label>\r\n                            <textarea\r\n                                id=\"txtSpecialization\"\r\n                                value={txtSpecialization}\r\n                                onChange={e => setTxtSpecialization(e.target.value)}\r\n                                className=\"form-control\"\r\n                                rows={3}\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Specialization - Type</label>\r\n                            <input\r\n                                id=\"txtSpecializationType\"\r\n                                value={txtSpecializationType}\r\n                                onChange={e => setTxtSpecializationType(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row-2-1\">\r\n                        <div className='input-group'>\r\n                            <label>License</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"txtLicense\"\r\n                                value={txtLicense}\r\n                                onChange={e => setTxtLicense(e.target.value)}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className='input-group'>\r\n                            <label>Issue Date</label>\r\n                            <input\r\n                                id=\"txtLicenseIssueDate\"\r\n                                value={txtLicenseIssueDate}\r\n                                onChange={e => setTxtLicenseIssueDate(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialog-footer main\">\r\n                    <button\r\n                        id=\"btnUpdate\"\r\n                        className=\"btn-main mr-1\"\r\n                        onClick={updateLifestyleDetails}\r\n                    >Update\r\n                    </button>\r\n                    <button\r\n                        id=\"btnCancel\"\r\n                        className=\"btn-main-outline\"\r\n                        onClick={() => props.hideDialog()}\r\n                    >Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../components/header\";\r\nimport { DoctorsTabHeaders } from \"./tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../assets/common/base-url\";\r\nimport { fileToBase64 } from \"../assets/common/file-to-base64\";\r\nimport { Portfolio } from \"./tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n    const [picture, setPicture] = useState(doctorsData.photo);\r\n    const [outputText, setOutputText] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        fileToBase64(file)\r\n            .then(response => {\r\n                setPicture(response.toString());\r\n                setOutputText(file.name);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const updatePicture = () => {\r\n        //Update the picture...\r\n        //update just the personal details contained here...\r\n        const data = {\r\n            'photo': picture,\r\n        }\r\n\r\n        const options = {\r\n            'method': \"PUT\",\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            }\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"doctor/profileUpdate\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = sessionStorage.getItem(\"id_val\")\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dropZone = document.querySelector('.upload-file-area');\r\n        const fileInput = document.getElementById('uploadFile');\r\n\r\n        dropZone.addEventListener('dragover', e => {\r\n            // we must preventDefault() to let the drop event fire\r\n            e.preventDefault();\r\n\r\n        });\r\n\r\n        dropZone.addEventListener('drop', e => {\r\n            e.preventDefault();\r\n            // drag/drop files are in event.dataTransfer\r\n            let files = e.dataTransfer.files;\r\n            fileInput.files = files;\r\n            const file = fileInput.files[0];\r\n\r\n            fileToBase64(file)\r\n                .then(response => {\r\n                    setPicture(response.toString());\r\n                    setOutputText(file.name);\r\n                })\r\n                .catch(err => {\r\n                    props.showToast(err);\r\n                })\r\n\r\n        });\r\n\r\n        return () => {\r\n\r\n            dropZone.removeEventListener('dragover', e => {\r\n                // we must preventDefault() to let the drop event fire\r\n                e.preventDefault();\r\n            });\r\n\r\n            dropZone.removeEventListener('drop', e => {\r\n                e.preventDefault();\r\n                // drag/drop files are in event.dataTransfer\r\n                let files = e.dataTransfer.files;\r\n                fileInput.files = files;\r\n                console.log(`added ${files.length} files`);\r\n            });\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (resetData) {\r\n            props.setIsLoaderVisible(true);\r\n\r\n            fetch(ApiPath + \"query/search/\" + idValue, params)\r\n                ?.then(response => (response.json()))\r\n                .then(res => {\r\n                    props.setIsLoaderVisible(false)\r\n\r\n                    if (res.statusCode === 200) {\r\n                        setDoctorsData(res.data);\r\n                        setPicture(res.data.photo);\r\n\r\n                    } else {\r\n                        props.showToast(res.message, 'exclamation');\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    props.setIsLoaderVisible(false);\r\n                    props.showToast(err.message, 'exclamation');\r\n                })\r\n\r\n            //Always remember to reset the data...\r\n            setResetData(false);\r\n\r\n        }\r\n\r\n    }, [resetData])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n            <div className=\"body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo === \"\" ? \"/portfolio/team-4.jpg\" : picture}\r\n                            width='100%'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                    <div className=\"line-container\">\r\n                        <h4><i className=\"icofont-double-right\"></i>Doctor</h4>\r\n                    </div>\r\n                    <div className=\"lower-left upload-file-area mb-2\">\r\n                        <button className=\"btn-main btn-upload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"uploadFile\"\r\n                                id=\"uploadFile\"\r\n                                accept={\".png, .jpg, .jpeg\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            Change Profile Picture...\r\n                        </button>\r\n                        <label><span>Attached File: </span>{outputText}</label>\r\n                    </div>\r\n                    <div className=\"lower-left\">\r\n                        <button\r\n                            className={picture ? \"btn-main\" : \"d-none\"}\r\n                            id=\"btnUploadPix\"\r\n                            onClick={updatePicture}>\r\n                            <i className=\"icofont-upload-alt\"></i> Update Profile Picture\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"title\">\r\n                        <h2>{doctorsData.name}</h2>\r\n                        <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4>\r\n                    </div>\r\n                    <h3>{doctorsData.specialization?.certification}</h3>\r\n\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { ApiPath } from '../assets/common/base-url';\r\n\r\n\r\nexport const DoctorsLogin = props => {\r\n\r\n    const { showToast, setIsLoaderVisible } = props;\r\n\r\n    const [txtDoctorsID, setTxtDoctorsID] = useState(\"\");\r\n    const [txtPhone, setTxtPhone] = useState(\"\");\r\n    const [txtPassword, setTxtPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const tryLogin = () => {\r\n        //Try logging in...\r\n        const data = {\r\n            loginId: txtPhone,\r\n            role: \"Doctor\",\r\n            validatedbyotp: \"true\"\r\n        }\r\n\r\n        const options = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n            },\r\n            'method': 'POST',\r\n            'body': JSON.stringify(data),\r\n        }\r\n\r\n        setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"login\", options)\r\n            ?.then(response => (response.json()))\r\n            .then(response => {\r\n\r\n                setIsLoaderVisible(false);\r\n\r\n                if (response.statusCode === 200 && response.uidNo === txtDoctorsID) {\r\n                    //Proceed to the doctors page...\r\n                    sessionStorage.setItem('token', response.token)\r\n                    sessionStorage.setItem(\"id_val\", response.uidNo)\r\n                    history.push(\"/doctors/profile\");\r\n\r\n                } else {\r\n                    showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoaderVisible(false);\r\n                showToast(err.message, 'exclamation');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"container-divider\">\r\n                    <div className=\"left-sidebar\" style={{ minHeight: '100vh' }} >\r\n                        <img src=\"../mah-logo.png\" />\r\n\r\n                        <div className=\"left-text\">\r\n                            <h2><i className=\"icofont-check-circled\"></i> Doctors' Login!</h2>\r\n\r\n                            <h4>Enter your details</h4>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtDoctorsID\"\r\n                                        value={txtDoctorsID}\r\n                                        onChange={e => setTxtDoctorsID(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                        placeholder='Doctor ID'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtPhone\"\r\n                                        value={txtPhone}\r\n                                        onChange={e => setTxtPhone(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        maxLength={14}\r\n                                        placeholder='Registered Phone Number'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        id=\"txtPassword\"\r\n                                        value={txtPassword}\r\n                                        onChange={e => setTxtPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        autoComplete='off'\r\n                                        placeholder='Password'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <h5>By continuing, you agree to our</h5>\r\n                            <Link to=\"/\">Terms and conditions</Link>\r\n\r\n                            <button\r\n                                id=\"btnLogin\"\r\n                                className=\"btn-continue\"\r\n                                onClick={tryLogin}   //Show 2fa page...\r\n                            >Login</button>\r\n                            <div className=\"doctor-register\">\r\n                                <h4>Are you a new user? <Link to=\"/register\">Register here</Link></h4>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"left-footer\" style={{ display: 'none' }}>\r\n                            <p>Certified and secure online healthcare platform</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-sidebar\">\r\n                        <img src=\"../doctors.svg\" />\r\n                        <div className=\"image-text\">\r\n                            <p>India's top doctors to guide you to better health everyday</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","export const Cards = (props) => {\r\n    return (\r\n        <div className=\"s-card\">\r\n            <div>\r\n                <div className=\"numbers\">{props.numbers}</div>\r\n                <div className=\"cardName\">{props.totalCases}</div>\r\n            </div>\r\n            <div className=\"iconBox\">\r\n                <i className={props.icofontClass} aria-hidden=\"true\"></i>\r\n                <span>{props.lastUpdatedTime}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const cardsValues = [\r\n    {\r\n      id: 1,\r\n      numbers: 364,\r\n      cases: \"Total Cases\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-medicine\",\r\n    },\r\n    {\r\n      id: 2,\r\n      numbers: 241,\r\n      cases: \"Patients\",\r\n      lastUpdatedTime: \"3 hours ago\",\r\n      icofontClass: \"icofont-patient-file\",\r\n    },\r\n    {\r\n      id: 3,\r\n      numbers: 82,\r\n      cases: \"Doctors\",\r\n      lastUpdatedTime: \"7 hours ago\",\r\n      icofontClass: \"icofont-doctor\",\r\n    },\r\n    {\r\n      id: 4,\r\n      numbers: 43,\r\n      cases: \"Schedules\",\r\n      lastUpdatedTime: \"12 hours ago\",\r\n      icofontClass: \"icofont-delivery-time\",\r\n    },\r\n  ];\r\n\r\n  export default cardsValues;\r\n","import { Cards } from './cards'\r\nimport cardsValues from './cards-values'\r\n\r\nexport const CardBox = () => {\r\n    const vals = cardsValues.map(item => {\r\n        return (<Cards\r\n            key={item.id}\r\n            numbers={item.numbers}\r\n            totalCases={item.cases}\r\n            lastUpdatedTime={item.lastUpdatedTime}\r\n            icofontClass={item.icofontClass}\r\n        />)\r\n    })\r\n\r\n    return (\r\n        \r\n        <div className=\"cardBox\">\r\n            {vals}\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const DoctorsListItem = props => {\r\n    return (\r\n        <div\r\n            className={props.selectedDoctor === props.id ? \"d-list-item active\" : \"d-list-item\"}\r\n            onClick={() => props.setItem(props.id)}\r\n        >\r\n            <div className=\"image-part\">\r\n                <img src={props.src || \"../portfolio/avatar.png\"} alt=\"\" />\r\n                <p><span>♥</span>{props.rating}</p>\r\n            </div>\r\n            <div className=\"name-part\">\r\n                <h3>{props.name}</h3>\r\n                <h4>{props.specialization}</h4>\r\n                <span className={props.status?.toLowerCase()}>\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { DoctorsTabHeaders } from \"../../doctors-profile/tab-pages/doctors-tab-headers\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Personal } from \"../../doctors-profile/tab-pages/personal\";\r\nimport { Contact } from \"../../doctors-profile/tab-pages/contact\";\r\nimport { ApiPath } from \"../../assets/common/base-url\";\r\nimport { Portfolio } from \"../../doctors-profile/tab-pages/portfolio\";\r\n\r\nconst Doctors = props => {\r\n\r\n    const [doctorsData, setDoctorsData] = useState('');\r\n    const [selectedTab, setSelectedTab] = useState(2);\r\n    const [resetData, setResetData] = useState(true);\r\n\r\n    //Fetch the data on form load...\r\n    const idValue = props.selectedDoctor;\r\n    const params = {\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n        'method': 'GET',\r\n    }\r\n\r\n    const fetchUsersData = () => {\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/search/\" + idValue, params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsData(res.data);\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n        //Always remember to reset the data...\r\n        setResetData(false);\r\n\r\n    }\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n\r\n    }, [resetData, props.selectedDoctor])\r\n\r\n    const activateProfile = () => {\r\n        //Simply make the verification status of the particular individual Active...\r\n        const data = {\r\n            verification: {\r\n                \"uidNo\" : props.selectedDoctor,\r\n                status: \"Active\",\r\n            }\r\n        }\r\n\r\n        const options = {\r\n            'body': JSON.stringify(data),\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem(\"token\")}`\r\n            },\r\n            'method': \"POST\",\r\n        }\r\n\r\n        props.setIsLoaderVisible(true)\r\n\r\n        //Then update just this data...\r\n        fetch(ApiPath + \"mahadmin/verifyDoctor\", options)\r\n            ?.then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                return response.json();\r\n            })\r\n            .then(response => {\r\n                props.setIsLoaderVisible(false);\r\n                if (response && response.statusCode === 200) {\r\n                    props.showToast(\"Update successful!\", 'success');\r\n                    props.hideDialog();\r\n\r\n                    //Remember to refresh the fetched data after this..\r\n                    setResetData(true);\r\n\r\n                } else {\r\n                    props.showToast(response.message, 'exclamation');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(error.message, 'exclamation');\r\n            })\r\n    }\r\n    const displayActivate = doctorsData.verification?.status !== \"Pending\" ? \"d-none\" : \"btn-main\";\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"dash-body-container\">\r\n                <div className=\"left-container\">\r\n                    <div className=\"profile-image\">\r\n                        <img\r\n                            src={doctorsData.photo || \"/portfolio/avatar.png\"}\r\n                            alt=\"\"\r\n                        />\r\n                        <div className=\"title\">\r\n                            <h2>{doctorsData.name}</h2>\r\n                            {/* <h4><i className=\"icofont-location-pin\"></i> Michigan, MC, USA</h4> */}\r\n                        </div>\r\n                        <h3>{doctorsData.specialization?.certification}</h3>\r\n                        <button\r\n                            id=\"btnActivate\"\r\n                            className={displayActivate}\r\n                            onClick={activateProfile}\r\n                        >\r\n                            Activate Profile\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"upcoming-appointment\">\r\n                        <div className=\"line-container\">\r\n                            <h4><i className=\"icofont-double-right\"></i>Doctor's Details</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <DoctorsTabHeaders\r\n                        selectedTab={selectedTab}\r\n                        setSelectedTab={setSelectedTab}\r\n                    />\r\n\r\n                    {selectedTab === 1 && <Contact\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 2 && <Personal\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                    {selectedTab === 3 && <Portfolio\r\n                        setResetData={setResetData}\r\n                        data={doctorsData}\r\n                        showToast={props.showToast}\r\n                        setIsLoaderVisible={props.setIsLoaderVisible}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;","import React, { useState, useEffect } from 'react';\r\nimport { ApiPath } from '../../assets/common/base-url';\r\nimport { Header } from \"../../components/header\";\r\nimport { CardBox } from './cardbox';\r\nimport { DoctorsListItem } from './doctors-list-item';\r\nimport Doctors from './doctors'\r\n\r\nconst Dashboard = props => {\r\n\r\n    const [txtSearch, setTxtSearch] = useState(\"\");\r\n    const [doctorsList, setDoctorsList] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n\r\n    const fetchDoctors = () => {\r\n        const params = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`,\r\n            },\r\n            method: 'GET'\r\n        }\r\n\r\n        props.setIsLoaderVisible(true);\r\n\r\n        fetch(ApiPath + \"query/Doctor\", params)\r\n            ?.then(response => (response.json()))\r\n            .then(res => {\r\n                props.setIsLoaderVisible(false)\r\n\r\n                if (res.statusCode === 200) {\r\n                    setDoctorsList(res.data);\r\n                    setSelectedDoctor(res.data[0]?.uidNo)\r\n\r\n                    console.log(res.data[0]?.uidNo)\r\n                } else {\r\n                    props.showToast(res.message, 'exclamation');\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                props.setIsLoaderVisible(false);\r\n                props.showToast(err.message, 'exclamation');\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Load a doctors' list immediately the form loads...\r\n        fetchDoctors();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const output = doctorsList.filter(item => item.name === txtSearch)\r\n    //     if (txtSearch !== \"\") {\r\n    //         setDoctorsList(output)\r\n    //     } else if (txtSearch === \"\") {\r\n    //         setDoctorsList(doctorsList);\r\n    //     }\r\n\r\n    //     setSelectedDoctor(doctorsList[0]?.id)\r\n\r\n    // }, [txtSearch])\r\n\r\n    const listItems = doctorsList.map((item, index) => {\r\n        return (\r\n            <DoctorsListItem\r\n                id={item.uidNo}\r\n                name={item.name}\r\n                src={item.photo}\r\n                rating={`4.${Math.floor(Math.random() * 9)}`}\r\n                specialization={item.specialization?.certification}\r\n                status={item.verification?.status}\r\n                key={index}\r\n                setItem={value => setSelectedDoctor(value)}\r\n                selectedDoctor={selectedDoctor}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='main'>\r\n                <CardBox />\r\n                <div className='main-content'>\r\n                    <div className=\"left-main mt-2\">\r\n                        <div className=\"input-group d-none\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"txtSearch\"\r\n                                type=\"text\"\r\n                                value={txtSearch}\r\n                                onChange={e => setTxtSearch(e.target.value)}\r\n                                placeholder='Search for Doctor'\r\n\r\n                            />\r\n                            <i className=\"icofont-search\"></i>\r\n                        </div>\r\n                        <div className='doctors-list'>\r\n                            {listItems}\r\n                        </div>\r\n                    </div>\r\n                    <div className='right-main'>\r\n                        {selectedDoctor && selectedDoctor !== '' && <Doctors\r\n                            setIsLoaderVisible={props.setIsLoaderVisible}\r\n                            showToast={props.showToast}\r\n                            selectedDoctor={selectedDoctor}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { Login } from './login/login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Register } from './register/register';\nimport Loader from './components/loader';\nimport { useState } from 'react';\nimport Toast from './components/toast';\nimport Patients from './patients-profile/patients';\nimport Doctors from './doctors-profile/doctors';\nimport { DoctorsLogin } from './login/doctors-login';\nimport Dashboard from './admin/dashboard/dashboard';\n\nfunction App() {\n\n  const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n  const [toastVis, setToastVis] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [msgBoxType, setMsgBoxType] = useState(\"success\");\n\n  const ShowToast = (message, messageBoxType) => {\n    setToastMsg(message);\n    setMsgBoxType(messageBoxType);\n    setToastVis(true);\n  }\n\n  return (\n    <>\n      <Loader isVisible={isLoaderVisible} />\n      <Toast\n        toastMessage={toastMsg}\n        msgBoxType={msgBoxType}\n        toastVisibility={toastVis}\n        setToastVisibility={setToastVis}\n      />\n      <Router basename='/Austin'>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Login showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/patients/profile\">\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/profile\">\n            <Doctors showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/doctors/login\">\n            <DoctorsLogin showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"/admin/dashboard\">\n            <Dashboard showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n          <Route path=\"*\">\n            {/* Re-route to the patient's main page... */}\n            <Patients showToast={ShowToast} setIsLoaderVisible={setIsLoaderVisible} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/dashboard.css'\nimport './assets/css/new-loader.css'\nimport './assets/css/main.css'\nimport './assets/css/toast.css'\nimport './assets/css/scrollbar.css'\nimport './assets/css/dialog.css'\nimport './assets/css/tab-pages.css'\nimport './assets/200/icofont/icofont.min.css'\nimport './assets/200/boxicons/css/boxicons.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}